2024-11-27 11:27:47,128 - INFO - Configuration loaded successfully.
2024-11-27 11:27:47,148 - INFO - Using device: cpu
2024-11-27 11:27:47,149 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 11:27:49,051 - INFO - Indexed data loaded successfully.
2024-11-27 11:27:51,319 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_4.json
2024-11-27 11:28:07,849 - INFO - Indexed data saved successfully.
2024-11-27 11:28:07,943 - INFO - 
Search results for query 'example search query':
2024-11-27 11:28:07,943 - INFO - - Path: , Text: Reranks a list of documents based on their relevance to the query
2024-11-27 11:28:07,966 - INFO - - Path: , Text: Async: Reranks a list of documents based on their relevance to the query
2024-11-27 11:28:07,966 - INFO - - Path: , Text: Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set.
2024-11-27 11:30:21,117 - INFO - Configuration loaded successfully.
2024-11-27 11:30:21,120 - INFO - Using device: cpu
2024-11-27 11:30:21,121 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 11:30:21,124 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 11:30:21,226 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:30:21,279 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 11:30:21,324 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 11:30:21,381 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:30:21,443 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 11:30:21,522 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 11:30:21,569 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 11:30:21,802 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 11:30:21,876 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 11:30:21,921 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 11:30:23,428 - INFO - Indexed data loaded successfully.
2024-11-27 11:30:25,026 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 11:30:25,026 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 11:30:25,661 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_5.json
2024-11-27 11:30:43,604 - INFO - Indexed data saved successfully.
2024-11-27 11:30:43,689 - INFO - 
Search results for query 'example search query':
2024-11-27 11:30:43,689 - INFO - - Path: , Text: Reranks a list of documents based on their relevance to the query
2024-11-27 11:30:43,689 - INFO - - Path: , Text: Async: Reranks a list of documents based on their relevance to the query
2024-11-27 11:30:43,689 - INFO - - Path: , Text: Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set.
2024-11-27 11:31:41,373 - INFO - Configuration loaded successfully.
2024-11-27 11:31:41,377 - INFO - Using device: cpu
2024-11-27 11:31:41,379 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 11:31:41,383 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 11:31:41,479 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:31:41,517 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 11:31:41,548 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 11:31:41,601 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:31:41,638 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 11:31:41,671 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 11:31:41,719 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 11:31:41,974 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 11:31:42,070 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 11:31:42,110 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 11:31:43,950 - INFO - Indexed data loaded successfully.
2024-11-27 11:31:45,533 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 11:31:45,535 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 11:31:46,162 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_6.json
2024-11-27 11:32:04,273 - INFO - Indexed data saved successfully.
2024-11-27 11:32:04,341 - INFO - 
Search results for query 'example search query':
2024-11-27 11:32:04,342 - INFO - - Path: , Text: Reranks a list of documents based on their relevance to the query
2024-11-27 11:32:04,343 - INFO - - Path: , Text: Async: Reranks a list of documents based on their relevance to the query
2024-11-27 11:32:04,344 - INFO - - Path: , Text: Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set.
2024-11-27 11:34:49,094 - INFO - Configuration loaded successfully.
2024-11-27 11:34:49,098 - INFO - Using device: cpu
2024-11-27 11:34:49,099 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 11:34:49,099 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 11:34:49,195 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:34:49,370 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 11:34:49,429 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 11:34:49,479 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:34:49,529 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 11:34:49,570 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 11:34:49,610 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 11:34:49,843 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 11:34:49,913 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 11:34:49,960 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 11:34:52,163 - INFO - Indexed data loaded successfully.
2024-11-27 11:34:53,740 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 11:34:53,740 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 11:34:54,365 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_7.json
2024-11-27 11:35:12,797 - INFO - Indexed data saved successfully.
2024-11-27 11:35:12,852 - INFO - Starting search for query: example search query
2024-11-27 11:35:12,855 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.0018210000125691295>
2024-11-27 11:35:12,892 - INFO - BERT search results: [{'source': 'BERT', 'path': '', 'text': 'Reranks a list of documents based on their relevance to the query', 'score': np.float32(-46.28978)}, {'source': 'BERT', 'path': '', 'text': 'Async: Reranks a list of documents based on their relevance to the query', 'score': np.float32(-51.690987)}, {'source': 'BERT', 'path': '', 'text': 'Stores the necessary information to build the request to retrieve the next page.\n\nEither `url` or `params` must be set.', 'score': np.float32(-54.28866)}]
2024-11-27 11:35:12,894 - INFO - Final combined search results: [{'source': 'BERT', 'path': '', 'text': 'Reranks a list of documents based on their relevance to the query', 'score': np.float32(-46.28978)}, {'source': 'BERT', 'path': '', 'text': 'Async: Reranks a list of documents based on their relevance to the query', 'score': np.float32(-51.690987)}, {'source': 'BERT', 'path': '', 'text': 'Stores the necessary information to build the request to retrieve the next page.\n\nEither `url` or `params` must be set.', 'score': np.float32(-54.28866)}]
2024-11-27 11:35:12,897 - INFO - 
Search results for query 'example search query':
2024-11-27 11:35:12,899 - INFO - - Path: , Text: Reranks a list of documents based on their relevance to the query
2024-11-27 11:35:12,899 - INFO - - Path: , Text: Async: Reranks a list of documents based on their relevance to the query
2024-11-27 11:35:12,899 - INFO - - Path: , Text: Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set.
2024-11-27 11:42:22,891 - INFO - Configuration loaded successfully.
2024-11-27 11:42:22,895 - INFO - Using device: cpu
2024-11-27 11:42:22,897 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 11:42:22,902 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 11:42:22,977 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:42:23,018 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 11:42:23,049 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 11:42:23,110 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:42:23,137 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 11:42:23,189 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 11:42:25,467 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 11:42:25,731 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 11:42:25,789 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 11:42:25,851 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 11:42:28,350 - INFO - Indexed data loaded successfully.
2024-11-27 11:42:29,963 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 11:42:29,966 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 11:42:30,583 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_8.json
2024-11-27 11:42:50,466 - INFO - Indexed data saved successfully.
2024-11-27 11:42:50,512 - INFO - Starting search for query: example search query
2024-11-27 11:42:50,526 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.0017087000014726073>
2024-11-27 11:42:50,542 - INFO - BERT search results: [{'source': 'BERT', 'path': '', 'text': 'Reranks a list of documents based on their relevance to the query', 'score': np.float32(-46.28978)}, {'source': 'BERT', 'path': '', 'text': 'Async: Reranks a list of documents based on their relevance to the query', 'score': np.float32(-51.690987)}, {'source': 'BERT', 'path': '', 'text': 'Stores the necessary information to build the request to retrieve the next page.\n\nEither `url` or `params` must be set.', 'score': np.float32(-54.28866)}]
2024-11-27 11:42:50,543 - INFO - Final combined search results: [{'source': 'BERT', 'path': '', 'text': 'Reranks a list of documents based on their relevance to the query', 'score': np.float32(-46.28978)}, {'source': 'BERT', 'path': '', 'text': 'Async: Reranks a list of documents based on their relevance to the query', 'score': np.float32(-51.690987)}, {'source': 'BERT', 'path': '', 'text': 'Stores the necessary information to build the request to retrieve the next page.\n\nEither `url` or `params` must be set.', 'score': np.float32(-54.28866)}]
2024-11-27 11:42:50,545 - INFO - Source: BERT, Score: -46.28977966308594, Text: Reranks a list of documents based on their relevance to the query...
2024-11-27 11:42:50,545 - INFO - Source: BERT, Score: -51.69098663330078, Text: Async: Reranks a list of documents based on their relevance to the query...
2024-11-27 11:42:50,546 - INFO - Source: BERT, Score: -54.288658142089844, Text: Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set....
2024-11-27 11:42:50,547 - INFO - Element Info: {}
2024-11-27 11:42:50,548 - INFO - Element Info: {}
2024-11-27 11:42:50,548 - INFO - Element Info: {}
2024-11-27 11:42:50,548 - INFO - 
Search results for query 'example search query':
2024-11-27 11:44:35,771 - INFO - Configuration loaded successfully.
2024-11-27 11:44:35,771 - INFO - Using device: cpu
2024-11-27 11:44:35,780 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 11:44:35,785 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 11:44:35,890 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:44:35,922 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 11:44:35,974 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 11:44:36,015 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:44:36,057 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 11:44:36,113 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 11:44:36,139 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 11:44:36,380 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 11:44:36,493 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 11:44:36,545 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 11:44:39,427 - INFO - Indexed data loaded successfully.
2024-11-27 11:44:40,998 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 11:44:41,000 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 11:44:41,642 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_9.json
2024-11-27 11:45:01,880 - INFO - Indexed data saved successfully.
2024-11-27 11:45:01,936 - INFO - Starting search for query: example search query
2024-11-27 11:45:01,948 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.0016611999890301377>
2024-11-27 11:45:01,966 - INFO - BERT search results: [{'source': 'BERT', 'path': '', 'text': 'Reranks a list of documents based on their relevance to the query', 'score': np.float32(-46.28978)}, {'source': 'BERT', 'path': '', 'text': 'Async: Reranks a list of documents based on their relevance to the query', 'score': np.float32(-51.690987)}, {'source': 'BERT', 'path': '', 'text': 'Stores the necessary information to build the request to retrieve the next page.\n\nEither `url` or `params` must be set.', 'score': np.float32(-54.28866)}]
2024-11-27 11:45:01,968 - INFO - Final combined search results: [{'source': 'BERT', 'path': '', 'text': 'Reranks a list of documents based on their relevance to the query', 'score': np.float32(-46.28978)}, {'source': 'BERT', 'path': '', 'text': 'Async: Reranks a list of documents based on their relevance to the query', 'score': np.float32(-51.690987)}, {'source': 'BERT', 'path': '', 'text': 'Stores the necessary information to build the request to retrieve the next page.\n\nEither `url` or `params` must be set.', 'score': np.float32(-54.28866)}]
2024-11-27 11:45:01,970 - INFO - Source: BERT, Score: -46.28977966308594, Text: Reranks a list of documents based on their relevance to the query...
2024-11-27 11:45:01,971 - INFO - Source: BERT, Score: -51.69098663330078, Text: Async: Reranks a list of documents based on their relevance to the query...
2024-11-27 11:45:01,972 - INFO - Source: BERT, Score: -54.288658142089844, Text: Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set....
2024-11-27 11:45:01,974 - INFO - Element Info: {}
2024-11-27 11:45:01,975 - INFO - Element Info: {}
2024-11-27 11:45:01,976 - INFO - Element Info: {}
2024-11-27 11:45:01,977 - INFO - 
Search results for query 'example search query':
2024-11-27 11:47:04,926 - INFO - Configuration loaded successfully.
2024-11-27 11:47:04,930 - INFO - Using device: cpu
2024-11-27 11:47:04,932 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 11:47:04,936 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 11:47:05,009 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:47:05,087 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 11:47:05,126 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 11:47:05,163 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:47:05,204 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 11:47:05,308 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 11:47:05,348 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 11:47:05,568 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 11:47:05,646 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 11:47:05,694 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 11:47:08,847 - INFO - Indexed data loaded successfully.
2024-11-27 11:47:10,412 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 11:47:10,412 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 11:47:11,051 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_10.json
2024-11-27 11:47:32,068 - INFO - Indexed data saved successfully.
2024-11-27 11:47:32,115 - INFO - Starting search for query: example search query
2024-11-27 11:47:32,132 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.0026458000065758824>
2024-11-27 11:47:32,147 - INFO - BERT search results: [{'source': 'BERT', 'path': '', 'text': 'Reranks a list of documents based on their relevance to the query', 'score': np.float32(-46.28978)}, {'source': 'BERT', 'path': '', 'text': 'Async: Reranks a list of documents based on their relevance to the query', 'score': np.float32(-51.690987)}, {'source': 'BERT', 'path': '', 'text': 'Stores the necessary information to build the request to retrieve the next page.\n\nEither `url` or `params` must be set.', 'score': np.float32(-54.28866)}]
2024-11-27 11:47:32,149 - INFO - Final combined search results: [{'source': 'BERT', 'path': '', 'text': 'Reranks a list of documents based on their relevance to the query', 'score': np.float32(-46.28978)}, {'source': 'BERT', 'path': '', 'text': 'Async: Reranks a list of documents based on their relevance to the query', 'score': np.float32(-51.690987)}, {'source': 'BERT', 'path': '', 'text': 'Stores the necessary information to build the request to retrieve the next page.\n\nEither `url` or `params` must be set.', 'score': np.float32(-54.28866)}]
2024-11-27 11:47:32,150 - INFO - Source: BERT, Score: -46.28977966308594, Text: Reranks a list of documents based on their relevance to the query...
2024-11-27 11:47:32,150 - INFO - Source: BERT, Score: -51.69098663330078, Text: Async: Reranks a list of documents based on their relevance to the query...
2024-11-27 11:47:32,151 - INFO - Source: BERT, Score: -54.288658142089844, Text: Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set....
2024-11-27 11:47:32,151 - INFO - Element Info: {}
2024-11-27 11:47:32,151 - INFO - Element Info: {}
2024-11-27 11:47:32,151 - INFO - Element Info: {}
2024-11-27 11:47:32,151 - INFO - 
Search results for query 'example search query':
2024-11-27 11:49:06,755 - INFO - Configuration loaded successfully.
2024-11-27 11:49:06,755 - INFO - Using device: cpu
2024-11-27 11:49:06,755 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 11:49:06,771 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 11:49:06,851 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:49:06,886 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 11:49:06,937 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 11:49:06,972 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:49:07,010 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 11:49:07,051 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 11:49:07,094 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 11:49:07,318 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 11:49:07,385 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 11:49:07,421 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 11:49:11,005 - INFO - Indexed data loaded successfully.
2024-11-27 11:49:12,572 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 11:49:12,574 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 11:49:13,208 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_11.json
2024-11-27 11:49:35,072 - INFO - Indexed data saved successfully.
2024-11-27 11:49:35,134 - INFO - Starting search for query: example search query
2024-11-27 11:49:35,160 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.002040899998974055>
2024-11-27 11:49:35,179 - INFO - BERT search results: [{'source': 'BERT', 'path': '', 'text': 'Reranks a list of documents based on their relevance to the query', 'score': np.float32(-46.28978)}, {'source': 'BERT', 'path': '', 'text': 'Async: Reranks a list of documents based on their relevance to the query', 'score': np.float32(-51.690987)}, {'source': 'BERT', 'path': '', 'text': 'Stores the necessary information to build the request to retrieve the next page.\n\nEither `url` or `params` must be set.', 'score': np.float32(-54.28866)}]
2024-11-27 11:49:35,180 - INFO - Final combined search results: [{'source': 'BERT', 'path': '', 'text': 'Reranks a list of documents based on their relevance to the query', 'score': np.float32(-46.28978)}, {'source': 'BERT', 'path': '', 'text': 'Async: Reranks a list of documents based on their relevance to the query', 'score': np.float32(-51.690987)}, {'source': 'BERT', 'path': '', 'text': 'Stores the necessary information to build the request to retrieve the next page.\n\nEither `url` or `params` must be set.', 'score': np.float32(-54.28866)}]
2024-11-27 11:49:35,182 - INFO - Source: BERT, Score: -46.28977966308594, Text: Reranks a list of documents based on their relevance to the query...
2024-11-27 11:49:35,183 - INFO - Source: BERT, Score: -51.69098663330078, Text: Async: Reranks a list of documents based on their relevance to the query...
2024-11-27 11:49:35,184 - INFO - Source: BERT, Score: -54.288658142089844, Text: Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set....
2024-11-27 11:49:35,186 - INFO - Element Info: {}
2024-11-27 11:49:35,186 - INFO - Element Info: {}
2024-11-27 11:49:35,186 - INFO - Element Info: {}
2024-11-27 11:49:35,187 - INFO - 
Search results for query 'example search query':
2024-11-27 11:53:57,521 - INFO - Configuration loaded successfully.
2024-11-27 11:53:57,536 - INFO - Using device: cpu
2024-11-27 11:53:57,543 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 11:53:57,546 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 11:53:57,643 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:53:57,677 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 11:53:57,736 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 11:53:57,792 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 11:53:57,883 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 11:53:57,938 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 11:53:57,977 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 11:53:58,304 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 11:53:58,366 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 11:53:58,474 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 11:54:02,475 - INFO - Indexed data loaded successfully.
2024-11-27 11:54:04,351 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 11:54:04,351 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 11:54:05,089 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_12.json
2024-11-27 11:54:28,942 - INFO - Indexed data saved successfully.
2024-11-27 11:54:29,007 - INFO - Configuration loaded successfully.
2024-11-27 11:54:29,007 - INFO - Starting search for query: example search query
2024-11-27 11:54:45,169 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.0029497000214178115>
2024-11-27 11:54:49,241 - INFO - Final combined search results: []
2024-11-27 11:55:11,583 - INFO - 
Search results for query 'example search query':
2024-11-27 13:47:24,341 - INFO - Configuration loaded successfully.
2024-11-27 13:47:24,346 - INFO - Using device: cpu
2024-11-27 13:47:24,349 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 13:47:24,355 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 13:47:24,457 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 13:47:24,498 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 13:47:24,535 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 13:47:24,578 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 13:47:24,627 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 13:47:24,665 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 13:47:24,706 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 13:47:25,198 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 13:47:25,259 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 13:47:25,353 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 13:47:29,710 - INFO - Indexed data loaded successfully.
2024-11-27 13:47:32,132 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 13:47:32,148 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 13:47:32,881 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_13.json
2024-11-27 13:47:57,470 - INFO - Indexed data saved successfully.
2024-11-27 13:47:57,532 - INFO - Configuration loaded successfully.
2024-11-27 13:47:57,539 - INFO - Starting search for query: example search query
2024-11-27 13:48:18,631 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.0025430000096093863>
2024-11-27 13:48:22,070 - INFO - Final combined search results: []
2024-11-27 13:48:22,070 - INFO - 
Search results for query 'example search query':
2024-11-27 13:50:08,517 - INFO - Configuration loaded successfully.
2024-11-27 13:50:08,522 - INFO - Using device: cpu
2024-11-27 13:50:08,523 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 13:50:08,532 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 13:50:08,603 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 13:50:08,666 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 13:50:08,703 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 13:50:08,748 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 13:50:08,782 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 13:50:08,829 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 13:50:08,884 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 13:50:09,194 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 13:50:09,277 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 13:50:09,354 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 13:50:14,049 - INFO - Indexed data loaded successfully.
2024-11-27 13:50:15,945 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 13:50:15,945 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 13:50:16,711 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_14.json
2024-11-27 13:50:16,734 - INFO - Indexing document: APIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:16,740 - INFO - Indexing document: APIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:50:16,742 - INFO - Indexing document: APIResponse.elapsed - The time taken for the complete request/response cycle to complete....
2024-11-27 13:50:16,742 - INFO - Indexing document: APIResponse.http_request - Returns the httpx Request instance associated with the current response....
2024-11-27 13:50:16,742 - INFO - Indexing document: APIResponse.is_closed - Whether or not the response body has been closed.

If this is False then there is response data that has not been read yet.
You must either fully consume the response body or call `.close()`
before di...
2024-11-27 13:50:16,742 - INFO - Indexing document: APIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 13:50:16,742 - INFO - Indexing document: APIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 13:50:16,750 - INFO - Indexing document: APIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 13:50:16,751 - INFO - Indexing document: APIResponse.json - Read and decode the JSON response content....
2024-11-27 13:50:16,752 - INFO - Indexing document: APIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 13:50:16,752 - INFO - Indexing document: APIResponse.read - Read and return the binary response content....
2024-11-27 13:50:16,752 - INFO - Indexing document: APIResponse.text - Read and decode the response content into a string....
2024-11-27 13:50:16,752 - INFO - Indexing document: APIResponse.url - Returns the URL for which the request was made....
2024-11-27 13:50:16,752 - INFO - Indexing document: AssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 13:50:16,757 - INFO - Indexing document: AssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 13:50:16,759 - INFO - Indexing document: AssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 13:50:16,759 - INFO - Indexing document: AssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 13:50:16,761 - INFO - Indexing document: AssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 13:50:16,762 - INFO - Indexing document: AssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 13:50:16,762 - INFO - Indexing document: AssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 13:50:16,762 - INFO - Indexing document: AssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 13:50:16,762 - INFO - Indexing document: AssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 13:50:16,762 - INFO - Indexing document: AssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 13:50:16,762 - INFO - Indexing document: AssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 13:50:16,762 - INFO - Indexing document: AssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 13:50:16,771 - INFO - Indexing document: AssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 13:50:16,771 - INFO - Indexing document: AssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 13:50:16,771 - INFO - Indexing document: AssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 13:50:16,771 - INFO - Indexing document: AssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 13:50:16,771 - INFO - Indexing document: AssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 13:50:16,771 - INFO - Indexing document: AssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 13:50:16,771 - INFO - Indexing document: AssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 13:50:16,771 - INFO - Indexing document: AssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 13:50:16,771 - INFO - Indexing document: AssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 13:50:16,771 - INFO - Indexing document: AssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 13:50:16,771 - INFO - Indexing document: AsyncAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:16,771 - INFO - Indexing document: AsyncAPIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:50:16,771 - INFO - Indexing document: AsyncAPIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 13:50:16,771 - INFO - Indexing document: AsyncAPIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 13:50:16,771 - INFO - Indexing document: AsyncAPIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 13:50:16,788 - INFO - Indexing document: AsyncAPIResponse.json - Read and decode the JSON response content....
2024-11-27 13:50:16,789 - INFO - Indexing document: AsyncAPIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 13:50:16,790 - INFO - Indexing document: AsyncAPIResponse.read - Read and return the binary response content....
2024-11-27 13:50:16,791 - INFO - Indexing document: AsyncAPIResponse.text - Read and decode the response content into a string....
2024-11-27 13:50:16,792 - INFO - Indexing document: AsyncAssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 13:50:16,793 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 13:50:16,794 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 13:50:16,795 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 13:50:16,810 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 13:50:16,810 - INFO - Indexing document: AsyncAssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 13:50:16,810 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 13:50:16,810 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 13:50:16,810 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 13:50:16,810 - INFO - Indexing document: AsyncAssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 13:50:16,810 - INFO - Indexing document: AsyncAzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:16,810 - INFO - Indexing document: AsyncAzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 13:50:16,810 - INFO - Indexing document: AsyncClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:16,819 - INFO - Indexing document: AsyncStream - Provides the core interface to iterate over an asynchronous stream response....
2024-11-27 13:50:16,820 - INFO - Indexing document: AsyncStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:50:16,822 - INFO - Indexing document: AzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:16,824 - INFO - Indexing document: AzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 13:50:16,825 - INFO - Indexing document: BaseModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:16,828 - INFO - Indexing document: BaseModel.model_copy - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#model_copy

Returns a copy of the model.

Args:
    update: Values to change/add in the new model. Note: the data is not validated
  ...
2024-11-27 13:50:16,828 - INFO - Indexing document: BaseModel.model_dump - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump

Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

Args:
...
2024-11-27 13:50:16,828 - INFO - Indexing document: BaseModel.model_dump_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump_json

Generates a JSON representation of the model using Pydantic's `to_json` method.

Args:
    indent: Indentation ...
2024-11-27 13:50:16,828 - INFO - Indexing document: BaseModel.model_extra - Get extra fields set during validation.

Returns:
    A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`....
2024-11-27 13:50:16,828 - INFO - Indexing document: BaseModel.model_fields_set - Returns the set of fields that have been explicitly set on this model instance.

Returns:
    A set of strings representing the fields that have been set,
        i.e. that were not filled from defaul...
2024-11-27 13:50:16,828 - INFO - Indexing document: BaseModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:16,828 - INFO - Indexing document: BaseModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:16,844 - INFO - Indexing document: BaseModel.model_post_init - Override this method to perform additional initialization after `__init__` and `model_construct`.
This is useful if you want to do some validation that requires the entire model to be initialized....
2024-11-27 13:50:16,844 - INFO - Indexing document: BaseModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:16,844 - INFO - Indexing document: BaseModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:16,844 - INFO - Indexing document: BaseModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:16,851 - INFO - Indexing document: BaseModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:16,854 - INFO - Indexing document: BaseModel.to_dict - Recursively generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

By default, fields that were not set by the API will not be included,
and keys...
2024-11-27 13:50:16,856 - INFO - Indexing document: BaseModel.to_json - Generates a JSON string representing this model as it would be received from or sent to the API (but with indentation).

By default, fields that were not set by the API will not be included,
and keys ...
2024-11-27 13:50:16,858 - INFO - Indexing document: Client - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:16,860 - INFO - Indexing document: DefaultAsyncHttpxClient - An asynchronous HTTP client, with connection pooling, HTTP/2, redirects,
cookie persistence, etc.

It can be shared between tasks.

Usage:

```python
>>> async with httpx.AsyncClient() as client:
>>> ...
2024-11-27 13:50:16,864 - INFO - Indexing document: DefaultAsyncHttpxClient.aclose - Close transport and proxies....
2024-11-27 13:50:16,864 - INFO - Indexing document: DefaultAsyncHttpxClient.auth - Authentication class used when none is passed at the request-level.

See also [Authentication][0].

[0]: /quickstart/#authentication...
2024-11-27 13:50:16,866 - INFO - Indexing document: DefaultAsyncHttpxClient.base_url - Base URL to use when sending requests with relative URLs....
2024-11-27 13:50:16,868 - INFO - Indexing document: DefaultAsyncHttpxClient.build_request - Build and return a request instance.

* The `params`, `headers` and `cookies` arguments
are merged with any values set on the client.
* The `url` argument is merged with any `base_url` set on the clie...
2024-11-27 13:50:16,870 - INFO - Indexing document: DefaultAsyncHttpxClient.cookies - Cookie values to include when sending requests....
2024-11-27 13:50:16,871 - INFO - Indexing document: DefaultAsyncHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,872 - INFO - Indexing document: DefaultAsyncHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,873 - INFO - Indexing document: DefaultAsyncHttpxClient.headers - HTTP headers to include when sending requests....
2024-11-27 13:50:16,874 - INFO - Indexing document: DefaultAsyncHttpxClient.is_closed - Check if the client being closed...
2024-11-27 13:50:16,875 - INFO - Indexing document: DefaultAsyncHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,876 - INFO - Indexing document: DefaultAsyncHttpxClient.params - Query parameters to include in the URL when sending requests....
2024-11-27 13:50:16,877 - INFO - Indexing document: DefaultAsyncHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,878 - INFO - Indexing document: DefaultAsyncHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,879 - INFO - Indexing document: DefaultAsyncHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,880 - INFO - Indexing document: DefaultAsyncHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = await client.send(request, ...)
```

See `AsyncClient.build_request()`, `AsyncClient.send()`
and [Me...
2024-11-27 13:50:16,883 - INFO - Indexing document: DefaultAsyncHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `AsyncClient.build_request()`
so that any client-level configuration is merged into the request,
but pa...
2024-11-27 13:50:16,885 - INFO - Indexing document: DefaultAsyncHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 13:50:16,887 - INFO - Indexing document: DefaultHttpxClient - An HTTP client, with connection pooling, HTTP/2, redirects, cookie persistence, etc.

It can be shared between threads.

Usage:

```python
>>> client = httpx.Client()
>>> response = client.get('https:...
2024-11-27 13:50:16,891 - INFO - Indexing document: DefaultHttpxClient.close - Close transport and proxies....
2024-11-27 13:50:16,892 - INFO - Indexing document: DefaultHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,893 - INFO - Indexing document: DefaultHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,894 - INFO - Indexing document: DefaultHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,896 - INFO - Indexing document: DefaultHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,897 - INFO - Indexing document: DefaultHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,898 - INFO - Indexing document: DefaultHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:50:16,899 - INFO - Indexing document: DefaultHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = client.send(request, ...)
```

See `Client.build_request()`, `Client.send()` and
[Merging of configu...
2024-11-27 13:50:16,903 - INFO - Indexing document: DefaultHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `Client.build_request()`
so that any client-level configuration is merged into the request,
but passing...
2024-11-27 13:50:16,905 - INFO - Indexing document: DefaultHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 13:50:16,908 - INFO - Indexing document: NotGiven - A sentinel singleton class used to distinguish omitted keyword arguments
from those passed in with the value None (which may have different behavior).

For example:

```py
def get(timeout: Union[int, ...
2024-11-27 13:50:16,908 - INFO - Indexing document: RequestOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:16,908 - INFO - Indexing document: Stream - Provides the core interface to iterate over a synchronous stream response....
2024-11-27 13:50:16,912 - INFO - Indexing document: Stream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:50:16,914 - INFO - Indexing document: Timeout - Timeout configuration.

**Usage**:

Timeout(None)               # No timeouts.
Timeout(5.0)                # 5s timeout on all operations.
Timeout(None, connect=5.0)  # 5s timeout on connect, no other...
2024-11-27 13:50:16,916 - INFO - Indexing document: Transport.handle_request - Send a single HTTP request and return a response.

Developers shouldn't typically ever need to call into this API directly,
since the Client class provides all the higher level user-facing API
nicetie...
2024-11-27 13:50:16,917 - INFO - Indexing document: lib.azure.Any - Special type indicating an unconstrained type.

- Any is compatible with every type.
- Any assumed to have all methods.
- All values assumed to be instances of Any.

Note that all the above statements...
2024-11-27 13:50:16,917 - INFO - Indexing document: lib.azure.BaseAzureClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:16,922 - INFO - Indexing document: lib.azure.BaseClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:16,924 - INFO - Indexing document: lib.azure.FinalRequestOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:16,927 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:16,929 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:16,929 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:16,933 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:16,935 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:16,936 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:16,936 - INFO - Indexing document: lib.azure.Omit - In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 13:50:16,936 - INFO - Indexing document: lib.azure.TypeVar - Type variable.

The preferred way to construct a type variable is via the dedicated
syntax for generic functions, classes, and type aliases::

    class Sequence[T]:  # T is a TypeVar
        ...

Thi...
2024-11-27 13:50:16,944 - INFO - Indexing document: lib.azure.cast - Cast a value to a type.

This returns the value unchanged.  To the type checker this
signals that the return value has the designated type, but at
runtime we intentionally don't check anything (we wan...
2024-11-27 13:50:16,945 - INFO - Indexing document: lib.azure.overload - Decorator for overloaded functions/methods.

In a stub file, place two or more stub definitions for the same
function in a row, each decorated with @overload.

For example::

    @overload
    def utf...
2024-11-27 13:50:16,949 - INFO - Indexing document: lib.azure.override - Indicate that a method is intended to override a method in a base class.

Usage::

    class Base:
        def method(self) -> None: ...
            pass

    class Child(Base):
        @override
    ...
2024-11-27 13:50:16,954 - INFO - Indexing document: lib.streaming.AssistantStreamManager - Wrapper over AssistantStreamEventHandler that is returned by `.stream()`
so that a context manager can be used.

```py
with client.threads.create_and_run_stream(...) as stream:
    for event in stream...
2024-11-27 13:50:16,958 - INFO - Indexing document: lib.streaming.AsyncAssistantStreamManager - Wrapper over AsyncAssistantStreamEventHandler that is returned by `.stream()`
so that an async context manager can be used without `await`ing the
original client call.

```py
async with client.threads...
2024-11-27 13:50:16,960 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 13:50:16,962 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:50:16,963 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 13:50:16,965 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 13:50:16,965 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStreamManager - Context manager over a `AsyncChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```p...
2024-11-27 13:50:16,968 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 13:50:16,969 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:50:16,971 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 13:50:16,974 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 13:50:16,974 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStreamManager - Context manager over a `ChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```py
wit...
2024-11-27 13:50:16,977 - INFO - Indexing document: lib.streaming.chat.ChunkEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:16,980 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:16,982 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:16,984 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:16,987 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:16,989 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:16,993 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:16,994 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent - This event is yielded for every chunk with `choice.delta.content` data....
2024-11-27 13:50:16,995 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:16,997 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:16,999 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,001 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,003 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,006 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,008 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,011 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,013 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,013 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,018 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,020 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,022 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,023 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,023 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,028 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,029 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,032 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,033 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,033 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,033 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,040 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,042 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,043 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,043 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,047 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,048 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,050 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,051 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,051 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,051 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,058 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,059 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,061 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,062 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,062 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,067 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,068 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,071 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,072 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,074 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,077 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,078 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,078 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,082 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,083 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,085 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,086 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,086 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,086 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,092 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,094 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,095 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,096 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,105 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,110 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,115 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,117 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,123 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,125 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,127 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,127 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,132 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,134 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,135 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,137 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,137 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,142 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,144 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,145 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,147 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,147 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,147 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,153 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,155 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,157 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,157 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,157 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,162 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,163 - INFO - Indexing document: pagination.AsyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 13:50:17,165 - INFO - Indexing document: pagination.AsyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,167 - INFO - Indexing document: pagination.AsyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,167 - INFO - Indexing document: pagination.AsyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:50:17,167 - INFO - Indexing document: pagination.AsyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,172 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,173 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,175 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,177 - INFO - Indexing document: pagination.AsyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 13:50:17,177 - INFO - Indexing document: pagination.AsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,177 - INFO - Indexing document: pagination.AsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,177 - INFO - Indexing document: pagination.AsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:50:17,182 - INFO - Indexing document: pagination.AsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,183 - INFO - Indexing document: pagination.AsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,184 - INFO - Indexing document: pagination.AsyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,187 - INFO - Indexing document: pagination.AsyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,188 - INFO - Indexing document: pagination.AsyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 13:50:17,188 - INFO - Indexing document: pagination.BaseAsyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 13:50:17,188 - INFO - Indexing document: pagination.BaseAsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,192 - INFO - Indexing document: pagination.BaseAsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,194 - INFO - Indexing document: pagination.BaseAsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:50:17,194 - INFO - Indexing document: pagination.BaseAsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,197 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,197 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,197 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,202 - INFO - Indexing document: pagination.BasePage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 13:50:17,204 - INFO - Indexing document: pagination.BasePage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,205 - INFO - Indexing document: pagination.BasePage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,206 - INFO - Indexing document: pagination.BasePage.model_post_init - This function is meant to behave like a BaseModel method to initialise private attributes.

It takes context as an argument since that's what pydantic-core passes when calling it.

Args:
    self: The...
2024-11-27 13:50:17,206 - INFO - Indexing document: pagination.BasePage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,206 - INFO - Indexing document: pagination.BasePage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,206 - INFO - Indexing document: pagination.BasePage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,214 - INFO - Indexing document: pagination.BasePage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,216 - INFO - Indexing document: pagination.BaseSyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 13:50:17,218 - INFO - Indexing document: pagination.BaseSyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,219 - INFO - Indexing document: pagination.BaseSyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,221 - INFO - Indexing document: pagination.BaseSyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:50:17,222 - INFO - Indexing document: pagination.BaseSyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,223 - INFO - Indexing document: pagination.BaseSyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,225 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,227 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,227 - INFO - Indexing document: pagination.CursorPageItem - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 13:50:17,227 - INFO - Indexing document: pagination.Generic - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:17,234 - INFO - Indexing document: pagination.PageInfo - Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set....
2024-11-27 13:50:17,235 - INFO - Indexing document: pagination.Protocol - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 13:50:17,236 - INFO - Indexing document: pagination.SyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 13:50:17,241 - INFO - Indexing document: pagination.SyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,242 - INFO - Indexing document: pagination.SyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,244 - INFO - Indexing document: pagination.SyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:50:17,245 - INFO - Indexing document: pagination.SyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,246 - INFO - Indexing document: pagination.SyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,248 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,250 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,252 - INFO - Indexing document: pagination.SyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 13:50:17,252 - INFO - Indexing document: pagination.SyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,254 - INFO - Indexing document: pagination.SyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,255 - INFO - Indexing document: pagination.SyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:50:17,257 - INFO - Indexing document: pagination.SyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,258 - INFO - Indexing document: pagination.SyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,258 - INFO - Indexing document: pagination.SyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,263 - INFO - Indexing document: pagination.SyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,265 - INFO - Indexing document: pagination.SyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 13:50:17,266 - INFO - Indexing document: pagination.runtime_checkable - Mark a protocol class as a runtime protocol.

Such protocol can be used with isinstance() and issubclass().
Raise TypeError if applied to a non-protocol class.
This allows a simple-minded structural c...
2024-11-27 13:50:17,267 - INFO - Indexing document: resources.AsyncBatches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 13:50:17,267 - INFO - Indexing document: resources.AsyncBatches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 13:50:17,267 - INFO - Indexing document: resources.AsyncBatches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 13:50:17,273 - INFO - Indexing document: resources.AsyncBatches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 13:50:17,274 - INFO - Indexing document: resources.AsyncEmbeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 13:50:17,276 - INFO - Indexing document: resources.AsyncFiles.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 13:50:17,277 - INFO - Indexing document: resources.AsyncFiles.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 13:50:17,277 - INFO - Indexing document: resources.AsyncFiles.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 13:50:17,282 - INFO - Indexing document: resources.AsyncFiles.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 13:50:17,284 - INFO - Indexing document: resources.AsyncFiles.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 13:50:17,286 - INFO - Indexing document: resources.AsyncFiles.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 13:50:17,288 - INFO - Indexing document: resources.AsyncFiles.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 13:50:17,289 - INFO - Indexing document: resources.AsyncImages.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 13:50:17,289 - INFO - Indexing document: resources.AsyncImages.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 13:50:17,293 - INFO - Indexing document: resources.AsyncImages.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 13:50:17,295 - INFO - Indexing document: resources.AsyncModels.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 13:50:17,298 - INFO - Indexing document: resources.AsyncModels.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 13:50:17,298 - INFO - Indexing document: resources.AsyncModels.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 13:50:17,298 - INFO - Indexing document: resources.AsyncModerations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 13:50:17,303 - INFO - Indexing document: resources.AsyncUploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 13:50:17,303 - INFO - Indexing document: resources.AsyncUploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 13:50:17,303 - INFO - Indexing document: resources.AsyncUploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 13:50:17,307 - INFO - Indexing document: resources.AsyncUploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 13:50:17,309 - INFO - Indexing document: resources.Batches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 13:50:17,311 - INFO - Indexing document: resources.Batches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 13:50:17,313 - INFO - Indexing document: resources.Batches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 13:50:17,314 - INFO - Indexing document: resources.Batches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 13:50:17,316 - INFO - Indexing document: resources.Embeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 13:50:17,318 - INFO - Indexing document: resources.Files.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 13:50:17,320 - INFO - Indexing document: resources.Files.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 13:50:17,322 - INFO - Indexing document: resources.Files.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 13:50:17,325 - INFO - Indexing document: resources.Files.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 13:50:17,328 - INFO - Indexing document: resources.Files.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 13:50:17,330 - INFO - Indexing document: resources.Files.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 13:50:17,331 - INFO - Indexing document: resources.Files.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 13:50:17,332 - INFO - Indexing document: resources.Images.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 13:50:17,334 - INFO - Indexing document: resources.Images.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 13:50:17,335 - INFO - Indexing document: resources.Images.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 13:50:17,338 - INFO - Indexing document: resources.Models.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 13:50:17,340 - INFO - Indexing document: resources.Models.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 13:50:17,340 - INFO - Indexing document: resources.Models.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 13:50:17,342 - INFO - Indexing document: resources.Moderations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 13:50:17,344 - INFO - Indexing document: resources.Uploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 13:50:17,346 - INFO - Indexing document: resources.Uploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 13:50:17,348 - INFO - Indexing document: resources.Uploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 13:50:17,349 - INFO - Indexing document: resources.Uploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 13:50:17,352 - INFO - Indexing document: resources.audio.AsyncSpeech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 13:50:17,354 - INFO - Indexing document: resources.audio.AsyncTranscriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 13:50:17,357 - INFO - Indexing document: resources.audio.AsyncTranslations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 13:50:17,359 - INFO - Indexing document: resources.audio.Speech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 13:50:17,361 - INFO - Indexing document: resources.audio.Transcriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 13:50:17,363 - INFO - Indexing document: resources.audio.Translations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 13:50:17,365 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:17,367 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 13:50:17,368 - INFO - Indexing document: resources.audio.speech.Body - The base class of the class hierarchy.

When called, it accepts no arguments and returns a new featureless
instance that has no instance attributes and cannot be given any....
2024-11-27 13:50:17,368 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:17,368 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 13:50:17,372 - INFO - Indexing document: resources.audio.speech.async_maybe_transform - Wrapper over `async_transform()` that allows `None` to be passed.

See `async_transform()` for more details....
2024-11-27 13:50:17,373 - INFO - Indexing document: resources.audio.speech.async_to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 13:50:17,374 - INFO - Indexing document: resources.audio.speech.make_request_options - Create a dict of type RequestOptions without keys of NotGiven values....
2024-11-27 13:50:17,375 - INFO - Indexing document: resources.audio.speech.maybe_transform - Wrapper over `transform()` that allows `None` to be passed.

See `transform()` for more details....
2024-11-27 13:50:17,377 - INFO - Indexing document: resources.audio.speech.speech_create_params.SpeechCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,377 - INFO - Indexing document: resources.audio.speech.speech_create_params.TypedDict - A simple typed namespace. At runtime it is equivalent to a plain dict.

TypedDict creates a dictionary type such that a type checker will expect all
instances to have a certain set of keys, where each...
2024-11-27 13:50:17,377 - INFO - Indexing document: resources.audio.speech.to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 13:50:17,377 - INFO - Indexing document: resources.audio.transcriptions.Transcription - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,383 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,384 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,387 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,387 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,387 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,392 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,393 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,396 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,397 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,397 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,397 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,404 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,405 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,407 - INFO - Indexing document: resources.audio.transcriptions.assert_never - Statically assert that a line of code is unreachable.

Example::

    def int_or_str(arg: int | str) -> None:
        match arg:
            case int():
                print("It's an int")
          ...
2024-11-27 13:50:17,407 - INFO - Indexing document: resources.audio.transcriptions.async_to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 13:50:17,407 - INFO - Indexing document: resources.audio.transcriptions.deepcopy_minimal - Minimal reimplementation of copy.deepcopy() that will only copy certain object types:

- mappings, e.g. `dict`
- list

This is done for performance reasons....
2024-11-27 13:50:17,413 - INFO - Indexing document: resources.audio.transcriptions.extract_files - Recursively extract files from the given dictionary based on specified paths.

A path may look like this ['foo', 'files', '<array>', 'data'].

Note: this mutates the given dictionary....
2024-11-27 13:50:17,415 - INFO - Indexing document: resources.audio.transcriptions.to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 13:50:17,417 - INFO - Indexing document: resources.audio.transcriptions.transcription_create_params.TranscriptionCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,419 - INFO - Indexing document: resources.audio.translations.Translation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,422 - INFO - Indexing document: resources.audio.translations.Translation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,424 - INFO - Indexing document: resources.audio.translations.Translation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,424 - INFO - Indexing document: resources.audio.translations.Translation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,427 - INFO - Indexing document: resources.audio.translations.Translation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,429 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,432 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,434 - INFO - Indexing document: resources.audio.translations.TranslationVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,437 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,438 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,440 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,442 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,443 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,446 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,448 - INFO - Indexing document: resources.audio.translations.translation_create_params.TranslationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,451 - INFO - Indexing document: resources.batches.AsyncPaginator - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:50:17,451 - INFO - Indexing document: resources.batches.Batch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,451 - INFO - Indexing document: resources.batches.Batch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,457 - INFO - Indexing document: resources.batches.Batch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,459 - INFO - Indexing document: resources.batches.Batch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,460 - INFO - Indexing document: resources.batches.Batch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,462 - INFO - Indexing document: resources.batches.Batch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,463 - INFO - Indexing document: resources.batches.Batch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,466 - INFO - Indexing document: resources.batches.batch_create_params.BatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,468 - INFO - Indexing document: resources.batches.batch_list_params.BatchListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,470 - INFO - Indexing document: resources.beta.Assistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 13:50:17,472 - INFO - Indexing document: resources.beta.Assistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 13:50:17,475 - INFO - Indexing document: resources.beta.Assistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 13:50:17,477 - INFO - Indexing document: resources.beta.Assistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 13:50:17,481 - INFO - Indexing document: resources.beta.AsyncAssistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 13:50:17,484 - INFO - Indexing document: resources.beta.AsyncAssistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 13:50:17,487 - INFO - Indexing document: resources.beta.AsyncAssistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 13:50:17,490 - INFO - Indexing document: resources.beta.AsyncAssistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 13:50:17,492 - INFO - Indexing document: resources.beta.AsyncThreads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 13:50:17,495 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 13:50:17,497 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 13:50:17,498 - INFO - Indexing document: resources.beta.AsyncThreads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 13:50:17,501 - INFO - Indexing document: resources.beta.AsyncThreads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 13:50:17,503 - INFO - Indexing document: resources.beta.AsyncVectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 13:50:17,505 - INFO - Indexing document: resources.beta.AsyncVectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 13:50:17,508 - INFO - Indexing document: resources.beta.AsyncVectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 13:50:17,508 - INFO - Indexing document: resources.beta.AsyncVectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 13:50:17,512 - INFO - Indexing document: resources.beta.Threads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 13:50:17,515 - INFO - Indexing document: resources.beta.Threads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 13:50:17,516 - INFO - Indexing document: resources.beta.Threads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 13:50:17,517 - INFO - Indexing document: resources.beta.Threads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 13:50:17,517 - INFO - Indexing document: resources.beta.Threads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 13:50:17,521 - INFO - Indexing document: resources.beta.VectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 13:50:17,523 - INFO - Indexing document: resources.beta.VectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 13:50:17,525 - INFO - Indexing document: resources.beta.VectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 13:50:17,525 - INFO - Indexing document: resources.beta.VectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 13:50:17,530 - INFO - Indexing document: resources.beta.assistants.Assistant - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,532 - INFO - Indexing document: resources.beta.assistants.Assistant.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,534 - INFO - Indexing document: resources.beta.assistants.Assistant.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,535 - INFO - Indexing document: resources.beta.assistants.Assistant.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,538 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,540 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,542 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,545 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,548 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,550 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,552 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,553 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,556 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,557 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,559 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.AssistantCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,561 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,563 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,565 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,566 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,569 - INFO - Indexing document: resources.beta.assistants.assistant_list_params.AssistantListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,571 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.AssistantUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,573 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,575 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,577 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,580 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 13:50:17,582 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 13:50:17,584 - INFO - Indexing document: resources.beta.chat.Completions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 13:50:17,585 - INFO - Indexing document: resources.beta.chat.Completions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 13:50:17,587 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,591 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,593 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,594 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,596 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,597 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,597 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,600 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,602 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,605 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,607 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,608 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,611 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,613 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,615 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,617 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionPredictionContentParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,618 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionStreamOptionsParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,620 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,622 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,622 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,625 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,627 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,628 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,629 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,632 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,633 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ChatCompletionFunctionCallOptionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,636 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,638 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,640 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,640 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,645 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONObject - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,646 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,648 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatText - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,650 - INFO - Indexing document: resources.beta.chat.completions.partial - partial(func, *args, **keywords) - new function with partial application
of the given arguments and keywords....
2024-11-27 13:50:17,651 - INFO - Indexing document: resources.beta.threads.AsyncMessages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 13:50:17,653 - INFO - Indexing document: resources.beta.threads.AsyncMessages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 13:50:17,655 - INFO - Indexing document: resources.beta.threads.AsyncMessages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 13:50:17,656 - INFO - Indexing document: resources.beta.threads.AsyncMessages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 13:50:17,658 - INFO - Indexing document: resources.beta.threads.AsyncRuns.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 13:50:17,660 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 13:50:17,662 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_stream - Create a Run stream...
2024-11-27 13:50:17,663 - INFO - Indexing document: resources.beta.threads.AsyncRuns.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 13:50:17,665 - INFO - Indexing document: resources.beta.threads.AsyncRuns.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 13:50:17,667 - INFO - Indexing document: resources.beta.threads.AsyncRuns.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 13:50:17,670 - INFO - Indexing document: resources.beta.threads.AsyncRuns.stream - Create a Run stream...
2024-11-27 13:50:17,670 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 13:50:17,671 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 13:50:17,671 - INFO - Indexing document: resources.beta.threads.Messages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 13:50:17,675 - INFO - Indexing document: resources.beta.threads.Messages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 13:50:17,675 - INFO - Indexing document: resources.beta.threads.Messages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 13:50:17,675 - INFO - Indexing document: resources.beta.threads.Messages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 13:50:17,675 - INFO - Indexing document: resources.beta.threads.Runs.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 13:50:17,682 - INFO - Indexing document: resources.beta.threads.Runs.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 13:50:17,684 - INFO - Indexing document: resources.beta.threads.Runs.create_and_stream - Create a Run stream...
2024-11-27 13:50:17,684 - INFO - Indexing document: resources.beta.threads.Runs.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 13:50:17,685 - INFO - Indexing document: resources.beta.threads.Runs.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 13:50:17,687 - INFO - Indexing document: resources.beta.threads.Runs.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 13:50:17,687 - INFO - Indexing document: resources.beta.threads.Runs.stream - Create a Run stream...
2024-11-27 13:50:17,690 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 13:50:17,690 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 13:50:17,691 - INFO - Indexing document: resources.beta.threads.messages.Message - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,693 - INFO - Indexing document: resources.beta.threads.messages.Message.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,696 - INFO - Indexing document: resources.beta.threads.messages.Message.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,697 - INFO - Indexing document: resources.beta.threads.messages.Message.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,699 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,701 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,703 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,705 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,707 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,709 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,710 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,710 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,710 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,716 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,717 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.Attachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,719 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.AttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,719 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.CodeInterpreterToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,719 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.MessageCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,719 - INFO - Indexing document: resources.beta.threads.messages.message_list_params.MessageListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,726 - INFO - Indexing document: resources.beta.threads.messages.message_update_params.MessageUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,728 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 13:50:17,729 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 13:50:17,729 - INFO - Indexing document: resources.beta.threads.runs.Steps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 13:50:17,729 - INFO - Indexing document: resources.beta.threads.runs.Steps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 13:50:17,735 - INFO - Indexing document: resources.beta.threads.runs.runs.Run - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,737 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,738 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,741 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,741 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,741 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,747 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,748 - INFO - Indexing document: resources.beta.threads.runs.runs.required_args - Decorator to enforce a given set of arguments or variants of arguments are passed to the decorated function.

Useful for enforcing runtime validation of overloaded functions.

Example usage:
```py
@ov...
2024-11-27 13:50:17,751 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,753 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,754 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,756 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,758 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,759 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,761 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,763 - INFO - Indexing document: resources.beta.threads.runs.runs.run_list_params.RunListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,765 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,767 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,769 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,771 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.ToolOutput - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,772 - INFO - Indexing document: resources.beta.threads.runs.runs.run_update_params.RunUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,774 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,776 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,776 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,776 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,780 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,781 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,783 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,785 - INFO - Indexing document: resources.beta.threads.runs.steps.step_list_params.StepListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,788 - INFO - Indexing document: resources.beta.threads.runs.steps.step_retrieve_params.StepRetrieveParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,790 - INFO - Indexing document: resources.beta.threads.threads.Thread - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,792 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,794 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,795 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,797 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,798 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,801 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,801 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,801 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,805 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,807 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,808 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,810 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,811 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,811 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FileSearchToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,815 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FunctionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,817 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.Thread - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,818 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,820 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,823 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,825 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,826 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,827 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,830 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,832 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,834 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,836 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,837 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,839 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,841 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,842 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,842 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.Message - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,845 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,847 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,848 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ThreadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,850 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,851 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,853 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,856 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,858 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ThreadUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,860 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,860 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,860 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,865 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 13:50:17,867 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 13:50:17,869 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 13:50:17,870 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 13:50:17,871 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 13:50:17,873 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 13:50:17,875 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 13:50:17,876 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 13:50:17,877 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 13:50:17,878 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 13:50:17,879 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 13:50:17,881 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 13:50:17,882 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 13:50:17,885 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 13:50:17,887 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 13:50:17,887 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 13:50:17,889 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 13:50:17,890 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 13:50:17,892 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 13:50:17,894 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 13:50:17,895 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 13:50:17,897 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 13:50:17,897 - INFO - Indexing document: resources.beta.vector_stores.Files.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 13:50:17,900 - INFO - Indexing document: resources.beta.vector_stores.Files.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 13:50:17,901 - INFO - Indexing document: resources.beta.vector_stores.Files.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 13:50:17,902 - INFO - Indexing document: resources.beta.vector_stores.Files.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 13:50:17,904 - INFO - Indexing document: resources.beta.vector_stores.Files.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 13:50:17,905 - INFO - Indexing document: resources.beta.vector_stores.Files.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 13:50:17,905 - INFO - Indexing document: resources.beta.vector_stores.Files.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 13:50:17,905 - INFO - Indexing document: resources.beta.vector_stores.Files.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 13:50:17,905 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,911 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,913 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,915 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,916 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,919 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,919 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,925 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future - Represents the result of an asynchronous computation....
2024-11-27 13:50:17,926 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.add_done_callback - Attaches a callable that will be called when the future finishes.

Args:
    fn: A callable that will be called with this future as its only
        argument when the future completes or is cancelled....
2024-11-27 13:50:17,928 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancel - Cancel the future if possible.

Returns True if the future was cancelled, False otherwise. A future
cannot be cancelled if it is running or has already completed....
2024-11-27 13:50:17,929 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancelled - Return True if the future was cancelled....
2024-11-27 13:50:17,930 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.done - Return True if the future was cancelled or finished executing....
2024-11-27 13:50:17,930 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.exception - Return the exception raised by the call that the future represents.

Args:
    timeout: The number of seconds to wait for the exception if the
        future isn't done. If None, then there is no limi...
2024-11-27 13:50:17,930 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.result - Return the result of the call that the future represents.

Args:
    timeout: The number of seconds to wait for the result if the future
        isn't done. If None, then there is no limit on the wait...
2024-11-27 13:50:17,930 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.running - Return True if the future is currently executing....
2024-11-27 13:50:17,930 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_exception - Sets the result of the future as being the given exception.

Should only be used by Executor implementations and unit tests....
2024-11-27 13:50:17,936 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_result - Sets the return value of work associated with the future.

Should only be used by Executor implementations and unit tests....
2024-11-27 13:50:17,936 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_running_or_notify_cancel - Mark the future as running or process any cancel notifications.

Should only be used by Executor implementations and unit tests.

If the future has been cancelled (cancel() was called and returned
Tru...
2024-11-27 13:50:17,938 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor - This is an abstract base class for concrete asynchronous executors....
2024-11-27 13:50:17,939 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.map - Returns an iterator equivalent to map(fn, iter).

Args:
    fn: A callable that will take as many arguments as there are
        passed iterables.
    timeout: The maximum number of seconds to wait. I...
2024-11-27 13:50:17,940 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.shutdown - Clean-up the resources associated with the Executor.

It is safe to call this method several times. Otherwise, no other
methods can be called after this one.

Args:
    wait: If True then shutdown wil...
2024-11-27 13:50:17,940 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.submit - Submits a callable to be executed with the given arguments.

Schedules the callable to be executed as fn(*args, **kwargs) and returns
a Future instance representing the execution of the callable.

Ret...
2024-11-27 13:50:17,945 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,947 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,949 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,951 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,952 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,956 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,957 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,959 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,959 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,959 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,965 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,966 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,968 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,970 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,971 - INFO - Indexing document: resources.beta.vector_stores.file_batches.as_completed - An iterator over the given futures that yields each as it completes.

Args:
    fs: The sequence of Futures (possibly created by different Executors) to
        iterate over.
    timeout: The maximum ...
2024-11-27 13:50:17,972 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_create_params.FileBatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,974 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_list_files_params.FileBatchListFilesParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,977 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,979 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,982 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:17,984 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:17,985 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:17,988 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:17,989 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:17,991 - INFO - Indexing document: resources.beta.vector_stores.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,992 - INFO - Indexing document: resources.beta.vector_stores.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:17,992 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:17,997 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:17,998 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,000 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,000 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,000 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,006 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,007 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,010 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,012 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,014 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,016 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,017 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,017 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,017 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,017 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.VectorStoreCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,025 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_list_params.VectorStoreListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,025 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,025 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.VectorStoreUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,031 - INFO - Indexing document: resources.completions.Completion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,033 - INFO - Indexing document: resources.completions.Completion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,035 - INFO - Indexing document: resources.completions.Completion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,035 - INFO - Indexing document: resources.completions.Completion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,038 - INFO - Indexing document: resources.completions.Completion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,039 - INFO - Indexing document: resources.completions.Completion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,042 - INFO - Indexing document: resources.completions.Completion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,044 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,045 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,047 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,047 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,051 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,053 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,054 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,056 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,056 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,056 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,061 - INFO - Indexing document: resources.embeddings.embedding_create_params.EmbeddingCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,063 - INFO - Indexing document: resources.files.FileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,065 - INFO - Indexing document: resources.files.FileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,066 - INFO - Indexing document: resources.files.FileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,068 - INFO - Indexing document: resources.files.FileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,069 - INFO - Indexing document: resources.files.FileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,072 - INFO - Indexing document: resources.files.FileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,074 - INFO - Indexing document: resources.files.FileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,076 - INFO - Indexing document: resources.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,078 - INFO - Indexing document: resources.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,079 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 13:50:18,081 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 13:50:18,083 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 13:50:18,085 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 13:50:18,087 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 13:50:18,089 - INFO - Indexing document: resources.fine_tuning.Jobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 13:50:18,091 - INFO - Indexing document: resources.fine_tuning.Jobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 13:50:18,093 - INFO - Indexing document: resources.fine_tuning.Jobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 13:50:18,094 - INFO - Indexing document: resources.fine_tuning.Jobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 13:50:18,096 - INFO - Indexing document: resources.fine_tuning.Jobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 13:50:18,098 - INFO - Indexing document: resources.fine_tuning.jobs.AsyncCheckpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 13:50:18,100 - INFO - Indexing document: resources.fine_tuning.jobs.Checkpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 13:50:18,102 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,103 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,106 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,106 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,106 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,113 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,115 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,117 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.checkpoint_list_params.CheckpointListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,118 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,118 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,122 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,123 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,124 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,126 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,126 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,131 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,133 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,135 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,138 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,140 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,142 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,142 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,146 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Hyperparameters - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,148 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Integration - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,149 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.IntegrationWandb - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,150 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.JobCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,150 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_events_params.JobListEventsParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,150 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_params.JobListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,156 - INFO - Indexing document: resources.images.ImagesResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,158 - INFO - Indexing document: resources.images.ImagesResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,159 - INFO - Indexing document: resources.images.ImagesResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,161 - INFO - Indexing document: resources.images.ImagesResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,163 - INFO - Indexing document: resources.images.ImagesResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,165 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,167 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,168 - INFO - Indexing document: resources.images.image_create_variation_params.ImageCreateVariationParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,170 - INFO - Indexing document: resources.images.image_edit_params.ImageEditParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,171 - INFO - Indexing document: resources.images.image_generate_params.ImageGenerateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,171 - INFO - Indexing document: resources.models.Model - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,171 - INFO - Indexing document: resources.models.Model.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,177 - INFO - Indexing document: resources.models.Model.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,179 - INFO - Indexing document: resources.models.Model.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,180 - INFO - Indexing document: resources.models.Model.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,181 - INFO - Indexing document: resources.models.Model.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,182 - INFO - Indexing document: resources.models.Model.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,182 - INFO - Indexing document: resources.models.ModelDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,187 - INFO - Indexing document: resources.models.ModelDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,188 - INFO - Indexing document: resources.models.ModelDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,190 - INFO - Indexing document: resources.models.ModelDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,190 - INFO - Indexing document: resources.models.ModelDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,190 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,195 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,198 - INFO - Indexing document: resources.moderations.ModerationCreateResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,200 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,202 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,204 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,205 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,207 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,208 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,210 - INFO - Indexing document: resources.moderations.moderation_create_params.ModerationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,211 - INFO - Indexing document: resources.uploads.AsyncParts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 13:50:18,211 - INFO - Indexing document: resources.uploads.Parts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 13:50:18,211 - INFO - Indexing document: resources.uploads.parts.UploadPart - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,217 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,219 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,224 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,225 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,228 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,228 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,228 - INFO - Indexing document: resources.uploads.parts.part_create_params.PartCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,233 - INFO - Indexing document: resources.uploads.uploads.Path - PurePath subclass that can make system calls.

Path represents a filesystem path but unlike PurePath, also offers
methods to do system calls on path objects. Depending on your system,
instantiating a ...
2024-11-27 13:50:18,235 - INFO - Indexing document: resources.uploads.uploads.Path.absolute - Return an absolute version of this path by prepending the current
working directory. No normalization or symlink resolution is performed.

Use resolve() to get the canonical path to a file....
2024-11-27 13:50:18,236 - INFO - Indexing document: resources.uploads.uploads.Path.anchor - The concatenation of the drive and root, or ''....
2024-11-27 13:50:18,236 - INFO - Indexing document: resources.uploads.uploads.Path.as_posix - Return the string representation of the path with forward (/)
slashes....
2024-11-27 13:50:18,237 - INFO - Indexing document: resources.uploads.uploads.Path.as_uri - Return the path as a 'file' URI....
2024-11-27 13:50:18,238 - INFO - Indexing document: resources.uploads.uploads.Path.chmod - Change the permissions of the path, like os.chmod()....
2024-11-27 13:50:18,238 - INFO - Indexing document: resources.uploads.uploads.Path.cwd - Return a new path pointing to the current working directory....
2024-11-27 13:50:18,238 - INFO - Indexing document: resources.uploads.uploads.Path.drive - The drive prefix (letter or UNC path), if any....
2024-11-27 13:50:18,238 - INFO - Indexing document: resources.uploads.uploads.Path.exists - Whether this path exists.

This method normally follows symlinks; to check whether a symlink exists,
add the argument follow_symlinks=False....
2024-11-27 13:50:18,238 - INFO - Indexing document: resources.uploads.uploads.Path.expanduser - Return a new path with expanded ~ and ~user constructs
(as returned by os.path.expanduser)...
2024-11-27 13:50:18,238 - INFO - Indexing document: resources.uploads.uploads.Path.glob - Iterate over this subtree and yield all existing files (of any
kind, including directories) matching the given relative pattern....
2024-11-27 13:50:18,243 - INFO - Indexing document: resources.uploads.uploads.Path.group - Return the group name of the file gid....
2024-11-27 13:50:18,243 - INFO - Indexing document: resources.uploads.uploads.Path.hardlink_to - Make this path a hard link pointing to the same file as *target*.

Note the order of arguments (self, target) is the reverse of os.link's....
2024-11-27 13:50:18,244 - INFO - Indexing document: resources.uploads.uploads.Path.home - Return a new path pointing to the user's home directory (as
returned by os.path.expanduser('~'))....
2024-11-27 13:50:18,245 - INFO - Indexing document: resources.uploads.uploads.Path.is_absolute - True if the path is absolute (has both a root and, if applicable,
a drive)....
2024-11-27 13:50:18,246 - INFO - Indexing document: resources.uploads.uploads.Path.is_block_device - Whether this path is a block device....
2024-11-27 13:50:18,246 - INFO - Indexing document: resources.uploads.uploads.Path.is_char_device - Whether this path is a character device....
2024-11-27 13:50:18,247 - INFO - Indexing document: resources.uploads.uploads.Path.is_dir - Whether this path is a directory....
2024-11-27 13:50:18,248 - INFO - Indexing document: resources.uploads.uploads.Path.is_fifo - Whether this path is a FIFO....
2024-11-27 13:50:18,248 - INFO - Indexing document: resources.uploads.uploads.Path.is_file - Whether this path is a regular file (also True for symlinks pointing
to regular files)....
2024-11-27 13:50:18,248 - INFO - Indexing document: resources.uploads.uploads.Path.is_junction - Whether this path is a junction....
2024-11-27 13:50:18,248 - INFO - Indexing document: resources.uploads.uploads.Path.is_mount - Check if this path is a mount point...
2024-11-27 13:50:18,248 - INFO - Indexing document: resources.uploads.uploads.Path.is_relative_to - Return True if the path is relative to another path or False.
        ...
2024-11-27 13:50:18,248 - INFO - Indexing document: resources.uploads.uploads.Path.is_reserved - Return True if the path contains one of the special names reserved
by the system, if any....
2024-11-27 13:50:18,248 - INFO - Indexing document: resources.uploads.uploads.Path.is_socket - Whether this path is a socket....
2024-11-27 13:50:18,248 - INFO - Indexing document: resources.uploads.uploads.Path.is_symlink - Whether this path is a symbolic link....
2024-11-27 13:50:18,248 - INFO - Indexing document: resources.uploads.uploads.Path.iterdir - Yield path objects of the directory contents.

The children are yielded in arbitrary order, and the
special entries '.' and '..' are not included....
2024-11-27 13:50:18,253 - INFO - Indexing document: resources.uploads.uploads.Path.joinpath - Combine this path with one or several arguments, and return a
new path representing either a subpath (if all arguments are relative
paths) or a totally different path (if one of the arguments is
ancho...
2024-11-27 13:50:18,254 - INFO - Indexing document: resources.uploads.uploads.Path.lchmod - Like chmod(), except if the path points to a symlink, the symlink's
permissions are changed, rather than its target's....
2024-11-27 13:50:18,255 - INFO - Indexing document: resources.uploads.uploads.Path.lstat - Like stat(), except if the path points to a symlink, the symlink's
status information is returned, rather than its target's....
2024-11-27 13:50:18,256 - INFO - Indexing document: resources.uploads.uploads.Path.match - Return True if this path matches the given pattern....
2024-11-27 13:50:18,256 - INFO - Indexing document: resources.uploads.uploads.Path.mkdir - Create a new directory at this given path....
2024-11-27 13:50:18,257 - INFO - Indexing document: resources.uploads.uploads.Path.name - The final path component, if any....
2024-11-27 13:50:18,258 - INFO - Indexing document: resources.uploads.uploads.Path.open - Open the file pointed by this path and return a file object, as
the built-in open() function does....
2024-11-27 13:50:18,260 - INFO - Indexing document: resources.uploads.uploads.Path.owner - Return the login name of the file owner....
2024-11-27 13:50:18,261 - INFO - Indexing document: resources.uploads.uploads.Path.parent - The logical parent of the path....
2024-11-27 13:50:18,262 - INFO - Indexing document: resources.uploads.uploads.Path.parents - A sequence of this path's logical parents....
2024-11-27 13:50:18,263 - INFO - Indexing document: resources.uploads.uploads.Path.parts - An object providing sequence-like access to the
components in the filesystem path....
2024-11-27 13:50:18,263 - INFO - Indexing document: resources.uploads.uploads.Path.read_bytes - Open the file in bytes mode, read it, and close the file....
2024-11-27 13:50:18,263 - INFO - Indexing document: resources.uploads.uploads.Path.read_text - Open the file in text mode, read it, and close the file....
2024-11-27 13:50:18,263 - INFO - Indexing document: resources.uploads.uploads.Path.readlink - Return the path to which the symbolic link points....
2024-11-27 13:50:18,268 - INFO - Indexing document: resources.uploads.uploads.Path.relative_to - Return the relative path to another path identified by the passed
arguments.  If the operation is not possible (because this is not
related to the other path), raise ValueError.

The *walk_up* paramet...
2024-11-27 13:50:18,270 - INFO - Indexing document: resources.uploads.uploads.Path.rename - Rename this path to the target path.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
directory of the Path object.

Re...
2024-11-27 13:50:18,273 - INFO - Indexing document: resources.uploads.uploads.Path.replace - Rename this path to the target path, overwriting if that path exists.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
...
2024-11-27 13:50:18,273 - INFO - Indexing document: resources.uploads.uploads.Path.resolve - Make the path absolute, resolving all symlinks on the way and also
normalizing it....
2024-11-27 13:50:18,273 - INFO - Indexing document: resources.uploads.uploads.Path.rglob - Recursively yield all existing files (of any kind, including
directories) matching the given relative pattern, anywhere in
this subtree....
2024-11-27 13:50:18,273 - INFO - Indexing document: resources.uploads.uploads.Path.rmdir - Remove this directory.  The directory must be empty....
2024-11-27 13:50:18,273 - INFO - Indexing document: resources.uploads.uploads.Path.root - The root of the path, if any....
2024-11-27 13:50:18,273 - INFO - Indexing document: resources.uploads.uploads.Path.samefile - Return whether other_path is the same or not as this file
(as returned by os.path.samefile())....
2024-11-27 13:50:18,278 - INFO - Indexing document: resources.uploads.uploads.Path.stat - Return the result of the stat() system call on this path, like
os.stat() does....
2024-11-27 13:50:18,279 - INFO - Indexing document: resources.uploads.uploads.Path.stem - The final path component, minus its last suffix....
2024-11-27 13:50:18,280 - INFO - Indexing document: resources.uploads.uploads.Path.suffix - The final component's last suffix, if any.

This includes the leading period. For example: '.txt'...
2024-11-27 13:50:18,281 - INFO - Indexing document: resources.uploads.uploads.Path.suffixes - A list of the final component's suffixes, if any.

These include the leading periods. For example: ['.tar', '.gz']...
2024-11-27 13:50:18,282 - INFO - Indexing document: resources.uploads.uploads.Path.symlink_to - Make this path a symlink pointing to the target path.
Note the order of arguments (link, target) is the reverse of os.symlink....
2024-11-27 13:50:18,283 - INFO - Indexing document: resources.uploads.uploads.Path.touch - Create this file with the given access mode, if it doesn't exist....
2024-11-27 13:50:18,283 - INFO - Indexing document: resources.uploads.uploads.Path.unlink - Remove this file or link.
If the path is a directory, use rmdir() instead....
2024-11-27 13:50:18,283 - INFO - Indexing document: resources.uploads.uploads.Path.walk - Walk the directory tree from this directory, similar to os.walk()....
2024-11-27 13:50:18,283 - INFO - Indexing document: resources.uploads.uploads.Path.with_name - Return a new path with the file name changed....
2024-11-27 13:50:18,283 - INFO - Indexing document: resources.uploads.uploads.Path.with_segments - Construct a new path object from any number of path-like objects.
Subclasses may override this method to customize how new path objects
are created from methods like `iterdir()`....
2024-11-27 13:50:18,283 - INFO - Indexing document: resources.uploads.uploads.Path.with_stem - Return a new path with the stem changed....
2024-11-27 13:50:18,283 - INFO - Indexing document: resources.uploads.uploads.Path.with_suffix - Return a new path with the file suffix changed.  If the path
has no suffix, add given suffix.  If the given suffix is an empty
string, remove the suffix from the path....
2024-11-27 13:50:18,288 - INFO - Indexing document: resources.uploads.uploads.Path.write_bytes - Open the file in bytes mode, write to it, and close the file....
2024-11-27 13:50:18,289 - INFO - Indexing document: resources.uploads.uploads.Path.write_text - Open the file in text mode, write to it, and close the file....
2024-11-27 13:50:18,290 - INFO - Indexing document: resources.uploads.uploads.Upload - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,293 - INFO - Indexing document: resources.uploads.uploads.Upload.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,293 - INFO - Indexing document: resources.uploads.uploads.Upload.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,293 - INFO - Indexing document: resources.uploads.uploads.Upload.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,298 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,300 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,301 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,303 - INFO - Indexing document: resources.uploads.uploads.upload_complete_params.UploadCompleteParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,305 - INFO - Indexing document: resources.uploads.uploads.upload_create_params.UploadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,307 - INFO - Indexing document: types.BatchError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,309 - INFO - Indexing document: types.BatchError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,310 - INFO - Indexing document: types.BatchError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,313 - INFO - Indexing document: types.BatchError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,314 - INFO - Indexing document: types.BatchError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,315 - INFO - Indexing document: types.BatchError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,317 - INFO - Indexing document: types.BatchError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,319 - INFO - Indexing document: types.BatchRequestCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,321 - INFO - Indexing document: types.BatchRequestCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,323 - INFO - Indexing document: types.BatchRequestCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,325 - INFO - Indexing document: types.BatchRequestCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,327 - INFO - Indexing document: types.BatchRequestCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,329 - INFO - Indexing document: types.BatchRequestCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,331 - INFO - Indexing document: types.BatchRequestCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,333 - INFO - Indexing document: types.CompletionChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,335 - INFO - Indexing document: types.CompletionChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,336 - INFO - Indexing document: types.CompletionChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,338 - INFO - Indexing document: types.CompletionChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,339 - INFO - Indexing document: types.CompletionChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,341 - INFO - Indexing document: types.CompletionChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,343 - INFO - Indexing document: types.CompletionChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,345 - INFO - Indexing document: types.CompletionUsage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,346 - INFO - Indexing document: types.CompletionUsage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,348 - INFO - Indexing document: types.CompletionUsage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,350 - INFO - Indexing document: types.CompletionUsage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,351 - INFO - Indexing document: types.CompletionUsage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,354 - INFO - Indexing document: types.CompletionUsage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,356 - INFO - Indexing document: types.CompletionUsage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,358 - INFO - Indexing document: types.Embedding - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,360 - INFO - Indexing document: types.Embedding.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,362 - INFO - Indexing document: types.Embedding.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,363 - INFO - Indexing document: types.Embedding.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,365 - INFO - Indexing document: types.Embedding.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,366 - INFO - Indexing document: types.Embedding.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,369 - INFO - Indexing document: types.Embedding.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,371 - INFO - Indexing document: types.ErrorObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,373 - INFO - Indexing document: types.ErrorObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,374 - INFO - Indexing document: types.ErrorObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,376 - INFO - Indexing document: types.ErrorObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,377 - INFO - Indexing document: types.ErrorObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,379 - INFO - Indexing document: types.ErrorObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,380 - INFO - Indexing document: types.ErrorObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,382 - INFO - Indexing document: types.FileContent - str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer...
2024-11-27 13:50:18,384 - INFO - Indexing document: types.FunctionDefinition - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,386 - INFO - Indexing document: types.FunctionDefinition.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,388 - INFO - Indexing document: types.FunctionDefinition.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,390 - INFO - Indexing document: types.FunctionDefinition.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,391 - INFO - Indexing document: types.FunctionDefinition.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,393 - INFO - Indexing document: types.FunctionDefinition.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,395 - INFO - Indexing document: types.FunctionDefinition.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,396 - INFO - Indexing document: types.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,398 - INFO - Indexing document: types.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,400 - INFO - Indexing document: types.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,401 - INFO - Indexing document: types.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,402 - INFO - Indexing document: types.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,404 - INFO - Indexing document: types.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,406 - INFO - Indexing document: types.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,408 - INFO - Indexing document: types.Moderation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,410 - INFO - Indexing document: types.Moderation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,411 - INFO - Indexing document: types.Moderation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,413 - INFO - Indexing document: types.Moderation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,415 - INFO - Indexing document: types.Moderation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,416 - INFO - Indexing document: types.Moderation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,418 - INFO - Indexing document: types.Moderation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,420 - INFO - Indexing document: types.ModerationImageURLInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,421 - INFO - Indexing document: types.ModerationTextInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,424 - INFO - Indexing document: types.ResponseFormatJSONObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,426 - INFO - Indexing document: types.ResponseFormatJSONObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,428 - INFO - Indexing document: types.ResponseFormatJSONObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,430 - INFO - Indexing document: types.ResponseFormatJSONObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,432 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,432 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,436 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,437 - INFO - Indexing document: types.ResponseFormatJSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,439 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,441 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,443 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,444 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,446 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,448 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,450 - INFO - Indexing document: types.ResponseFormatText - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,452 - INFO - Indexing document: types.ResponseFormatText.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,454 - INFO - Indexing document: types.ResponseFormatText.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,454 - INFO - Indexing document: types.ResponseFormatText.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,458 - INFO - Indexing document: types.ResponseFormatText.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,459 - INFO - Indexing document: types.ResponseFormatText.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,461 - INFO - Indexing document: types.ResponseFormatText.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,463 - INFO - Indexing document: types.audio.TranscriptionSegment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,463 - INFO - Indexing document: types.audio.TranscriptionSegment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,463 - INFO - Indexing document: types.audio.TranscriptionSegment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,468 - INFO - Indexing document: types.audio.TranscriptionSegment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,469 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,471 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,472 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,472 - INFO - Indexing document: types.audio.TranscriptionWord - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,476 - INFO - Indexing document: types.audio.TranscriptionWord.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,478 - INFO - Indexing document: types.audio.TranscriptionWord.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,480 - INFO - Indexing document: types.audio.TranscriptionWord.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,482 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,483 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,483 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,488 - INFO - Indexing document: types.batch.Errors - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,489 - INFO - Indexing document: types.batch.Errors.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,491 - INFO - Indexing document: types.batch.Errors.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,493 - INFO - Indexing document: types.batch.Errors.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,493 - INFO - Indexing document: types.batch.Errors.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,493 - INFO - Indexing document: types.batch.Errors.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,493 - INFO - Indexing document: types.batch.Errors.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,499 - INFO - Indexing document: types.beta.AssistantToolChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,501 - INFO - Indexing document: types.beta.AssistantToolChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,503 - INFO - Indexing document: types.beta.AssistantToolChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,503 - INFO - Indexing document: types.beta.AssistantToolChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,503 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,507 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,509 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,511 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,514 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,515 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,515 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,518 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,520 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,522 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,524 - INFO - Indexing document: types.beta.AssistantToolChoiceFunctionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,526 - INFO - Indexing document: types.beta.AssistantToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,527 - INFO - Indexing document: types.beta.AutoFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,529 - INFO - Indexing document: types.beta.CodeInterpreterTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,531 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,532 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,533 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,535 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,538 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,540 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,542 - INFO - Indexing document: types.beta.FileSearchTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,542 - INFO - Indexing document: types.beta.FileSearchTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,542 - INFO - Indexing document: types.beta.FileSearchTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,548 - INFO - Indexing document: types.beta.FileSearchTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,550 - INFO - Indexing document: types.beta.FileSearchTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,550 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,553 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,555 - INFO - Indexing document: types.beta.FunctionTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,557 - INFO - Indexing document: types.beta.FunctionTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,558 - INFO - Indexing document: types.beta.FunctionTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,560 - INFO - Indexing document: types.beta.FunctionTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,561 - INFO - Indexing document: types.beta.FunctionTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,564 - INFO - Indexing document: types.beta.FunctionTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,564 - INFO - Indexing document: types.beta.FunctionTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,564 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,569 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,571 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,572 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,572 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,572 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,579 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,581 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,583 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,584 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,585 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,588 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,589 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,589 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,593 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,595 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,596 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,597 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,597 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,602 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,604 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,605 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:18,608 - INFO - Indexing document: types.beta.assistant.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,608 - INFO - Indexing document: types.beta.assistant.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,612 - INFO - Indexing document: types.beta.assistant.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,614 - INFO - Indexing document: types.beta.assistant.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,615 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,617 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,619 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,620 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,622 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,624 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,626 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,627 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,629 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,631 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,633 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,636 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,639 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,640 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,643 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,645 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,646 - INFO - Indexing document: types.beta.assistant_stream_event.Annotated - Add context-specific metadata to a type.

Example: Annotated[int, runtime_check.Unsigned] indicates to the
hypothetical runtime_check module that this type is an unsigned int.
Every other consumer of ...
2024-11-27 13:50:18,648 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,649 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,649 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,654 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,655 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,657 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,657 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,657 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,663 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,665 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,667 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,668 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,670 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,670 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,674 - INFO - Indexing document: types.beta.assistant_stream_event.PropertyInfo - Metadata class to be used in Annotated types to provide information about a given type.

For example:

class MyParams(TypedDict):
    account_holder_name: Annotated[str, PropertyInfo(alias='accountHol...
2024-11-27 13:50:18,676 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,678 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,679 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,679 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,683 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,685 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,686 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,688 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,688 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,688 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,694 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,695 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,697 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,700 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,700 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,700 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,700 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,708 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,709 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,711 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,712 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,712 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,712 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,719 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,721 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,722 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,723 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,726 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,729 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,731 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,732 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,734 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,736 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,738 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,740 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,741 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,743 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,743 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,743 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,748 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,750 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,752 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,753 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,753 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,759 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,761 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,763 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,765 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,766 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,769 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,771 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,773 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,773 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,773 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,778 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,779 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,781 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,784 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,788 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,791 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,793 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,797 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,801 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,805 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,807 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,811 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,813 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,814 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,814 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,814 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,819 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,822 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,824 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,824 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,824 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,830 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,831 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,831 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,836 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,838 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,840 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,841 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,843 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,845 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,847 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,849 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,850 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,852 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,854 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,856 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,857 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,859 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,862 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,864 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,866 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,867 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,869 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,871 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,872 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,874 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,876 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,878 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,879 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,881 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,883 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,885 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,887 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,889 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,890 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,890 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,906 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,906 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,906 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,915 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,919 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,920 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,920 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,920 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,920 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,935 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,935 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,935 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,944 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,947 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,951 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,955 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,958 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,961 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,961 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,961 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,961 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,961 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,976 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,978 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,981 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:18,983 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:18,987 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:18,990 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:18,994 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:18,994 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:18,994 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:18,994 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,008 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,010 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,012 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,015 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,016 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,016 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,023 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,025 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,026 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,028 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,030 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,032 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,032 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,032 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,039 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,041 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,043 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,045 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,047 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,049 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,052 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,053 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,055 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,057 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,060 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,063 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,065 - INFO - Indexing document: types.beta.file_search_tool.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,067 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,069 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,071 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,073 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,074 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,077 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,080 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,082 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,084 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,086 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,087 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,090 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,092 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,094 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:19,095 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearchRankingOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:19,097 - INFO - Indexing document: types.beta.function_tool_param.FunctionDefinition - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:19,100 - INFO - Indexing document: types.beta.thread.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,103 - INFO - Indexing document: types.beta.thread.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,105 - INFO - Indexing document: types.beta.thread.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,107 - INFO - Indexing document: types.beta.thread.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,108 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,110 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,113 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,115 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,117 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,119 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,121 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,123 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,124 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,124 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,128 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,130 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,132 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,135 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,137 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,139 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,140 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,143 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,145 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,147 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,148 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,148 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,153 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,154 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,156 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,157 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,157 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,157 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,157 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,165 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,167 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,169 - INFO - Indexing document: types.beta.threads.FilePathAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,171 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,173 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,175 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,177 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,178 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,179 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,179 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,184 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,185 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,187 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,188 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,190 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,192 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,193 - INFO - Indexing document: types.beta.threads.ImageFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,196 - INFO - Indexing document: types.beta.threads.ImageFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,198 - INFO - Indexing document: types.beta.threads.ImageFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,201 - INFO - Indexing document: types.beta.threads.ImageFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,203 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,204 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,206 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,208 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,210 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,212 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,213 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,213 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,218 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,220 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,221 - INFO - Indexing document: types.beta.threads.ImageFileContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:19,222 - INFO - Indexing document: types.beta.threads.ImageFileDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,222 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,229 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,232 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,233 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,235 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,237 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,239 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,241 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,243 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,243 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,243 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,248 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,250 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,252 - INFO - Indexing document: types.beta.threads.ImageFileParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:19,253 - INFO - Indexing document: types.beta.threads.ImageURL - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,253 - INFO - Indexing document: types.beta.threads.ImageURL.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,258 - INFO - Indexing document: types.beta.threads.ImageURL.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,260 - INFO - Indexing document: types.beta.threads.ImageURL.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,262 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,264 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,266 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,267 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,269 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,271 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,273 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,274 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,277 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,279 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,281 - INFO - Indexing document: types.beta.threads.ImageURLContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:19,282 - INFO - Indexing document: types.beta.threads.ImageURLDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,284 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,286 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,287 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,289 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,291 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,293 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,293 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,293 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,299 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,301 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,302 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,304 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,304 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,308 - INFO - Indexing document: types.beta.threads.ImageURLParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:19,309 - INFO - Indexing document: types.beta.threads.MessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,311 - INFO - Indexing document: types.beta.threads.MessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,312 - INFO - Indexing document: types.beta.threads.MessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,312 - INFO - Indexing document: types.beta.threads.MessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,312 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,312 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,319 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,321 - INFO - Indexing document: types.beta.threads.RefusalContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,323 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,326 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,328 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,328 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,330 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,333 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,334 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,336 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,337 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,337 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,337 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,343 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,344 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,346 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,348 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,348 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,351 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,352 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,354 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,356 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,358 - INFO - Indexing document: types.beta.threads.Text - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,360 - INFO - Indexing document: types.beta.threads.Text.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,360 - INFO - Indexing document: types.beta.threads.Text.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,363 - INFO - Indexing document: types.beta.threads.Text.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,365 - INFO - Indexing document: types.beta.threads.Text.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,366 - INFO - Indexing document: types.beta.threads.Text.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,367 - INFO - Indexing document: types.beta.threads.Text.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,367 - INFO - Indexing document: types.beta.threads.TextContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,367 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,374 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,376 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,377 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,377 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,377 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,383 - INFO - Indexing document: types.beta.threads.TextContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:19,385 - INFO - Indexing document: types.beta.threads.TextDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,387 - INFO - Indexing document: types.beta.threads.TextDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,388 - INFO - Indexing document: types.beta.threads.TextDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,390 - INFO - Indexing document: types.beta.threads.TextDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,392 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,394 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,396 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,398 - INFO - Indexing document: types.beta.threads.TextDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,400 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,402 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,403 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,403 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,403 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,408 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,410 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,412 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,414 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,416 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,418 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,418 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,418 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,425 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,428 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,429 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,429 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,429 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,434 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,436 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,437 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,437 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,437 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,443 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,445 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,447 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,450 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,452 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,454 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,454 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,459 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,460 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,462 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,462 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,462 - INFO - Indexing document: types.beta.threads.message.Attachment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,462 - INFO - Indexing document: types.beta.threads.message.Attachment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,468 - INFO - Indexing document: types.beta.threads.message.Attachment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,470 - INFO - Indexing document: types.beta.threads.message.Attachment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,471 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,473 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,475 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,478 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,480 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,482 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,484 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,485 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,487 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,489 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,491 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,493 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,495 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,496 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,498 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,500 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,501 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,503 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,505 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,507 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,510 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,512 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,514 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,515 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,519 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,522 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,524 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,525 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,525 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,533 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,536 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,540 - INFO - Indexing document: types.beta.threads.run.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,543 - INFO - Indexing document: types.beta.threads.run.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,547 - INFO - Indexing document: types.beta.threads.run.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,551 - INFO - Indexing document: types.beta.threads.run.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,553 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,556 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,559 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,561 - INFO - Indexing document: types.beta.threads.run.RequiredAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,563 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,563 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,569 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,571 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,573 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,573 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,573 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,579 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,582 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,582 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,582 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,588 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,590 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,592 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,593 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,596 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,598 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,600 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,602 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,605 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,607 - INFO - Indexing document: types.beta.threads.run.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,610 - INFO - Indexing document: types.beta.threads.run.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,611 - INFO - Indexing document: types.beta.threads.run.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,614 - INFO - Indexing document: types.beta.threads.run.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,616 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,618 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,620 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,622 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,624 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,627 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,629 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,632 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,635 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,638 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,639 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,639 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,645 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,647 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,649 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,649 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,654 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,656 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,658 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,658 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,658 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,664 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,666 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,669 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,670 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,671 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,676 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,678 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,679 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,681 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,683 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,685 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,688 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,690 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,692 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,693 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,695 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,697 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,699 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,702 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,705 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,708 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,710 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,712 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,715 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,716 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,717 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,720 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,721 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,723 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,725 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,727 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,729 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,731 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,733 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,735 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,736 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,739 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,740 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,740 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,745 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,746 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,749 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,750 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,750 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,754 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,756 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,758 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,760 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,761 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,764 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,766 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,768 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,770 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,772 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,773 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,773 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,773 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,779 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,779 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,779 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,783 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,783 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,783 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,789 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,791 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,793 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,795 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,798 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,800 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,801 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,803 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,805 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,807 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,808 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,810 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,812 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,814 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,815 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,817 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,818 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,821 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,824 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,824 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,824 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,824 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,830 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,832 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,834 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,835 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,835 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,840 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,841 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,843 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,843 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,843 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,843 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,850 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,852 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,854 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,854 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,854 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,860 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,862 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,865 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,866 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,868 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,869 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,871 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,873 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,874 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,874 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,879 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,880 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,882 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,884 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,886 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,889 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,890 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,892 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,894 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,896 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,897 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,899 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,901 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,903 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,905 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,906 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,908 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,910 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,911 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,914 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,915 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,917 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,919 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,921 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,924 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,926 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,928 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,929 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,929 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,929 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,934 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,936 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,938 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,939 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,939 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,944 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,945 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,947 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,951 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,952 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,955 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,956 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,959 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,960 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,962 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,963 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,963 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,963 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,969 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,971 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,972 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,973 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,980 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,981 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,984 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,986 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,987 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:19,989 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:19,990 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:19,992 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:19,994 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:19,994 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:19,994 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:19,999 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,001 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,002 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,005 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,007 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,012 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,013 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,015 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,017 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,019 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,021 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,023 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,025 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,027 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,029 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,030 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,032 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,033 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,035 - INFO - Indexing document: types.beta.vector_store.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,037 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,040 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,042 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,045 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,047 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,049 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,050 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,052 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,054 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,054 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,054 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,060 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,061 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,063 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,064 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,064 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,064 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,070 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,072 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,075 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,076 - INFO - Indexing document: types.chat.ChatCompletionAssistantMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,079 - INFO - Indexing document: types.chat.ChatCompletionAudio - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,079 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,083 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,086 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,087 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,089 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,091 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,092 - INFO - Indexing document: types.chat.ChatCompletionContentPartImageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,093 - INFO - Indexing document: types.chat.ChatCompletionContentPartInputAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,095 - INFO - Indexing document: types.chat.ChatCompletionContentPartRefusalParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,096 - INFO - Indexing document: types.chat.ChatCompletionContentPartTextParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,099 - INFO - Indexing document: types.chat.ChatCompletionFunctionMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,100 - INFO - Indexing document: types.chat.ChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,102 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,104 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,105 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,107 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,109 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,109 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,109 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,115 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,117 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,119 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,119 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,119 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,124 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,125 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCallParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,127 - INFO - Indexing document: types.chat.ChatCompletionNamedToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,128 - INFO - Indexing document: types.chat.ChatCompletionSystemMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,128 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,133 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,135 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,137 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,138 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,140 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,142 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,144 - INFO - Indexing document: types.chat.ChatCompletionToolMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,145 - INFO - Indexing document: types.chat.ChatCompletionUserMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,147 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,149 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,149 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,149 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,149 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,156 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,158 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,159 - INFO - Indexing document: types.chat.ParsedChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,159 - INFO - Indexing document: types.chat.ParsedChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,163 - INFO - Indexing document: types.chat.ParsedChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,166 - INFO - Indexing document: types.chat.ParsedChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,167 - INFO - Indexing document: types.chat.ParsedChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,169 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,170 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,170 - INFO - Indexing document: types.chat.ParsedFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,175 - INFO - Indexing document: types.chat.ParsedFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,176 - INFO - Indexing document: types.chat.ParsedFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,179 - INFO - Indexing document: types.chat.ParsedFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,180 - INFO - Indexing document: types.chat.ParsedFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,180 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,184 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,186 - INFO - Indexing document: types.chat.ParsedFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,188 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,189 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,189 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,189 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,194 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,196 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,198 - INFO - Indexing document: types.chat.chat_completion.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,198 - INFO - Indexing document: types.chat.chat_completion.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,198 - INFO - Indexing document: types.chat.chat_completion.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,204 - INFO - Indexing document: types.chat.chat_completion.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,206 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,207 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,210 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,211 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,214 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,216 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,217 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,219 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,219 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,219 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,225 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.Audio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,226 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.FunctionCall - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,229 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,230 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,230 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,234 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,236 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,237 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,240 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,242 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,245 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,248 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,249 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,251 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,252 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,254 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,256 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,257 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,260 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,262 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,264 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,265 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,265 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,271 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,273 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,274 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,274 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,274 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,280 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,282 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,284 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,284 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,288 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,290 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,292 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,294 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,295 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,299 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,300 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,302 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,303 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,303 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,303 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,309 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,311 - INFO - Indexing document: types.chat.chat_completion_content_part_image_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,312 - INFO - Indexing document: types.chat.chat_completion_content_part_input_audio_param.InputAudio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,314 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,314 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,319 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,320 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,322 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,324 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,324 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,330 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,332 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,333 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,333 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,333 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,339 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,340 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,342 - INFO - Indexing document: types.chat.chat_completion_message_tool_call_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,344 - INFO - Indexing document: types.chat.chat_completion_named_tool_choice_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,345 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,347 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,349 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,352 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,354 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,357 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,359 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,361 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,363 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,365 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,367 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,368 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,370 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,372 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,374 - INFO - Indexing document: types.completion_choice.Logprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,376 - INFO - Indexing document: types.completion_choice.Logprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,378 - INFO - Indexing document: types.completion_choice.Logprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,380 - INFO - Indexing document: types.completion_choice.Logprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,381 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,383 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,385 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,387 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,390 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,392 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,394 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,395 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,397 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,399 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,400 - INFO - Indexing document: types.completion_usage.PromptTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,400 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,404 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,406 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,407 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,409 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,413 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,415 - INFO - Indexing document: types.create_embedding_response.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,417 - INFO - Indexing document: types.create_embedding_response.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,420 - INFO - Indexing document: types.create_embedding_response.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,421 - INFO - Indexing document: types.create_embedding_response.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,423 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,425 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,426 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,428 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,429 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,429 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,434 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,435 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,437 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,438 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,440 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,442 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,445 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,447 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,449 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,451 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,451 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,454 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,456 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,459 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,461 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,461 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,464 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,465 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,467 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,469 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,471 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,472 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,474 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,476 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,478 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,481 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,484 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,485 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,485 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,490 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,491 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,493 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,494 - INFO - Indexing document: types.moderation.Categories - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,494 - INFO - Indexing document: types.moderation.Categories.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,494 - INFO - Indexing document: types.moderation.Categories.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,499 - INFO - Indexing document: types.moderation.Categories.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,501 - INFO - Indexing document: types.moderation.Categories.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,502 - INFO - Indexing document: types.moderation.Categories.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,505 - INFO - Indexing document: types.moderation.Categories.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,507 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,510 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,511 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,513 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,515 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,517 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,519 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,521 - INFO - Indexing document: types.moderation.CategoryScores - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,523 - INFO - Indexing document: types.moderation.CategoryScores.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,524 - INFO - Indexing document: types.moderation.CategoryScores.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,526 - INFO - Indexing document: types.moderation.CategoryScores.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,527 - INFO - Indexing document: types.moderation.CategoryScores.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,529 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,530 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,530 - INFO - Indexing document: types.moderation.FieldInfo - Usage docs: https://docs.pydantic.dev/2.10/concepts/fields

Create a field for objects that can be configured.

Used to provide extra information about a field, either for the model schema or complex ...
2024-11-27 13:50:20,535 - INFO - Indexing document: types.moderation_image_url_input_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:20,537 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:50:20,539 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:50:20,542 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:50:20,543 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:50:20,544 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:50:20,546 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:50:20,549 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:50:20,551 - INFO - Indexing document: types.shared_params.response_format_json_schema.JSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:50:47,131 - INFO - Indexed data saved successfully.
2024-11-27 13:50:47,227 - INFO - Configuration loaded successfully.
2024-11-27 13:51:11,475 - INFO - Starting search for query: example search query
2024-11-27 13:51:15,024 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.004323500004829839>
2024-11-27 13:51:15,024 - INFO - Final combined search results: []
2024-11-27 13:51:15,024 - INFO - 
Search results for query 'example search query':
2024-11-27 13:51:58,319 - INFO - Configuration loaded successfully.
2024-11-27 13:51:58,335 - INFO - Using device: cpu
2024-11-27 13:51:58,339 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 13:51:58,347 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 13:51:58,415 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 13:51:58,460 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 13:51:58,499 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 13:51:58,542 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 13:51:58,571 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 13:51:58,621 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 13:51:58,659 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 13:51:58,967 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 13:51:59,041 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 13:51:59,101 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 13:52:04,145 - INFO - Indexed data loaded successfully.
2024-11-27 13:52:06,014 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 13:52:06,017 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 13:52:06,764 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_15.json
2024-11-27 13:52:06,786 - INFO - Indexing document: APIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:06,791 - INFO - Indexing document: APIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:52:06,793 - INFO - Indexing document: APIResponse.elapsed - The time taken for the complete request/response cycle to complete....
2024-11-27 13:52:06,793 - INFO - Indexing document: APIResponse.http_request - Returns the httpx Request instance associated with the current response....
2024-11-27 13:52:06,794 - INFO - Indexing document: APIResponse.is_closed - Whether or not the response body has been closed.

If this is False then there is response data that has not been read yet.
You must either fully consume the response body or call `.close()`
before di...
2024-11-27 13:52:06,795 - INFO - Indexing document: APIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 13:52:06,796 - INFO - Indexing document: APIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 13:52:06,796 - INFO - Indexing document: APIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 13:52:06,798 - INFO - Indexing document: APIResponse.json - Read and decode the JSON response content....
2024-11-27 13:52:06,798 - INFO - Indexing document: APIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 13:52:06,800 - INFO - Indexing document: APIResponse.read - Read and return the binary response content....
2024-11-27 13:52:06,800 - INFO - Indexing document: APIResponse.text - Read and decode the response content into a string....
2024-11-27 13:52:06,801 - INFO - Indexing document: APIResponse.url - Returns the URL for which the request was made....
2024-11-27 13:52:06,801 - INFO - Indexing document: AssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 13:52:06,802 - INFO - Indexing document: AssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 13:52:06,802 - INFO - Indexing document: AssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 13:52:06,802 - INFO - Indexing document: AssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 13:52:06,802 - INFO - Indexing document: AssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 13:52:06,802 - INFO - Indexing document: AssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 13:52:06,802 - INFO - Indexing document: AssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 13:52:06,802 - INFO - Indexing document: AssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 13:52:06,802 - INFO - Indexing document: AssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 13:52:06,809 - INFO - Indexing document: AssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 13:52:06,811 - INFO - Indexing document: AssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 13:52:06,812 - INFO - Indexing document: AssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 13:52:06,813 - INFO - Indexing document: AssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 13:52:06,813 - INFO - Indexing document: AssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 13:52:06,813 - INFO - Indexing document: AssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 13:52:06,813 - INFO - Indexing document: AssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 13:52:06,819 - INFO - Indexing document: AssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 13:52:06,820 - INFO - Indexing document: AssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 13:52:06,821 - INFO - Indexing document: AssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 13:52:06,822 - INFO - Indexing document: AssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 13:52:06,823 - INFO - Indexing document: AssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 13:52:06,823 - INFO - Indexing document: AssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 13:52:06,823 - INFO - Indexing document: AsyncAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:06,823 - INFO - Indexing document: AsyncAPIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:52:06,823 - INFO - Indexing document: AsyncAPIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 13:52:06,829 - INFO - Indexing document: AsyncAPIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 13:52:06,829 - INFO - Indexing document: AsyncAPIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 13:52:06,830 - INFO - Indexing document: AsyncAPIResponse.json - Read and decode the JSON response content....
2024-11-27 13:52:06,831 - INFO - Indexing document: AsyncAPIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 13:52:06,833 - INFO - Indexing document: AsyncAPIResponse.read - Read and return the binary response content....
2024-11-27 13:52:06,833 - INFO - Indexing document: AsyncAPIResponse.text - Read and decode the response content into a string....
2024-11-27 13:52:06,833 - INFO - Indexing document: AsyncAssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 13:52:06,833 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 13:52:06,833 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 13:52:06,833 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 13:52:06,833 - INFO - Indexing document: AsyncAssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 13:52:06,838 - INFO - Indexing document: AsyncAssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 13:52:06,838 - INFO - Indexing document: AsyncAssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 13:52:06,839 - INFO - Indexing document: AsyncAssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 13:52:06,839 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 13:52:06,840 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 13:52:06,841 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 13:52:06,842 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 13:52:06,842 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 13:52:06,842 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 13:52:06,842 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 13:52:06,842 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 13:52:06,842 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 13:52:06,849 - INFO - Indexing document: AsyncAssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 13:52:06,849 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 13:52:06,850 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 13:52:06,850 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 13:52:06,851 - INFO - Indexing document: AsyncAssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 13:52:06,853 - INFO - Indexing document: AsyncAzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:06,853 - INFO - Indexing document: AsyncAzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 13:52:06,853 - INFO - Indexing document: AsyncClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:06,853 - INFO - Indexing document: AsyncStream - Provides the core interface to iterate over an asynchronous stream response....
2024-11-27 13:52:06,858 - INFO - Indexing document: AsyncStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:52:06,859 - INFO - Indexing document: AzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:06,860 - INFO - Indexing document: AzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 13:52:06,861 - INFO - Indexing document: BaseModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:06,862 - INFO - Indexing document: BaseModel.model_copy - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#model_copy

Returns a copy of the model.

Args:
    update: Values to change/add in the new model. Note: the data is not validated
  ...
2024-11-27 13:52:06,862 - INFO - Indexing document: BaseModel.model_dump - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump

Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

Args:
...
2024-11-27 13:52:06,862 - INFO - Indexing document: BaseModel.model_dump_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump_json

Generates a JSON representation of the model using Pydantic's `to_json` method.

Args:
    indent: Indentation ...
2024-11-27 13:52:06,869 - INFO - Indexing document: BaseModel.model_extra - Get extra fields set during validation.

Returns:
    A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`....
2024-11-27 13:52:06,870 - INFO - Indexing document: BaseModel.model_fields_set - Returns the set of fields that have been explicitly set on this model instance.

Returns:
    A set of strings representing the fields that have been set,
        i.e. that were not filled from defaul...
2024-11-27 13:52:06,872 - INFO - Indexing document: BaseModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:06,874 - INFO - Indexing document: BaseModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:06,874 - INFO - Indexing document: BaseModel.model_post_init - Override this method to perform additional initialization after `__init__` and `model_construct`.
This is useful if you want to do some validation that requires the entire model to be initialized....
2024-11-27 13:52:06,874 - INFO - Indexing document: BaseModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:06,878 - INFO - Indexing document: BaseModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:06,879 - INFO - Indexing document: BaseModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:06,881 - INFO - Indexing document: BaseModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:06,883 - INFO - Indexing document: BaseModel.to_dict - Recursively generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

By default, fields that were not set by the API will not be included,
and keys...
2024-11-27 13:52:06,886 - INFO - Indexing document: BaseModel.to_json - Generates a JSON string representing this model as it would be received from or sent to the API (but with indentation).

By default, fields that were not set by the API will not be included,
and keys ...
2024-11-27 13:52:06,888 - INFO - Indexing document: Client - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:06,892 - INFO - Indexing document: DefaultAsyncHttpxClient - An asynchronous HTTP client, with connection pooling, HTTP/2, redirects,
cookie persistence, etc.

It can be shared between tasks.

Usage:

```python
>>> async with httpx.AsyncClient() as client:
>>> ...
2024-11-27 13:52:06,895 - INFO - Indexing document: DefaultAsyncHttpxClient.aclose - Close transport and proxies....
2024-11-27 13:52:06,896 - INFO - Indexing document: DefaultAsyncHttpxClient.auth - Authentication class used when none is passed at the request-level.

See also [Authentication][0].

[0]: /quickstart/#authentication...
2024-11-27 13:52:06,897 - INFO - Indexing document: DefaultAsyncHttpxClient.base_url - Base URL to use when sending requests with relative URLs....
2024-11-27 13:52:06,898 - INFO - Indexing document: DefaultAsyncHttpxClient.build_request - Build and return a request instance.

* The `params`, `headers` and `cookies` arguments
are merged with any values set on the client.
* The `url` argument is merged with any `base_url` set on the clie...
2024-11-27 13:52:06,899 - INFO - Indexing document: DefaultAsyncHttpxClient.cookies - Cookie values to include when sending requests....
2024-11-27 13:52:06,899 - INFO - Indexing document: DefaultAsyncHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,900 - INFO - Indexing document: DefaultAsyncHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,901 - INFO - Indexing document: DefaultAsyncHttpxClient.headers - HTTP headers to include when sending requests....
2024-11-27 13:52:06,901 - INFO - Indexing document: DefaultAsyncHttpxClient.is_closed - Check if the client being closed...
2024-11-27 13:52:06,902 - INFO - Indexing document: DefaultAsyncHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,903 - INFO - Indexing document: DefaultAsyncHttpxClient.params - Query parameters to include in the URL when sending requests....
2024-11-27 13:52:06,903 - INFO - Indexing document: DefaultAsyncHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,903 - INFO - Indexing document: DefaultAsyncHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,903 - INFO - Indexing document: DefaultAsyncHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,903 - INFO - Indexing document: DefaultAsyncHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = await client.send(request, ...)
```

See `AsyncClient.build_request()`, `AsyncClient.send()`
and [Me...
2024-11-27 13:52:06,908 - INFO - Indexing document: DefaultAsyncHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `AsyncClient.build_request()`
so that any client-level configuration is merged into the request,
but pa...
2024-11-27 13:52:06,909 - INFO - Indexing document: DefaultAsyncHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 13:52:06,911 - INFO - Indexing document: DefaultHttpxClient - An HTTP client, with connection pooling, HTTP/2, redirects, cookie persistence, etc.

It can be shared between threads.

Usage:

```python
>>> client = httpx.Client()
>>> response = client.get('https:...
2024-11-27 13:52:06,914 - INFO - Indexing document: DefaultHttpxClient.close - Close transport and proxies....
2024-11-27 13:52:06,915 - INFO - Indexing document: DefaultHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,915 - INFO - Indexing document: DefaultHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,919 - INFO - Indexing document: DefaultHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,920 - INFO - Indexing document: DefaultHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,921 - INFO - Indexing document: DefaultHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,922 - INFO - Indexing document: DefaultHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 13:52:06,923 - INFO - Indexing document: DefaultHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = client.send(request, ...)
```

See `Client.build_request()`, `Client.send()` and
[Merging of configu...
2024-11-27 13:52:06,924 - INFO - Indexing document: DefaultHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `Client.build_request()`
so that any client-level configuration is merged into the request,
but passing...
2024-11-27 13:52:06,924 - INFO - Indexing document: DefaultHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 13:52:06,929 - INFO - Indexing document: NotGiven - A sentinel singleton class used to distinguish omitted keyword arguments
from those passed in with the value None (which may have different behavior).

For example:

```py
def get(timeout: Union[int, ...
2024-11-27 13:52:06,930 - INFO - Indexing document: RequestOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:06,932 - INFO - Indexing document: Stream - Provides the core interface to iterate over a synchronous stream response....
2024-11-27 13:52:06,933 - INFO - Indexing document: Stream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:52:06,934 - INFO - Indexing document: Timeout - Timeout configuration.

**Usage**:

Timeout(None)               # No timeouts.
Timeout(5.0)                # 5s timeout on all operations.
Timeout(None, connect=5.0)  # 5s timeout on connect, no other...
2024-11-27 13:52:06,936 - INFO - Indexing document: Transport.handle_request - Send a single HTTP request and return a response.

Developers shouldn't typically ever need to call into this API directly,
since the Client class provides all the higher level user-facing API
nicetie...
2024-11-27 13:52:06,937 - INFO - Indexing document: lib.azure.Any - Special type indicating an unconstrained type.

- Any is compatible with every type.
- Any assumed to have all methods.
- All values assumed to be instances of Any.

Note that all the above statements...
2024-11-27 13:52:06,939 - INFO - Indexing document: lib.azure.BaseAzureClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:06,939 - INFO - Indexing document: lib.azure.BaseClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:06,939 - INFO - Indexing document: lib.azure.FinalRequestOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:06,945 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:06,947 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:06,949 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:06,951 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:06,953 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:06,955 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:06,957 - INFO - Indexing document: lib.azure.Omit - In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 13:52:06,960 - INFO - Indexing document: lib.azure.TypeVar - Type variable.

The preferred way to construct a type variable is via the dedicated
syntax for generic functions, classes, and type aliases::

    class Sequence[T]:  # T is a TypeVar
        ...

Thi...
2024-11-27 13:52:06,962 - INFO - Indexing document: lib.azure.cast - Cast a value to a type.

This returns the value unchanged.  To the type checker this
signals that the return value has the designated type, but at
runtime we intentionally don't check anything (we wan...
2024-11-27 13:52:06,964 - INFO - Indexing document: lib.azure.overload - Decorator for overloaded functions/methods.

In a stub file, place two or more stub definitions for the same
function in a row, each decorated with @overload.

For example::

    @overload
    def utf...
2024-11-27 13:52:06,966 - INFO - Indexing document: lib.azure.override - Indicate that a method is intended to override a method in a base class.

Usage::

    class Base:
        def method(self) -> None: ...
            pass

    class Child(Base):
        @override
    ...
2024-11-27 13:52:06,969 - INFO - Indexing document: lib.streaming.AssistantStreamManager - Wrapper over AssistantStreamEventHandler that is returned by `.stream()`
so that a context manager can be used.

```py
with client.threads.create_and_run_stream(...) as stream:
    for event in stream...
2024-11-27 13:52:06,971 - INFO - Indexing document: lib.streaming.AsyncAssistantStreamManager - Wrapper over AsyncAssistantStreamEventHandler that is returned by `.stream()`
so that an async context manager can be used without `await`ing the
original client call.

```py
async with client.threads...
2024-11-27 13:52:06,972 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 13:52:06,974 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:52:06,975 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 13:52:06,977 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 13:52:06,979 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStreamManager - Context manager over a `AsyncChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```p...
2024-11-27 13:52:06,981 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 13:52:06,983 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 13:52:06,984 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 13:52:06,986 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 13:52:06,987 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStreamManager - Context manager over a `ChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```py
wit...
2024-11-27 13:52:06,991 - INFO - Indexing document: lib.streaming.chat.ChunkEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:06,993 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:06,993 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:06,993 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:06,998 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,000 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,002 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,003 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent - This event is yielded for every chunk with `choice.delta.content` data....
2024-11-27 13:52:07,003 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,007 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,009 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,011 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,014 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,017 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,021 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,022 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,024 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,026 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,028 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,030 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,031 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,034 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,036 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,038 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,040 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,043 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,045 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,047 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,050 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,053 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,055 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,057 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,059 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,060 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,062 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,064 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,066 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,068 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,070 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,072 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,074 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,077 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,079 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,081 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,082 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,084 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,087 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,088 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,091 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,092 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,094 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,095 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,095 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,099 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,101 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,104 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,104 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,104 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,109 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,111 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,113 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,114 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,116 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,117 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,119 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,122 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,124 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,125 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,127 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,129 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,130 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,132 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,134 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,137 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,140 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,142 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,144 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,145 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,147 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,149 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,149 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,149 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,154 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,156 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,157 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,159 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,159 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,164 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,166 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,168 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,170 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,172 - INFO - Indexing document: pagination.AsyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 13:52:07,174 - INFO - Indexing document: pagination.AsyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,176 - INFO - Indexing document: pagination.AsyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,177 - INFO - Indexing document: pagination.AsyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:52:07,179 - INFO - Indexing document: pagination.AsyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,180 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,181 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,183 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,185 - INFO - Indexing document: pagination.AsyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 13:52:07,186 - INFO - Indexing document: pagination.AsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,187 - INFO - Indexing document: pagination.AsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:52:07,188 - INFO - Indexing document: pagination.AsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,189 - INFO - Indexing document: pagination.AsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,191 - INFO - Indexing document: pagination.AsyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,192 - INFO - Indexing document: pagination.AsyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,195 - INFO - Indexing document: pagination.AsyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 13:52:07,196 - INFO - Indexing document: pagination.BaseAsyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 13:52:07,198 - INFO - Indexing document: pagination.BaseAsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,200 - INFO - Indexing document: pagination.BaseAsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,200 - INFO - Indexing document: pagination.BaseAsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:52:07,200 - INFO - Indexing document: pagination.BaseAsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,205 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,207 - INFO - Indexing document: pagination.BasePage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 13:52:07,209 - INFO - Indexing document: pagination.BasePage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,209 - INFO - Indexing document: pagination.BasePage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,209 - INFO - Indexing document: pagination.BasePage.model_post_init - This function is meant to behave like a BaseModel method to initialise private attributes.

It takes context as an argument since that's what pydantic-core passes when calling it.

Args:
    self: The...
2024-11-27 13:52:07,214 - INFO - Indexing document: pagination.BasePage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,215 - INFO - Indexing document: pagination.BasePage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,216 - INFO - Indexing document: pagination.BasePage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,218 - INFO - Indexing document: pagination.BasePage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,220 - INFO - Indexing document: pagination.BaseSyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 13:52:07,222 - INFO - Indexing document: pagination.BaseSyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,223 - INFO - Indexing document: pagination.BaseSyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,224 - INFO - Indexing document: pagination.BaseSyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:52:07,225 - INFO - Indexing document: pagination.BaseSyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,227 - INFO - Indexing document: pagination.BaseSyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,229 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,231 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,232 - INFO - Indexing document: pagination.CursorPageItem - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 13:52:07,234 - INFO - Indexing document: pagination.Generic - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:07,234 - INFO - Indexing document: pagination.PageInfo - Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set....
2024-11-27 13:52:07,234 - INFO - Indexing document: pagination.Protocol - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 13:52:07,240 - INFO - Indexing document: pagination.SyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 13:52:07,242 - INFO - Indexing document: pagination.SyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,244 - INFO - Indexing document: pagination.SyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,244 - INFO - Indexing document: pagination.SyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:52:07,244 - INFO - Indexing document: pagination.SyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,244 - INFO - Indexing document: pagination.SyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,249 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,250 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,252 - INFO - Indexing document: pagination.SyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 13:52:07,252 - INFO - Indexing document: pagination.SyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,254 - INFO - Indexing document: pagination.SyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,254 - INFO - Indexing document: pagination.SyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 13:52:07,257 - INFO - Indexing document: pagination.SyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,259 - INFO - Indexing document: pagination.SyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,261 - INFO - Indexing document: pagination.SyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,263 - INFO - Indexing document: pagination.SyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,265 - INFO - Indexing document: pagination.SyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 13:52:07,266 - INFO - Indexing document: pagination.runtime_checkable - Mark a protocol class as a runtime protocol.

Such protocol can be used with isinstance() and issubclass().
Raise TypeError if applied to a non-protocol class.
This allows a simple-minded structural c...
2024-11-27 13:52:07,267 - INFO - Indexing document: resources.AsyncBatches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 13:52:07,270 - INFO - Indexing document: resources.AsyncBatches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 13:52:07,272 - INFO - Indexing document: resources.AsyncBatches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 13:52:07,273 - INFO - Indexing document: resources.AsyncBatches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 13:52:07,274 - INFO - Indexing document: resources.AsyncEmbeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 13:52:07,274 - INFO - Indexing document: resources.AsyncFiles.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 13:52:07,279 - INFO - Indexing document: resources.AsyncFiles.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 13:52:07,280 - INFO - Indexing document: resources.AsyncFiles.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 13:52:07,282 - INFO - Indexing document: resources.AsyncFiles.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 13:52:07,284 - INFO - Indexing document: resources.AsyncFiles.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 13:52:07,284 - INFO - Indexing document: resources.AsyncFiles.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 13:52:07,288 - INFO - Indexing document: resources.AsyncFiles.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 13:52:07,289 - INFO - Indexing document: resources.AsyncImages.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 13:52:07,291 - INFO - Indexing document: resources.AsyncImages.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 13:52:07,294 - INFO - Indexing document: resources.AsyncImages.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 13:52:07,297 - INFO - Indexing document: resources.AsyncModels.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 13:52:07,300 - INFO - Indexing document: resources.AsyncModels.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 13:52:07,301 - INFO - Indexing document: resources.AsyncModels.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 13:52:07,302 - INFO - Indexing document: resources.AsyncModerations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 13:52:07,304 - INFO - Indexing document: resources.AsyncUploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 13:52:07,304 - INFO - Indexing document: resources.AsyncUploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 13:52:07,304 - INFO - Indexing document: resources.AsyncUploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 13:52:07,309 - INFO - Indexing document: resources.AsyncUploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 13:52:07,312 - INFO - Indexing document: resources.Batches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 13:52:07,314 - INFO - Indexing document: resources.Batches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 13:52:07,314 - INFO - Indexing document: resources.Batches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 13:52:07,314 - INFO - Indexing document: resources.Batches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 13:52:07,319 - INFO - Indexing document: resources.Embeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 13:52:07,321 - INFO - Indexing document: resources.Files.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 13:52:07,323 - INFO - Indexing document: resources.Files.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 13:52:07,323 - INFO - Indexing document: resources.Files.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 13:52:07,323 - INFO - Indexing document: resources.Files.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 13:52:07,329 - INFO - Indexing document: resources.Files.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 13:52:07,332 - INFO - Indexing document: resources.Files.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 13:52:07,334 - INFO - Indexing document: resources.Files.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 13:52:07,334 - INFO - Indexing document: resources.Images.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 13:52:07,335 - INFO - Indexing document: resources.Images.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 13:52:07,335 - INFO - Indexing document: resources.Images.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 13:52:07,340 - INFO - Indexing document: resources.Models.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 13:52:07,343 - INFO - Indexing document: resources.Models.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 13:52:07,343 - INFO - Indexing document: resources.Models.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 13:52:07,344 - INFO - Indexing document: resources.Moderations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 13:52:07,344 - INFO - Indexing document: resources.Uploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 13:52:07,349 - INFO - Indexing document: resources.Uploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 13:52:07,350 - INFO - Indexing document: resources.Uploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 13:52:07,352 - INFO - Indexing document: resources.Uploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 13:52:07,355 - INFO - Indexing document: resources.audio.AsyncSpeech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 13:52:07,357 - INFO - Indexing document: resources.audio.AsyncTranscriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 13:52:07,359 - INFO - Indexing document: resources.audio.AsyncTranslations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 13:52:07,362 - INFO - Indexing document: resources.audio.Speech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 13:52:07,363 - INFO - Indexing document: resources.audio.Transcriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 13:52:07,365 - INFO - Indexing document: resources.audio.Translations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 13:52:07,367 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:07,368 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 13:52:07,369 - INFO - Indexing document: resources.audio.speech.Body - The base class of the class hierarchy.

When called, it accepts no arguments and returns a new featureless
instance that has no instance attributes and cannot be given any....
2024-11-27 13:52:07,370 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:07,372 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 13:52:07,372 - INFO - Indexing document: resources.audio.speech.async_maybe_transform - Wrapper over `async_transform()` that allows `None` to be passed.

See `async_transform()` for more details....
2024-11-27 13:52:07,372 - INFO - Indexing document: resources.audio.speech.async_to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 13:52:07,372 - INFO - Indexing document: resources.audio.speech.make_request_options - Create a dict of type RequestOptions without keys of NotGiven values....
2024-11-27 13:52:07,372 - INFO - Indexing document: resources.audio.speech.maybe_transform - Wrapper over `transform()` that allows `None` to be passed.

See `transform()` for more details....
2024-11-27 13:52:07,377 - INFO - Indexing document: resources.audio.speech.speech_create_params.SpeechCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,378 - INFO - Indexing document: resources.audio.speech.speech_create_params.TypedDict - A simple typed namespace. At runtime it is equivalent to a plain dict.

TypedDict creates a dictionary type such that a type checker will expect all
instances to have a certain set of keys, where each...
2024-11-27 13:52:07,380 - INFO - Indexing document: resources.audio.speech.to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 13:52:07,382 - INFO - Indexing document: resources.audio.transcriptions.Transcription - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,384 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,386 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,388 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,389 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,391 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,394 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,395 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,397 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,399 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,401 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,402 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,404 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,406 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,407 - INFO - Indexing document: resources.audio.transcriptions.assert_never - Statically assert that a line of code is unreachable.

Example::

    def int_or_str(arg: int | str) -> None:
        match arg:
            case int():
                print("It's an int")
          ...
2024-11-27 13:52:07,409 - INFO - Indexing document: resources.audio.transcriptions.async_to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 13:52:07,410 - INFO - Indexing document: resources.audio.transcriptions.deepcopy_minimal - Minimal reimplementation of copy.deepcopy() that will only copy certain object types:

- mappings, e.g. `dict`
- list

This is done for performance reasons....
2024-11-27 13:52:07,412 - INFO - Indexing document: resources.audio.transcriptions.extract_files - Recursively extract files from the given dictionary based on specified paths.

A path may look like this ['foo', 'files', '<array>', 'data'].

Note: this mutates the given dictionary....
2024-11-27 13:52:07,413 - INFO - Indexing document: resources.audio.transcriptions.to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 13:52:07,414 - INFO - Indexing document: resources.audio.transcriptions.transcription_create_params.TranscriptionCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,416 - INFO - Indexing document: resources.audio.translations.Translation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,417 - INFO - Indexing document: resources.audio.translations.Translation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,417 - INFO - Indexing document: resources.audio.translations.Translation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,422 - INFO - Indexing document: resources.audio.translations.Translation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,423 - INFO - Indexing document: resources.audio.translations.Translation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,426 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,428 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,428 - INFO - Indexing document: resources.audio.translations.TranslationVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,428 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,433 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,435 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,437 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,438 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,438 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,438 - INFO - Indexing document: resources.audio.translations.translation_create_params.TranslationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,443 - INFO - Indexing document: resources.batches.AsyncPaginator - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 13:52:07,444 - INFO - Indexing document: resources.batches.Batch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,447 - INFO - Indexing document: resources.batches.Batch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,447 - INFO - Indexing document: resources.batches.Batch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,447 - INFO - Indexing document: resources.batches.Batch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,452 - INFO - Indexing document: resources.batches.Batch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,453 - INFO - Indexing document: resources.batches.Batch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,455 - INFO - Indexing document: resources.batches.Batch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,457 - INFO - Indexing document: resources.batches.batch_create_params.BatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,457 - INFO - Indexing document: resources.batches.batch_list_params.BatchListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,457 - INFO - Indexing document: resources.beta.Assistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 13:52:07,462 - INFO - Indexing document: resources.beta.Assistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 13:52:07,464 - INFO - Indexing document: resources.beta.Assistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 13:52:07,467 - INFO - Indexing document: resources.beta.Assistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 13:52:07,468 - INFO - Indexing document: resources.beta.AsyncAssistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 13:52:07,468 - INFO - Indexing document: resources.beta.AsyncAssistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 13:52:07,473 - INFO - Indexing document: resources.beta.AsyncAssistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 13:52:07,474 - INFO - Indexing document: resources.beta.AsyncAssistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 13:52:07,477 - INFO - Indexing document: resources.beta.AsyncThreads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 13:52:07,479 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 13:52:07,480 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 13:52:07,482 - INFO - Indexing document: resources.beta.AsyncThreads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 13:52:07,482 - INFO - Indexing document: resources.beta.AsyncThreads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 13:52:07,491 - INFO - Indexing document: resources.beta.AsyncVectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 13:52:07,494 - INFO - Indexing document: resources.beta.AsyncVectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 13:52:07,498 - INFO - Indexing document: resources.beta.AsyncVectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 13:52:07,498 - INFO - Indexing document: resources.beta.AsyncVectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 13:52:07,503 - INFO - Indexing document: resources.beta.Threads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 13:52:07,507 - INFO - Indexing document: resources.beta.Threads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 13:52:07,510 - INFO - Indexing document: resources.beta.Threads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 13:52:07,510 - INFO - Indexing document: resources.beta.Threads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 13:52:07,512 - INFO - Indexing document: resources.beta.Threads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 13:52:07,515 - INFO - Indexing document: resources.beta.VectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 13:52:07,517 - INFO - Indexing document: resources.beta.VectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 13:52:07,519 - INFO - Indexing document: resources.beta.VectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 13:52:07,521 - INFO - Indexing document: resources.beta.VectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 13:52:07,524 - INFO - Indexing document: resources.beta.assistants.Assistant - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,525 - INFO - Indexing document: resources.beta.assistants.Assistant.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,528 - INFO - Indexing document: resources.beta.assistants.Assistant.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,531 - INFO - Indexing document: resources.beta.assistants.Assistant.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,533 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,534 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,536 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,538 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,540 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,543 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,544 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,546 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,548 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,549 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.AssistantCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,549 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,553 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,555 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,556 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,559 - INFO - Indexing document: resources.beta.assistants.assistant_list_params.AssistantListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,560 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.AssistantUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,562 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,563 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,563 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,563 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 13:52:07,568 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 13:52:07,570 - INFO - Indexing document: resources.beta.chat.Completions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 13:52:07,571 - INFO - Indexing document: resources.beta.chat.Completions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 13:52:07,573 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,573 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,573 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,578 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,580 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,582 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,584 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,586 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,587 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,589 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,589 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,593 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,594 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,596 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,598 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,599 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionPredictionContentParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,601 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionStreamOptionsParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,603 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,603 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,603 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,609 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,612 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,613 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,615 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,617 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,619 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ChatCompletionFunctionCallOptionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,620 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,620 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,624 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,626 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,628 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONObject - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,629 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,631 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatText - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,633 - INFO - Indexing document: resources.beta.chat.completions.partial - partial(func, *args, **keywords) - new function with partial application
of the given arguments and keywords....
2024-11-27 13:52:07,634 - INFO - Indexing document: resources.beta.threads.AsyncMessages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 13:52:07,636 - INFO - Indexing document: resources.beta.threads.AsyncMessages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 13:52:07,639 - INFO - Indexing document: resources.beta.threads.AsyncMessages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 13:52:07,640 - INFO - Indexing document: resources.beta.threads.AsyncMessages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 13:52:07,643 - INFO - Indexing document: resources.beta.threads.AsyncRuns.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 13:52:07,645 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 13:52:07,646 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_stream - Create a Run stream...
2024-11-27 13:52:07,646 - INFO - Indexing document: resources.beta.threads.AsyncRuns.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 13:52:07,648 - INFO - Indexing document: resources.beta.threads.AsyncRuns.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 13:52:07,649 - INFO - Indexing document: resources.beta.threads.AsyncRuns.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 13:52:07,649 - INFO - Indexing document: resources.beta.threads.AsyncRuns.stream - Create a Run stream...
2024-11-27 13:52:07,649 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 13:52:07,653 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 13:52:07,654 - INFO - Indexing document: resources.beta.threads.Messages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 13:52:07,656 - INFO - Indexing document: resources.beta.threads.Messages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 13:52:07,658 - INFO - Indexing document: resources.beta.threads.Messages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 13:52:07,658 - INFO - Indexing document: resources.beta.threads.Messages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 13:52:07,658 - INFO - Indexing document: resources.beta.threads.Runs.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 13:52:07,664 - INFO - Indexing document: resources.beta.threads.Runs.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 13:52:07,665 - INFO - Indexing document: resources.beta.threads.Runs.create_and_stream - Create a Run stream...
2024-11-27 13:52:07,666 - INFO - Indexing document: resources.beta.threads.Runs.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 13:52:07,668 - INFO - Indexing document: resources.beta.threads.Runs.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 13:52:07,669 - INFO - Indexing document: resources.beta.threads.Runs.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 13:52:07,669 - INFO - Indexing document: resources.beta.threads.Runs.stream - Create a Run stream...
2024-11-27 13:52:07,669 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 13:52:07,669 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 13:52:07,674 - INFO - Indexing document: resources.beta.threads.messages.Message - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,676 - INFO - Indexing document: resources.beta.threads.messages.Message.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,678 - INFO - Indexing document: resources.beta.threads.messages.Message.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,678 - INFO - Indexing document: resources.beta.threads.messages.Message.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,678 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,678 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,678 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,678 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,688 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,689 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,689 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,689 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,689 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,695 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,697 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.Attachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,699 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.AttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,701 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.CodeInterpreterToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,703 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.MessageCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,704 - INFO - Indexing document: resources.beta.threads.messages.message_list_params.MessageListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,707 - INFO - Indexing document: resources.beta.threads.messages.message_update_params.MessageUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,708 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 13:52:07,710 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 13:52:07,712 - INFO - Indexing document: resources.beta.threads.runs.Steps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 13:52:07,713 - INFO - Indexing document: resources.beta.threads.runs.Steps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 13:52:07,715 - INFO - Indexing document: resources.beta.threads.runs.runs.Run - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,717 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,719 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,721 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,722 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,723 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,726 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,727 - INFO - Indexing document: resources.beta.threads.runs.runs.required_args - Decorator to enforce a given set of arguments or variants of arguments are passed to the decorated function.

Useful for enforcing runtime validation of overloaded functions.

Example usage:
```py
@ov...
2024-11-27 13:52:07,729 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,732 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,733 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,735 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,737 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,738 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,740 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,741 - INFO - Indexing document: resources.beta.threads.runs.runs.run_list_params.RunListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,742 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,742 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,746 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,748 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.ToolOutput - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,749 - INFO - Indexing document: resources.beta.threads.runs.runs.run_update_params.RunUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,751 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,751 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,756 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,757 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,759 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,761 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,764 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,766 - INFO - Indexing document: resources.beta.threads.runs.steps.step_list_params.StepListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,767 - INFO - Indexing document: resources.beta.threads.runs.steps.step_retrieve_params.StepRetrieveParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,767 - INFO - Indexing document: resources.beta.threads.threads.Thread - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,771 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,773 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,774 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,776 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,776 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,776 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,781 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,783 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,785 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,786 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,787 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,790 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,792 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,795 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FileSearchToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,798 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FunctionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,802 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.Thread - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,803 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,806 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,807 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,807 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,811 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,812 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,814 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,815 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,815 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,819 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,821 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,823 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,826 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,828 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,829 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.Message - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,832 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,833 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,836 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ThreadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,837 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,839 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,840 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,842 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,844 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ThreadUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,845 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,847 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,848 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,850 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 13:52:07,853 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 13:52:07,854 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 13:52:07,855 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 13:52:07,858 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 13:52:07,859 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 13:52:07,861 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 13:52:07,862 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 13:52:07,862 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 13:52:07,862 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 13:52:07,866 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 13:52:07,867 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 13:52:07,868 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 13:52:07,871 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 13:52:07,872 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 13:52:07,872 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 13:52:07,872 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 13:52:07,876 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 13:52:07,876 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 13:52:07,878 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 13:52:07,879 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 13:52:07,881 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 13:52:07,883 - INFO - Indexing document: resources.beta.vector_stores.Files.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 13:52:07,883 - INFO - Indexing document: resources.beta.vector_stores.Files.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 13:52:07,883 - INFO - Indexing document: resources.beta.vector_stores.Files.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 13:52:07,889 - INFO - Indexing document: resources.beta.vector_stores.Files.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 13:52:07,892 - INFO - Indexing document: resources.beta.vector_stores.Files.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 13:52:07,893 - INFO - Indexing document: resources.beta.vector_stores.Files.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 13:52:07,896 - INFO - Indexing document: resources.beta.vector_stores.Files.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 13:52:07,896 - INFO - Indexing document: resources.beta.vector_stores.Files.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 13:52:07,896 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,896 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,901 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,903 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,905 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,906 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,906 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,906 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future - Represents the result of an asynchronous computation....
2024-11-27 13:52:07,911 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.add_done_callback - Attaches a callable that will be called when the future finishes.

Args:
    fn: A callable that will be called with this future as its only
        argument when the future completes or is cancelled....
2024-11-27 13:52:07,912 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancel - Cancel the future if possible.

Returns True if the future was cancelled, False otherwise. A future
cannot be cancelled if it is running or has already completed....
2024-11-27 13:52:07,914 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancelled - Return True if the future was cancelled....
2024-11-27 13:52:07,915 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.done - Return True if the future was cancelled or finished executing....
2024-11-27 13:52:07,916 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.exception - Return the exception raised by the call that the future represents.

Args:
    timeout: The number of seconds to wait for the exception if the
        future isn't done. If None, then there is no limi...
2024-11-27 13:52:07,917 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.result - Return the result of the call that the future represents.

Args:
    timeout: The number of seconds to wait for the result if the future
        isn't done. If None, then there is no limit on the wait...
2024-11-27 13:52:07,919 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.running - Return True if the future is currently executing....
2024-11-27 13:52:07,920 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_exception - Sets the result of the future as being the given exception.

Should only be used by Executor implementations and unit tests....
2024-11-27 13:52:07,921 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_result - Sets the return value of work associated with the future.

Should only be used by Executor implementations and unit tests....
2024-11-27 13:52:07,921 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_running_or_notify_cancel - Mark the future as running or process any cancel notifications.

Should only be used by Executor implementations and unit tests.

If the future has been cancelled (cancel() was called and returned
Tru...
2024-11-27 13:52:07,921 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor - This is an abstract base class for concrete asynchronous executors....
2024-11-27 13:52:07,921 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.map - Returns an iterator equivalent to map(fn, iter).

Args:
    fn: A callable that will take as many arguments as there are
        passed iterables.
    timeout: The maximum number of seconds to wait. I...
2024-11-27 13:52:07,927 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.shutdown - Clean-up the resources associated with the Executor.

It is safe to call this method several times. Otherwise, no other
methods can be called after this one.

Args:
    wait: If True then shutdown wil...
2024-11-27 13:52:07,929 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.submit - Submits a callable to be executed with the given arguments.

Schedules the callable to be executed as fn(*args, **kwargs) and returns
a Future instance representing the execution of the callable.

Ret...
2024-11-27 13:52:07,930 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,931 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,931 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,936 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,937 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,938 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,941 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,941 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,944 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,946 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,948 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,949 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,951 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,953 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,955 - INFO - Indexing document: resources.beta.vector_stores.file_batches.as_completed - An iterator over the given futures that yields each as it completes.

Args:
    fs: The sequence of Futures (possibly created by different Executors) to
        iterate over.
    timeout: The maximum ...
2024-11-27 13:52:07,957 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_create_params.FileBatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,959 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_list_files_params.FileBatchListFilesParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,961 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,963 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,964 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,966 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,967 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,969 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,971 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,971 - INFO - Indexing document: resources.beta.vector_stores.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,971 - INFO - Indexing document: resources.beta.vector_stores.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:07,976 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,979 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,981 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,982 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,982 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,986 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:07,987 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:07,989 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:07,991 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:07,992 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:07,992 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:07,996 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:07,998 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,000 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,001 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,001 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.VectorStoreCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,001 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_list_params.VectorStoreListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,007 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,009 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.VectorStoreUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,011 - INFO - Indexing document: resources.completions.Completion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,011 - INFO - Indexing document: resources.completions.Completion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,011 - INFO - Indexing document: resources.completions.Completion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,016 - INFO - Indexing document: resources.completions.Completion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,018 - INFO - Indexing document: resources.completions.Completion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,019 - INFO - Indexing document: resources.completions.Completion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,021 - INFO - Indexing document: resources.completions.Completion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,021 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,021 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,026 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,028 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,030 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,032 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,033 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,034 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,036 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,038 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,040 - INFO - Indexing document: resources.embeddings.embedding_create_params.EmbeddingCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,043 - INFO - Indexing document: resources.files.FileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,045 - INFO - Indexing document: resources.files.FileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,047 - INFO - Indexing document: resources.files.FileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,048 - INFO - Indexing document: resources.files.FileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,050 - INFO - Indexing document: resources.files.FileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,052 - INFO - Indexing document: resources.files.FileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,053 - INFO - Indexing document: resources.files.FileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,055 - INFO - Indexing document: resources.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,057 - INFO - Indexing document: resources.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,058 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 13:52:08,060 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 13:52:08,062 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 13:52:08,064 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 13:52:08,065 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 13:52:08,067 - INFO - Indexing document: resources.fine_tuning.Jobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 13:52:08,069 - INFO - Indexing document: resources.fine_tuning.Jobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 13:52:08,071 - INFO - Indexing document: resources.fine_tuning.Jobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 13:52:08,071 - INFO - Indexing document: resources.fine_tuning.Jobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 13:52:08,071 - INFO - Indexing document: resources.fine_tuning.Jobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 13:52:08,076 - INFO - Indexing document: resources.fine_tuning.jobs.AsyncCheckpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 13:52:08,078 - INFO - Indexing document: resources.fine_tuning.jobs.Checkpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 13:52:08,081 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,084 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,085 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,086 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,086 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,086 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,092 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,093 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.checkpoint_list_params.CheckpointListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,096 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,096 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,096 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,101 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,102 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,104 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,106 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,108 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,112 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,113 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,116 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,116 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,116 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,121 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,122 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Hyperparameters - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,124 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Integration - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,126 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.IntegrationWandb - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,126 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.JobCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,126 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_events_params.JobListEventsParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,126 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_params.JobListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,133 - INFO - Indexing document: resources.images.ImagesResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,136 - INFO - Indexing document: resources.images.ImagesResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,136 - INFO - Indexing document: resources.images.ImagesResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,136 - INFO - Indexing document: resources.images.ImagesResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,136 - INFO - Indexing document: resources.images.ImagesResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,143 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,144 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,146 - INFO - Indexing document: resources.images.image_create_variation_params.ImageCreateVariationParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,147 - INFO - Indexing document: resources.images.image_edit_params.ImageEditParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,147 - INFO - Indexing document: resources.images.image_generate_params.ImageGenerateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,151 - INFO - Indexing document: resources.models.Model - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,153 - INFO - Indexing document: resources.models.Model.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,154 - INFO - Indexing document: resources.models.Model.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,155 - INFO - Indexing document: resources.models.Model.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,155 - INFO - Indexing document: resources.models.Model.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,155 - INFO - Indexing document: resources.models.Model.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,161 - INFO - Indexing document: resources.models.Model.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,162 - INFO - Indexing document: resources.models.ModelDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,163 - INFO - Indexing document: resources.models.ModelDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,166 - INFO - Indexing document: resources.models.ModelDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,168 - INFO - Indexing document: resources.models.ModelDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,169 - INFO - Indexing document: resources.models.ModelDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,171 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,173 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,175 - INFO - Indexing document: resources.moderations.ModerationCreateResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,177 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,179 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,181 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,182 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,183 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,185 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,185 - INFO - Indexing document: resources.moderations.moderation_create_params.ModerationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,185 - INFO - Indexing document: resources.uploads.AsyncParts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 13:52:08,185 - INFO - Indexing document: resources.uploads.Parts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 13:52:08,191 - INFO - Indexing document: resources.uploads.parts.UploadPart - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,193 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,195 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,197 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,199 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,201 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,201 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,206 - INFO - Indexing document: resources.uploads.parts.part_create_params.PartCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,208 - INFO - Indexing document: resources.uploads.uploads.Path - PurePath subclass that can make system calls.

Path represents a filesystem path but unlike PurePath, also offers
methods to do system calls on path objects. Depending on your system,
instantiating a ...
2024-11-27 13:52:08,209 - INFO - Indexing document: resources.uploads.uploads.Path.absolute - Return an absolute version of this path by prepending the current
working directory. No normalization or symlink resolution is performed.

Use resolve() to get the canonical path to a file....
2024-11-27 13:52:08,211 - INFO - Indexing document: resources.uploads.uploads.Path.anchor - The concatenation of the drive and root, or ''....
2024-11-27 13:52:08,211 - INFO - Indexing document: resources.uploads.uploads.Path.as_posix - Return the string representation of the path with forward (/)
slashes....
2024-11-27 13:52:08,211 - INFO - Indexing document: resources.uploads.uploads.Path.as_uri - Return the path as a 'file' URI....
2024-11-27 13:52:08,211 - INFO - Indexing document: resources.uploads.uploads.Path.chmod - Change the permissions of the path, like os.chmod()....
2024-11-27 13:52:08,211 - INFO - Indexing document: resources.uploads.uploads.Path.cwd - Return a new path pointing to the current working directory....
2024-11-27 13:52:08,211 - INFO - Indexing document: resources.uploads.uploads.Path.drive - The drive prefix (letter or UNC path), if any....
2024-11-27 13:52:08,211 - INFO - Indexing document: resources.uploads.uploads.Path.exists - Whether this path exists.

This method normally follows symlinks; to check whether a symlink exists,
add the argument follow_symlinks=False....
2024-11-27 13:52:08,216 - INFO - Indexing document: resources.uploads.uploads.Path.expanduser - Return a new path with expanded ~ and ~user constructs
(as returned by os.path.expanduser)...
2024-11-27 13:52:08,217 - INFO - Indexing document: resources.uploads.uploads.Path.glob - Iterate over this subtree and yield all existing files (of any
kind, including directories) matching the given relative pattern....
2024-11-27 13:52:08,218 - INFO - Indexing document: resources.uploads.uploads.Path.group - Return the group name of the file gid....
2024-11-27 13:52:08,218 - INFO - Indexing document: resources.uploads.uploads.Path.hardlink_to - Make this path a hard link pointing to the same file as *target*.

Note the order of arguments (self, target) is the reverse of os.link's....
2024-11-27 13:52:08,219 - INFO - Indexing document: resources.uploads.uploads.Path.home - Return a new path pointing to the user's home directory (as
returned by os.path.expanduser('~'))....
2024-11-27 13:52:08,221 - INFO - Indexing document: resources.uploads.uploads.Path.is_absolute - True if the path is absolute (has both a root and, if applicable,
a drive)....
2024-11-27 13:52:08,222 - INFO - Indexing document: resources.uploads.uploads.Path.is_block_device - Whether this path is a block device....
2024-11-27 13:52:08,222 - INFO - Indexing document: resources.uploads.uploads.Path.is_char_device - Whether this path is a character device....
2024-11-27 13:52:08,223 - INFO - Indexing document: resources.uploads.uploads.Path.is_dir - Whether this path is a directory....
2024-11-27 13:52:08,223 - INFO - Indexing document: resources.uploads.uploads.Path.is_fifo - Whether this path is a FIFO....
2024-11-27 13:52:08,224 - INFO - Indexing document: resources.uploads.uploads.Path.is_file - Whether this path is a regular file (also True for symlinks pointing
to regular files)....
2024-11-27 13:52:08,224 - INFO - Indexing document: resources.uploads.uploads.Path.is_junction - Whether this path is a junction....
2024-11-27 13:52:08,225 - INFO - Indexing document: resources.uploads.uploads.Path.is_mount - Check if this path is a mount point...
2024-11-27 13:52:08,226 - INFO - Indexing document: resources.uploads.uploads.Path.is_relative_to - Return True if the path is relative to another path or False.
        ...
2024-11-27 13:52:08,227 - INFO - Indexing document: resources.uploads.uploads.Path.is_reserved - Return True if the path contains one of the special names reserved
by the system, if any....
2024-11-27 13:52:08,228 - INFO - Indexing document: resources.uploads.uploads.Path.is_socket - Whether this path is a socket....
2024-11-27 13:52:08,228 - INFO - Indexing document: resources.uploads.uploads.Path.is_symlink - Whether this path is a symbolic link....
2024-11-27 13:52:08,229 - INFO - Indexing document: resources.uploads.uploads.Path.iterdir - Yield path objects of the directory contents.

The children are yielded in arbitrary order, and the
special entries '.' and '..' are not included....
2024-11-27 13:52:08,231 - INFO - Indexing document: resources.uploads.uploads.Path.joinpath - Combine this path with one or several arguments, and return a
new path representing either a subpath (if all arguments are relative
paths) or a totally different path (if one of the arguments is
ancho...
2024-11-27 13:52:08,232 - INFO - Indexing document: resources.uploads.uploads.Path.lchmod - Like chmod(), except if the path points to a symlink, the symlink's
permissions are changed, rather than its target's....
2024-11-27 13:52:08,233 - INFO - Indexing document: resources.uploads.uploads.Path.lstat - Like stat(), except if the path points to a symlink, the symlink's
status information is returned, rather than its target's....
2024-11-27 13:52:08,234 - INFO - Indexing document: resources.uploads.uploads.Path.match - Return True if this path matches the given pattern....
2024-11-27 13:52:08,235 - INFO - Indexing document: resources.uploads.uploads.Path.mkdir - Create a new directory at this given path....
2024-11-27 13:52:08,235 - INFO - Indexing document: resources.uploads.uploads.Path.name - The final path component, if any....
2024-11-27 13:52:08,235 - INFO - Indexing document: resources.uploads.uploads.Path.open - Open the file pointed by this path and return a file object, as
the built-in open() function does....
2024-11-27 13:52:08,235 - INFO - Indexing document: resources.uploads.uploads.Path.owner - Return the login name of the file owner....
2024-11-27 13:52:08,235 - INFO - Indexing document: resources.uploads.uploads.Path.parent - The logical parent of the path....
2024-11-27 13:52:08,235 - INFO - Indexing document: resources.uploads.uploads.Path.parents - A sequence of this path's logical parents....
2024-11-27 13:52:08,235 - INFO - Indexing document: resources.uploads.uploads.Path.parts - An object providing sequence-like access to the
components in the filesystem path....
2024-11-27 13:52:08,235 - INFO - Indexing document: resources.uploads.uploads.Path.read_bytes - Open the file in bytes mode, read it, and close the file....
2024-11-27 13:52:08,235 - INFO - Indexing document: resources.uploads.uploads.Path.read_text - Open the file in text mode, read it, and close the file....
2024-11-27 13:52:08,235 - INFO - Indexing document: resources.uploads.uploads.Path.readlink - Return the path to which the symbolic link points....
2024-11-27 13:52:08,241 - INFO - Indexing document: resources.uploads.uploads.Path.relative_to - Return the relative path to another path identified by the passed
arguments.  If the operation is not possible (because this is not
related to the other path), raise ValueError.

The *walk_up* paramet...
2024-11-27 13:52:08,242 - INFO - Indexing document: resources.uploads.uploads.Path.rename - Rename this path to the target path.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
directory of the Path object.

Re...
2024-11-27 13:52:08,244 - INFO - Indexing document: resources.uploads.uploads.Path.replace - Rename this path to the target path, overwriting if that path exists.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
...
2024-11-27 13:52:08,246 - INFO - Indexing document: resources.uploads.uploads.Path.resolve - Make the path absolute, resolving all symlinks on the way and also
normalizing it....
2024-11-27 13:52:08,246 - INFO - Indexing document: resources.uploads.uploads.Path.rglob - Recursively yield all existing files (of any kind, including
directories) matching the given relative pattern, anywhere in
this subtree....
2024-11-27 13:52:08,246 - INFO - Indexing document: resources.uploads.uploads.Path.rmdir - Remove this directory.  The directory must be empty....
2024-11-27 13:52:08,246 - INFO - Indexing document: resources.uploads.uploads.Path.root - The root of the path, if any....
2024-11-27 13:52:08,246 - INFO - Indexing document: resources.uploads.uploads.Path.samefile - Return whether other_path is the same or not as this file
(as returned by os.path.samefile())....
2024-11-27 13:52:08,246 - INFO - Indexing document: resources.uploads.uploads.Path.stat - Return the result of the stat() system call on this path, like
os.stat() does....
2024-11-27 13:52:08,251 - INFO - Indexing document: resources.uploads.uploads.Path.stem - The final path component, minus its last suffix....
2024-11-27 13:52:08,251 - INFO - Indexing document: resources.uploads.uploads.Path.suffix - The final component's last suffix, if any.

This includes the leading period. For example: '.txt'...
2024-11-27 13:52:08,252 - INFO - Indexing document: resources.uploads.uploads.Path.suffixes - A list of the final component's suffixes, if any.

These include the leading periods. For example: ['.tar', '.gz']...
2024-11-27 13:52:08,253 - INFO - Indexing document: resources.uploads.uploads.Path.symlink_to - Make this path a symlink pointing to the target path.
Note the order of arguments (link, target) is the reverse of os.symlink....
2024-11-27 13:52:08,253 - INFO - Indexing document: resources.uploads.uploads.Path.touch - Create this file with the given access mode, if it doesn't exist....
2024-11-27 13:52:08,254 - INFO - Indexing document: resources.uploads.uploads.Path.unlink - Remove this file or link.
If the path is a directory, use rmdir() instead....
2024-11-27 13:52:08,255 - INFO - Indexing document: resources.uploads.uploads.Path.walk - Walk the directory tree from this directory, similar to os.walk()....
2024-11-27 13:52:08,256 - INFO - Indexing document: resources.uploads.uploads.Path.with_name - Return a new path with the file name changed....
2024-11-27 13:52:08,256 - INFO - Indexing document: resources.uploads.uploads.Path.with_segments - Construct a new path object from any number of path-like objects.
Subclasses may override this method to customize how new path objects
are created from methods like `iterdir()`....
2024-11-27 13:52:08,257 - INFO - Indexing document: resources.uploads.uploads.Path.with_stem - Return a new path with the stem changed....
2024-11-27 13:52:08,258 - INFO - Indexing document: resources.uploads.uploads.Path.with_suffix - Return a new path with the file suffix changed.  If the path
has no suffix, add given suffix.  If the given suffix is an empty
string, remove the suffix from the path....
2024-11-27 13:52:08,259 - INFO - Indexing document: resources.uploads.uploads.Path.write_bytes - Open the file in bytes mode, write to it, and close the file....
2024-11-27 13:52:08,260 - INFO - Indexing document: resources.uploads.uploads.Path.write_text - Open the file in text mode, write to it, and close the file....
2024-11-27 13:52:08,260 - INFO - Indexing document: resources.uploads.uploads.Upload - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,264 - INFO - Indexing document: resources.uploads.uploads.Upload.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,266 - INFO - Indexing document: resources.uploads.uploads.Upload.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,267 - INFO - Indexing document: resources.uploads.uploads.Upload.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,267 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,271 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,273 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,275 - INFO - Indexing document: resources.uploads.uploads.upload_complete_params.UploadCompleteParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,277 - INFO - Indexing document: resources.uploads.uploads.upload_create_params.UploadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,278 - INFO - Indexing document: types.BatchError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,280 - INFO - Indexing document: types.BatchError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,282 - INFO - Indexing document: types.BatchError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,283 - INFO - Indexing document: types.BatchError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,284 - INFO - Indexing document: types.BatchError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,286 - INFO - Indexing document: types.BatchError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,288 - INFO - Indexing document: types.BatchError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,289 - INFO - Indexing document: types.BatchRequestCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,292 - INFO - Indexing document: types.BatchRequestCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,293 - INFO - Indexing document: types.BatchRequestCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,296 - INFO - Indexing document: types.BatchRequestCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,297 - INFO - Indexing document: types.BatchRequestCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,298 - INFO - Indexing document: types.BatchRequestCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,301 - INFO - Indexing document: types.BatchRequestCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,303 - INFO - Indexing document: types.CompletionChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,304 - INFO - Indexing document: types.CompletionChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,306 - INFO - Indexing document: types.CompletionChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,307 - INFO - Indexing document: types.CompletionChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,309 - INFO - Indexing document: types.CompletionChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,311 - INFO - Indexing document: types.CompletionChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,312 - INFO - Indexing document: types.CompletionChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,312 - INFO - Indexing document: types.CompletionUsage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,316 - INFO - Indexing document: types.CompletionUsage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,318 - INFO - Indexing document: types.CompletionUsage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,319 - INFO - Indexing document: types.CompletionUsage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,321 - INFO - Indexing document: types.CompletionUsage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,323 - INFO - Indexing document: types.CompletionUsage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,326 - INFO - Indexing document: types.CompletionUsage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,327 - INFO - Indexing document: types.Embedding - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,327 - INFO - Indexing document: types.Embedding.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,332 - INFO - Indexing document: types.Embedding.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,333 - INFO - Indexing document: types.Embedding.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,334 - INFO - Indexing document: types.Embedding.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,336 - INFO - Indexing document: types.Embedding.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,336 - INFO - Indexing document: types.Embedding.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,336 - INFO - Indexing document: types.ErrorObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,341 - INFO - Indexing document: types.ErrorObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,343 - INFO - Indexing document: types.ErrorObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,344 - INFO - Indexing document: types.ErrorObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,345 - INFO - Indexing document: types.ErrorObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,345 - INFO - Indexing document: types.ErrorObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,345 - INFO - Indexing document: types.ErrorObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,351 - INFO - Indexing document: types.FileContent - str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer...
2024-11-27 13:52:08,353 - INFO - Indexing document: types.FunctionDefinition - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,355 - INFO - Indexing document: types.FunctionDefinition.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,357 - INFO - Indexing document: types.FunctionDefinition.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,359 - INFO - Indexing document: types.FunctionDefinition.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,360 - INFO - Indexing document: types.FunctionDefinition.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,361 - INFO - Indexing document: types.FunctionDefinition.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,362 - INFO - Indexing document: types.FunctionDefinition.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,362 - INFO - Indexing document: types.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,367 - INFO - Indexing document: types.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,368 - INFO - Indexing document: types.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,370 - INFO - Indexing document: types.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,371 - INFO - Indexing document: types.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,371 - INFO - Indexing document: types.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,371 - INFO - Indexing document: types.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,376 - INFO - Indexing document: types.Moderation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,378 - INFO - Indexing document: types.Moderation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,379 - INFO - Indexing document: types.Moderation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,382 - INFO - Indexing document: types.Moderation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,383 - INFO - Indexing document: types.Moderation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,385 - INFO - Indexing document: types.Moderation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,388 - INFO - Indexing document: types.Moderation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,389 - INFO - Indexing document: types.ModerationImageURLInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,392 - INFO - Indexing document: types.ModerationTextInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,393 - INFO - Indexing document: types.ResponseFormatJSONObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,395 - INFO - Indexing document: types.ResponseFormatJSONObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,397 - INFO - Indexing document: types.ResponseFormatJSONObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,398 - INFO - Indexing document: types.ResponseFormatJSONObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,400 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,401 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,402 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,402 - INFO - Indexing document: types.ResponseFormatJSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,407 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,408 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,410 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,411 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,414 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,416 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,418 - INFO - Indexing document: types.ResponseFormatText - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,419 - INFO - Indexing document: types.ResponseFormatText.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,421 - INFO - Indexing document: types.ResponseFormatText.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,423 - INFO - Indexing document: types.ResponseFormatText.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,423 - INFO - Indexing document: types.ResponseFormatText.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,426 - INFO - Indexing document: types.ResponseFormatText.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,428 - INFO - Indexing document: types.ResponseFormatText.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,429 - INFO - Indexing document: types.audio.TranscriptionSegment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,430 - INFO - Indexing document: types.audio.TranscriptionSegment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,430 - INFO - Indexing document: types.audio.TranscriptionSegment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,430 - INFO - Indexing document: types.audio.TranscriptionSegment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,436 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,437 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,439 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,441 - INFO - Indexing document: types.audio.TranscriptionWord - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,441 - INFO - Indexing document: types.audio.TranscriptionWord.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,445 - INFO - Indexing document: types.audio.TranscriptionWord.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,447 - INFO - Indexing document: types.audio.TranscriptionWord.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,449 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,450 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,451 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,451 - INFO - Indexing document: types.batch.Errors - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,456 - INFO - Indexing document: types.batch.Errors.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,458 - INFO - Indexing document: types.batch.Errors.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,460 - INFO - Indexing document: types.batch.Errors.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,461 - INFO - Indexing document: types.batch.Errors.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,461 - INFO - Indexing document: types.batch.Errors.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,461 - INFO - Indexing document: types.batch.Errors.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,466 - INFO - Indexing document: types.beta.AssistantToolChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,468 - INFO - Indexing document: types.beta.AssistantToolChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,469 - INFO - Indexing document: types.beta.AssistantToolChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,471 - INFO - Indexing document: types.beta.AssistantToolChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,471 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,471 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,475 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,477 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,479 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,482 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,483 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,485 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,486 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,488 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,490 - INFO - Indexing document: types.beta.AssistantToolChoiceFunctionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,492 - INFO - Indexing document: types.beta.AssistantToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,493 - INFO - Indexing document: types.beta.AutoFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,495 - INFO - Indexing document: types.beta.CodeInterpreterTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,497 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,498 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,500 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,502 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,503 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,505 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,506 - INFO - Indexing document: types.beta.FileSearchTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,509 - INFO - Indexing document: types.beta.FileSearchTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,511 - INFO - Indexing document: types.beta.FileSearchTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,513 - INFO - Indexing document: types.beta.FileSearchTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,514 - INFO - Indexing document: types.beta.FileSearchTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,516 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,518 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,520 - INFO - Indexing document: types.beta.FunctionTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,522 - INFO - Indexing document: types.beta.FunctionTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,523 - INFO - Indexing document: types.beta.FunctionTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,525 - INFO - Indexing document: types.beta.FunctionTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,527 - INFO - Indexing document: types.beta.FunctionTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,529 - INFO - Indexing document: types.beta.FunctionTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,531 - INFO - Indexing document: types.beta.FunctionTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,533 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,535 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,537 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,539 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,541 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,544 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,549 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,549 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,553 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,555 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,557 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,558 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,558 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,563 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,565 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,566 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,570 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,572 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,575 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,577 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,579 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,580 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:08,583 - INFO - Indexing document: types.beta.assistant.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,585 - INFO - Indexing document: types.beta.assistant.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,587 - INFO - Indexing document: types.beta.assistant.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,587 - INFO - Indexing document: types.beta.assistant.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,587 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,592 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,594 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,597 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,599 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,601 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,603 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,605 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,608 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,610 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,615 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,617 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,619 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,620 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,622 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,624 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,626 - INFO - Indexing document: types.beta.assistant_stream_event.Annotated - Add context-specific metadata to a type.

Example: Annotated[int, runtime_check.Unsigned] indicates to the
hypothetical runtime_check module that this type is an unsigned int.
Every other consumer of ...
2024-11-27 13:52:08,628 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,631 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,634 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,636 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,638 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,640 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,642 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,643 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,643 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,648 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,649 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,652 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,653 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,653 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,657 - INFO - Indexing document: types.beta.assistant_stream_event.PropertyInfo - Metadata class to be used in Annotated types to provide information about a given type.

For example:

class MyParams(TypedDict):
    account_holder_name: Annotated[str, PropertyInfo(alias='accountHol...
2024-11-27 13:52:08,658 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,660 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,662 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,664 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,666 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,669 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,671 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,673 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,674 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,678 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,680 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,681 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,682 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,682 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,687 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,690 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,692 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,692 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,695 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,698 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,702 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,703 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,705 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,709 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,711 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,712 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,712 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,717 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,719 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,721 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,723 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,725 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,727 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,730 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,733 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,734 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,736 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,739 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,742 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,743 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,746 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,748 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,749 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,752 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,754 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,756 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,758 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,760 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,764 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,766 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,770 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,772 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,775 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,777 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,779 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,781 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,783 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,784 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,787 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,789 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,791 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,791 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,791 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,791 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,798 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,800 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,802 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,802 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,802 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,807 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,809 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,810 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,813 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,814 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,815 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,817 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,819 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,822 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,822 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,822 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,822 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,830 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,831 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,832 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,832 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,837 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,838 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,839 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,841 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,842 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,842 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,847 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,848 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,850 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,852 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,854 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,857 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,859 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,860 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,863 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,865 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,866 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,868 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,870 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,871 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,873 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,873 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,877 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,878 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,879 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,881 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,884 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,886 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,891 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,894 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,895 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,897 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,898 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,900 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,904 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,910 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,914 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,917 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,920 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,925 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,929 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,932 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,932 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,937 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,939 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,941 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,943 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,946 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,948 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,950 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,952 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,954 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,955 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,957 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,959 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,962 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,962 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,962 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,967 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,968 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,970 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,972 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,972 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,975 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,977 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,978 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,981 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,982 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,984 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,987 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:08,989 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:08,990 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:08,992 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:08,992 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:08,992 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:08,997 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:08,998 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,000 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,002 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,004 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,005 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,008 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,010 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,012 - INFO - Indexing document: types.beta.file_search_tool.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,012 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,016 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,017 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,017 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,017 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,023 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,024 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,026 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,028 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,030 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,031 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,033 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,035 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,036 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:09,038 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearchRankingOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:09,039 - INFO - Indexing document: types.beta.function_tool_param.FunctionDefinition - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:09,041 - INFO - Indexing document: types.beta.thread.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,044 - INFO - Indexing document: types.beta.thread.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,046 - INFO - Indexing document: types.beta.thread.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,048 - INFO - Indexing document: types.beta.thread.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,049 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,052 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,053 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,055 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,056 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,056 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,056 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,063 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,065 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,067 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,068 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,071 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,073 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,075 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,077 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,079 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,081 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,082 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,085 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,087 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,089 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,091 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,093 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,096 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,097 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,099 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,102 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,105 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,107 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,108 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,108 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,113 - INFO - Indexing document: types.beta.threads.FilePathAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,115 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,117 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,117 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,117 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,122 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,124 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,127 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,127 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,127 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,133 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,134 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,137 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,139 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,143 - INFO - Indexing document: types.beta.threads.ImageFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,145 - INFO - Indexing document: types.beta.threads.ImageFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,147 - INFO - Indexing document: types.beta.threads.ImageFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,149 - INFO - Indexing document: types.beta.threads.ImageFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,151 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,153 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,154 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,156 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,159 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,161 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,164 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,167 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,168 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,170 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,172 - INFO - Indexing document: types.beta.threads.ImageFileContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:09,174 - INFO - Indexing document: types.beta.threads.ImageFileDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,176 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,177 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,177 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,177 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,183 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,185 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,187 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,187 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,187 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,192 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,193 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,195 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,197 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,198 - INFO - Indexing document: types.beta.threads.ImageFileParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:09,202 - INFO - Indexing document: types.beta.threads.ImageURL - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,204 - INFO - Indexing document: types.beta.threads.ImageURL.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,205 - INFO - Indexing document: types.beta.threads.ImageURL.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,208 - INFO - Indexing document: types.beta.threads.ImageURL.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,210 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,211 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,213 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,215 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,217 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,218 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,220 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,221 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,223 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,223 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,226 - INFO - Indexing document: types.beta.threads.ImageURLContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:09,228 - INFO - Indexing document: types.beta.threads.ImageURLDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,230 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,232 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,235 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,236 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,238 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,240 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,242 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,244 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,246 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,248 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,249 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,251 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,252 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,254 - INFO - Indexing document: types.beta.threads.ImageURLParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:09,255 - INFO - Indexing document: types.beta.threads.MessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,257 - INFO - Indexing document: types.beta.threads.MessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,259 - INFO - Indexing document: types.beta.threads.MessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,262 - INFO - Indexing document: types.beta.threads.MessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,263 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,265 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,267 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,269 - INFO - Indexing document: types.beta.threads.RefusalContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,272 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,273 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,276 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,277 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,278 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,278 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,278 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,284 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,285 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,287 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,289 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,290 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,293 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,294 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,296 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,298 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,298 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,298 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,304 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,306 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,308 - INFO - Indexing document: types.beta.threads.Text - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,309 - INFO - Indexing document: types.beta.threads.Text.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,309 - INFO - Indexing document: types.beta.threads.Text.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,313 - INFO - Indexing document: types.beta.threads.Text.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,314 - INFO - Indexing document: types.beta.threads.Text.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,315 - INFO - Indexing document: types.beta.threads.Text.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,317 - INFO - Indexing document: types.beta.threads.Text.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,319 - INFO - Indexing document: types.beta.threads.TextContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,321 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,323 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,326 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,327 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,329 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,329 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,333 - INFO - Indexing document: types.beta.threads.TextContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:09,334 - INFO - Indexing document: types.beta.threads.TextDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,336 - INFO - Indexing document: types.beta.threads.TextDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,338 - INFO - Indexing document: types.beta.threads.TextDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,338 - INFO - Indexing document: types.beta.threads.TextDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,338 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,343 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,344 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,346 - INFO - Indexing document: types.beta.threads.TextDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,348 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,350 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,352 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,354 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,355 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,357 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,359 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,361 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,363 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,364 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,366 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,368 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,370 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,372 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,373 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,373 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,373 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,378 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,380 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,382 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,383 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,387 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,388 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,390 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,391 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,394 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,396 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,397 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,399 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,399 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,403 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,404 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,406 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,407 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,408 - INFO - Indexing document: types.beta.threads.message.Attachment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,408 - INFO - Indexing document: types.beta.threads.message.Attachment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,414 - INFO - Indexing document: types.beta.threads.message.Attachment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,415 - INFO - Indexing document: types.beta.threads.message.Attachment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,417 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,420 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,423 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,424 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,424 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,428 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,431 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,432 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,433 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,433 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,438 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,440 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,441 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,443 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,444 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,446 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,448 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,450 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,453 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,453 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,458 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,459 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,461 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,463 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,465 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,467 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,468 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,470 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,471 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,473 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,475 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,476 - INFO - Indexing document: types.beta.threads.run.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,480 - INFO - Indexing document: types.beta.threads.run.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,482 - INFO - Indexing document: types.beta.threads.run.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,484 - INFO - Indexing document: types.beta.threads.run.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,485 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,488 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,489 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,491 - INFO - Indexing document: types.beta.threads.run.RequiredAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,493 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,493 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,493 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,498 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,500 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,501 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,502 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,502 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,507 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,510 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,511 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,513 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,514 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,514 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,519 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,520 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,522 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,524 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,525 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,527 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,529 - INFO - Indexing document: types.beta.threads.run.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,530 - INFO - Indexing document: types.beta.threads.run.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,532 - INFO - Indexing document: types.beta.threads.run.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,533 - INFO - Indexing document: types.beta.threads.run.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,535 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,536 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,539 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,541 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,543 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,544 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,546 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,548 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,550 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,552 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,554 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,556 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,559 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,561 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,563 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,565 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,566 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,568 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,571 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,573 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,574 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,576 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,578 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,580 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,582 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,584 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,586 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,586 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,589 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,591 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,592 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,593 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,594 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,598 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,599 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,600 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,603 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,605 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,607 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,610 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,611 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,613 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,614 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,616 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,618 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,618 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,618 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,623 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,625 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,626 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,628 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,628 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,634 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,636 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,638 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,639 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,639 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,643 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,644 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,646 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,647 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,647 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,653 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,654 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,655 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,658 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,658 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,658 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,663 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,665 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,667 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,669 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,671 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,673 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,674 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,674 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,678 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,679 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,681 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,684 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,685 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,687 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,689 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,691 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,692 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,694 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,696 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,698 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,701 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,704 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,705 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,707 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,709 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,711 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,713 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,715 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,717 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,719 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,723 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,724 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,726 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,728 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,730 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,731 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,733 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,735 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,738 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,739 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,739 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,743 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,745 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,746 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,749 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,750 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,752 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,753 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,755 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,757 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,760 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,761 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,763 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,763 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,763 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,769 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,771 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,773 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,773 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,773 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,778 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,780 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,782 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,784 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,786 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,787 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,789 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,791 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,794 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,796 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,798 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,800 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,801 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,803 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,805 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,806 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,808 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,808 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,808 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,808 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,815 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,817 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,819 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,821 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,823 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,826 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,828 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,829 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,829 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,834 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,836 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,838 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,838 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,838 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,843 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,845 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,847 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,849 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,851 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,853 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,855 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,857 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,860 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,861 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,863 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,863 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,863 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,868 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,870 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,872 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,873 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,873 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,873 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,878 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,880 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,881 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,883 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,885 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,890 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,892 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,894 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,896 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,898 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,900 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,902 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,904 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,905 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,907 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,909 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,910 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,912 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,914 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,917 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,919 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,920 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,922 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,923 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,923 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,928 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,931 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,932 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,934 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,934 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,934 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,938 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,941 - INFO - Indexing document: types.beta.vector_store.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,943 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,946 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,948 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,950 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,952 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,954 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,954 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,960 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,961 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,963 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,963 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,963 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,968 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,969 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,971 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,973 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,975 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,977 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,978 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,981 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,983 - INFO - Indexing document: types.chat.ChatCompletionAssistantMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:09,985 - INFO - Indexing document: types.chat.ChatCompletionAudio - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:09,988 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:09,989 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:09,989 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:09,994 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:09,995 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:09,997 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:09,998 - INFO - Indexing document: types.chat.ChatCompletionContentPartImageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,000 - INFO - Indexing document: types.chat.ChatCompletionContentPartInputAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,002 - INFO - Indexing document: types.chat.ChatCompletionContentPartRefusalParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,003 - INFO - Indexing document: types.chat.ChatCompletionContentPartTextParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,003 - INFO - Indexing document: types.chat.ChatCompletionFunctionMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,003 - INFO - Indexing document: types.chat.ChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,008 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,009 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,011 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,013 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,015 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,018 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,020 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,022 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,024 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,025 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,026 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,028 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,031 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,033 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCallParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,034 - INFO - Indexing document: types.chat.ChatCompletionNamedToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,036 - INFO - Indexing document: types.chat.ChatCompletionSystemMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,037 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,040 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,041 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,044 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,044 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,046 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,049 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,051 - INFO - Indexing document: types.chat.ChatCompletionToolMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,051 - INFO - Indexing document: types.chat.ChatCompletionUserMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,053 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,056 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,057 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,059 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,060 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,062 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,064 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,065 - INFO - Indexing document: types.chat.ParsedChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,067 - INFO - Indexing document: types.chat.ParsedChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,069 - INFO - Indexing document: types.chat.ParsedChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,070 - INFO - Indexing document: types.chat.ParsedChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,072 - INFO - Indexing document: types.chat.ParsedChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,074 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,076 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,078 - INFO - Indexing document: types.chat.ParsedFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,080 - INFO - Indexing document: types.chat.ParsedFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,082 - INFO - Indexing document: types.chat.ParsedFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,084 - INFO - Indexing document: types.chat.ParsedFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,085 - INFO - Indexing document: types.chat.ParsedFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,087 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,088 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,090 - INFO - Indexing document: types.chat.ParsedFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,092 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,094 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,096 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,097 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,099 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,100 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,103 - INFO - Indexing document: types.chat.chat_completion.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,106 - INFO - Indexing document: types.chat.chat_completion.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,108 - INFO - Indexing document: types.chat.chat_completion.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,110 - INFO - Indexing document: types.chat.chat_completion.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,112 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,114 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,116 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,117 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,120 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,121 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,124 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,124 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,124 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,129 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,130 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.Audio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,132 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.FunctionCall - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,135 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,138 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,140 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,140 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,144 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,146 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,148 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,149 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,149 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,154 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,156 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,157 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,159 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,159 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,163 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,166 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,167 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,169 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,170 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,170 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,175 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,177 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,179 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,179 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,179 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,184 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,186 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,187 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,189 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,189 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,189 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,194 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,196 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,197 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,201 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,202 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,205 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,205 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,210 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,212 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,213 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,215 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,215 - INFO - Indexing document: types.chat.chat_completion_content_part_image_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,215 - INFO - Indexing document: types.chat.chat_completion_content_part_input_audio_param.InputAudio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,220 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,222 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,223 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,223 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,227 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,230 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,232 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,233 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,236 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,237 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,239 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,240 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,240 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,245 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,246 - INFO - Indexing document: types.chat.chat_completion_message_tool_call_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,248 - INFO - Indexing document: types.chat.chat_completion_named_tool_choice_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,249 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,251 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,253 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,255 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,256 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,258 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,261 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,263 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,265 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,267 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,267 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,270 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,272 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,274 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,276 - INFO - Indexing document: types.completion_choice.Logprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,276 - INFO - Indexing document: types.completion_choice.Logprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,280 - INFO - Indexing document: types.completion_choice.Logprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,281 - INFO - Indexing document: types.completion_choice.Logprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,283 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,284 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,285 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,288 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,290 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,292 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,295 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,296 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,298 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,299 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,299 - INFO - Indexing document: types.completion_usage.PromptTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,299 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,299 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,307 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,309 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,310 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,312 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,314 - INFO - Indexing document: types.create_embedding_response.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,316 - INFO - Indexing document: types.create_embedding_response.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,318 - INFO - Indexing document: types.create_embedding_response.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,319 - INFO - Indexing document: types.create_embedding_response.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,321 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,323 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,326 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,328 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,330 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,336 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,340 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,340 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,340 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,354 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,354 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,354 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,354 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,370 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,370 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,370 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,383 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,386 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,390 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,391 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,391 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,391 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,391 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,391 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,407 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,407 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,415 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,417 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,419 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,421 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,423 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,425 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,429 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,432 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,436 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,438 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,442 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,445 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,448 - INFO - Indexing document: types.moderation.Categories - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,450 - INFO - Indexing document: types.moderation.Categories.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,450 - INFO - Indexing document: types.moderation.Categories.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,450 - INFO - Indexing document: types.moderation.Categories.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,450 - INFO - Indexing document: types.moderation.Categories.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,450 - INFO - Indexing document: types.moderation.Categories.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,450 - INFO - Indexing document: types.moderation.Categories.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,450 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,450 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,466 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,466 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,466 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,466 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,466 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,477 - INFO - Indexing document: types.moderation.CategoryScores - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,479 - INFO - Indexing document: types.moderation.CategoryScores.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,480 - INFO - Indexing document: types.moderation.CategoryScores.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,483 - INFO - Indexing document: types.moderation.CategoryScores.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,485 - INFO - Indexing document: types.moderation.CategoryScores.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,488 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,489 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,491 - INFO - Indexing document: types.moderation.FieldInfo - Usage docs: https://docs.pydantic.dev/2.10/concepts/fields

Create a field for objects that can be configured.

Used to provide extra information about a field, either for the model schema or complex ...
2024-11-27 13:52:10,492 - INFO - Indexing document: types.moderation_image_url_input_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:10,492 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 13:52:10,497 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 13:52:10,499 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 13:52:10,500 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 13:52:10,502 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 13:52:10,503 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 13:52:10,505 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 13:52:10,507 - INFO - Indexing document: types.shared_params.response_format_json_schema.JSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 13:52:36,791 - INFO - Indexed data saved successfully.
2024-11-27 13:52:36,875 - INFO - Configuration loaded successfully.
2024-11-27 13:52:39,382 - INFO - Starting search for query: example search query
2024-11-27 13:52:40,898 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.00456490000942722>
2024-11-27 13:52:40,900 - INFO - Final combined search results: []
2024-11-27 13:52:40,901 - INFO - 
Search results for query 'example search query':
2024-11-27 14:22:13,952 - INFO - Configuration loaded successfully.
2024-11-27 14:22:13,957 - INFO - Using device: cpu
2024-11-27 14:22:13,959 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 14:22:13,970 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 14:22:14,071 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 14:22:14,110 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 14:22:14,154 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 14:22:14,196 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 14:22:14,233 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 14:22:14,309 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 14:22:14,352 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 14:22:14,694 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 14:22:14,762 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 14:22:14,813 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 14:22:20,262 - INFO - Indexed data loaded successfully.
2024-11-27 14:22:22,210 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 14:22:22,213 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 14:22:22,957 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_16.json
2024-11-27 14:22:22,974 - INFO - Indexing document: APIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:22,978 - INFO - Indexing document: APIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:22:22,980 - INFO - Indexing document: APIResponse.elapsed - The time taken for the complete request/response cycle to complete....
2024-11-27 14:22:22,981 - INFO - Indexing document: APIResponse.http_request - Returns the httpx Request instance associated with the current response....
2024-11-27 14:22:22,982 - INFO - Indexing document: APIResponse.is_closed - Whether or not the response body has been closed.

If this is False then there is response data that has not been read yet.
You must either fully consume the response body or call `.close()`
before di...
2024-11-27 14:22:22,984 - INFO - Indexing document: APIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 14:22:22,986 - INFO - Indexing document: APIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 14:22:22,986 - INFO - Indexing document: APIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 14:22:22,987 - INFO - Indexing document: APIResponse.json - Read and decode the JSON response content....
2024-11-27 14:22:22,988 - INFO - Indexing document: APIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 14:22:22,989 - INFO - Indexing document: APIResponse.read - Read and return the binary response content....
2024-11-27 14:22:22,990 - INFO - Indexing document: APIResponse.text - Read and decode the response content into a string....
2024-11-27 14:22:22,991 - INFO - Indexing document: APIResponse.url - Returns the URL for which the request was made....
2024-11-27 14:22:22,991 - INFO - Indexing document: AssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 14:22:22,992 - INFO - Indexing document: AssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 14:22:22,993 - INFO - Indexing document: AssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 14:22:22,994 - INFO - Indexing document: AssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 14:22:22,995 - INFO - Indexing document: AssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 14:22:22,996 - INFO - Indexing document: AssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 14:22:22,996 - INFO - Indexing document: AssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 14:22:22,997 - INFO - Indexing document: AssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 14:22:22,998 - INFO - Indexing document: AssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 14:22:22,998 - INFO - Indexing document: AssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 14:22:23,000 - INFO - Indexing document: AssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 14:22:23,000 - INFO - Indexing document: AssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 14:22:23,001 - INFO - Indexing document: AssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 14:22:23,002 - INFO - Indexing document: AssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 14:22:23,003 - INFO - Indexing document: AssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 14:22:23,004 - INFO - Indexing document: AssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 14:22:23,005 - INFO - Indexing document: AssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 14:22:23,006 - INFO - Indexing document: AssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 14:22:23,007 - INFO - Indexing document: AssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 14:22:23,008 - INFO - Indexing document: AssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:22:23,010 - INFO - Indexing document: AssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:22:23,011 - INFO - Indexing document: AssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 14:22:23,011 - INFO - Indexing document: AsyncAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,013 - INFO - Indexing document: AsyncAPIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:22:23,014 - INFO - Indexing document: AsyncAPIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 14:22:23,015 - INFO - Indexing document: AsyncAPIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 14:22:23,016 - INFO - Indexing document: AsyncAPIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 14:22:23,017 - INFO - Indexing document: AsyncAPIResponse.json - Read and decode the JSON response content....
2024-11-27 14:22:23,017 - INFO - Indexing document: AsyncAPIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 14:22:23,018 - INFO - Indexing document: AsyncAPIResponse.read - Read and return the binary response content....
2024-11-27 14:22:23,019 - INFO - Indexing document: AsyncAPIResponse.text - Read and decode the response content into a string....
2024-11-27 14:22:23,020 - INFO - Indexing document: AsyncAssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 14:22:23,020 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 14:22:23,021 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 14:22:23,022 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 14:22:23,022 - INFO - Indexing document: AsyncAssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 14:22:23,024 - INFO - Indexing document: AsyncAssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 14:22:23,024 - INFO - Indexing document: AsyncAssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 14:22:23,026 - INFO - Indexing document: AsyncAssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 14:22:23,027 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 14:22:23,027 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 14:22:23,029 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 14:22:23,029 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 14:22:23,030 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 14:22:23,032 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 14:22:23,032 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 14:22:23,033 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 14:22:23,035 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 14:22:23,035 - INFO - Indexing document: AsyncAssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 14:22:23,036 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 14:22:23,037 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:22:23,037 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:22:23,038 - INFO - Indexing document: AsyncAssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 14:22:23,038 - INFO - Indexing document: AsyncAzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,042 - INFO - Indexing document: AsyncAzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 14:22:23,044 - INFO - Indexing document: AsyncClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,046 - INFO - Indexing document: AsyncStream - Provides the core interface to iterate over an asynchronous stream response....
2024-11-27 14:22:23,047 - INFO - Indexing document: AsyncStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:22:23,048 - INFO - Indexing document: AzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,050 - INFO - Indexing document: AzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 14:22:23,052 - INFO - Indexing document: BaseModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,054 - INFO - Indexing document: BaseModel.model_copy - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#model_copy

Returns a copy of the model.

Args:
    update: Values to change/add in the new model. Note: the data is not validated
  ...
2024-11-27 14:22:23,056 - INFO - Indexing document: BaseModel.model_dump - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump

Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

Args:
...
2024-11-27 14:22:23,058 - INFO - Indexing document: BaseModel.model_dump_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump_json

Generates a JSON representation of the model using Pydantic's `to_json` method.

Args:
    indent: Indentation ...
2024-11-27 14:22:23,060 - INFO - Indexing document: BaseModel.model_extra - Get extra fields set during validation.

Returns:
    A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`....
2024-11-27 14:22:23,061 - INFO - Indexing document: BaseModel.model_fields_set - Returns the set of fields that have been explicitly set on this model instance.

Returns:
    A set of strings representing the fields that have been set,
        i.e. that were not filled from defaul...
2024-11-27 14:22:23,063 - INFO - Indexing document: BaseModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,064 - INFO - Indexing document: BaseModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,066 - INFO - Indexing document: BaseModel.model_post_init - Override this method to perform additional initialization after `__init__` and `model_construct`.
This is useful if you want to do some validation that requires the entire model to be initialized....
2024-11-27 14:22:23,067 - INFO - Indexing document: BaseModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,068 - INFO - Indexing document: BaseModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,070 - INFO - Indexing document: BaseModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,072 - INFO - Indexing document: BaseModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,074 - INFO - Indexing document: BaseModel.to_dict - Recursively generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

By default, fields that were not set by the API will not be included,
and keys...
2024-11-27 14:22:23,076 - INFO - Indexing document: BaseModel.to_json - Generates a JSON string representing this model as it would be received from or sent to the API (but with indentation).

By default, fields that were not set by the API will not be included,
and keys ...
2024-11-27 14:22:23,077 - INFO - Indexing document: Client - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,079 - INFO - Indexing document: DefaultAsyncHttpxClient - An asynchronous HTTP client, with connection pooling, HTTP/2, redirects,
cookie persistence, etc.

It can be shared between tasks.

Usage:

```python
>>> async with httpx.AsyncClient() as client:
>>> ...
2024-11-27 14:22:23,082 - INFO - Indexing document: DefaultAsyncHttpxClient.aclose - Close transport and proxies....
2024-11-27 14:22:23,083 - INFO - Indexing document: DefaultAsyncHttpxClient.auth - Authentication class used when none is passed at the request-level.

See also [Authentication][0].

[0]: /quickstart/#authentication...
2024-11-27 14:22:23,084 - INFO - Indexing document: DefaultAsyncHttpxClient.base_url - Base URL to use when sending requests with relative URLs....
2024-11-27 14:22:23,085 - INFO - Indexing document: DefaultAsyncHttpxClient.build_request - Build and return a request instance.

* The `params`, `headers` and `cookies` arguments
are merged with any values set on the client.
* The `url` argument is merged with any `base_url` set on the clie...
2024-11-27 14:22:23,087 - INFO - Indexing document: DefaultAsyncHttpxClient.cookies - Cookie values to include when sending requests....
2024-11-27 14:22:23,087 - INFO - Indexing document: DefaultAsyncHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,088 - INFO - Indexing document: DefaultAsyncHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,089 - INFO - Indexing document: DefaultAsyncHttpxClient.headers - HTTP headers to include when sending requests....
2024-11-27 14:22:23,089 - INFO - Indexing document: DefaultAsyncHttpxClient.is_closed - Check if the client being closed...
2024-11-27 14:22:23,089 - INFO - Indexing document: DefaultAsyncHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,090 - INFO - Indexing document: DefaultAsyncHttpxClient.params - Query parameters to include in the URL when sending requests....
2024-11-27 14:22:23,091 - INFO - Indexing document: DefaultAsyncHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,092 - INFO - Indexing document: DefaultAsyncHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,092 - INFO - Indexing document: DefaultAsyncHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,093 - INFO - Indexing document: DefaultAsyncHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = await client.send(request, ...)
```

See `AsyncClient.build_request()`, `AsyncClient.send()`
and [Me...
2024-11-27 14:22:23,096 - INFO - Indexing document: DefaultAsyncHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `AsyncClient.build_request()`
so that any client-level configuration is merged into the request,
but pa...
2024-11-27 14:22:23,097 - INFO - Indexing document: DefaultAsyncHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 14:22:23,099 - INFO - Indexing document: DefaultHttpxClient - An HTTP client, with connection pooling, HTTP/2, redirects, cookie persistence, etc.

It can be shared between threads.

Usage:

```python
>>> client = httpx.Client()
>>> response = client.get('https:...
2024-11-27 14:22:23,101 - INFO - Indexing document: DefaultHttpxClient.close - Close transport and proxies....
2024-11-27 14:22:23,103 - INFO - Indexing document: DefaultHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,104 - INFO - Indexing document: DefaultHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,106 - INFO - Indexing document: DefaultHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,107 - INFO - Indexing document: DefaultHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,108 - INFO - Indexing document: DefaultHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,109 - INFO - Indexing document: DefaultHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:22:23,109 - INFO - Indexing document: DefaultHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = client.send(request, ...)
```

See `Client.build_request()`, `Client.send()` and
[Merging of configu...
2024-11-27 14:22:23,112 - INFO - Indexing document: DefaultHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `Client.build_request()`
so that any client-level configuration is merged into the request,
but passing...
2024-11-27 14:22:23,113 - INFO - Indexing document: DefaultHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 14:22:23,115 - INFO - Indexing document: NotGiven - A sentinel singleton class used to distinguish omitted keyword arguments
from those passed in with the value None (which may have different behavior).

For example:

```py
def get(timeout: Union[int, ...
2024-11-27 14:22:23,117 - INFO - Indexing document: RequestOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,120 - INFO - Indexing document: Stream - Provides the core interface to iterate over a synchronous stream response....
2024-11-27 14:22:23,120 - INFO - Indexing document: Stream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:22:23,122 - INFO - Indexing document: Timeout - Timeout configuration.

**Usage**:

Timeout(None)               # No timeouts.
Timeout(5.0)                # 5s timeout on all operations.
Timeout(None, connect=5.0)  # 5s timeout on connect, no other...
2024-11-27 14:22:23,124 - INFO - Indexing document: Transport.handle_request - Send a single HTTP request and return a response.

Developers shouldn't typically ever need to call into this API directly,
since the Client class provides all the higher level user-facing API
nicetie...
2024-11-27 14:22:23,125 - INFO - Indexing document: lib.azure.Any - Special type indicating an unconstrained type.

- Any is compatible with every type.
- Any assumed to have all methods.
- All values assumed to be instances of Any.

Note that all the above statements...
2024-11-27 14:22:23,127 - INFO - Indexing document: lib.azure.BaseAzureClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,129 - INFO - Indexing document: lib.azure.BaseClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,131 - INFO - Indexing document: lib.azure.FinalRequestOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,133 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,136 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,138 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,140 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,142 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,145 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,148 - INFO - Indexing document: lib.azure.Omit - In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 14:22:23,150 - INFO - Indexing document: lib.azure.TypeVar - Type variable.

The preferred way to construct a type variable is via the dedicated
syntax for generic functions, classes, and type aliases::

    class Sequence[T]:  # T is a TypeVar
        ...

Thi...
2024-11-27 14:22:23,152 - INFO - Indexing document: lib.azure.cast - Cast a value to a type.

This returns the value unchanged.  To the type checker this
signals that the return value has the designated type, but at
runtime we intentionally don't check anything (we wan...
2024-11-27 14:22:23,153 - INFO - Indexing document: lib.azure.overload - Decorator for overloaded functions/methods.

In a stub file, place two or more stub definitions for the same
function in a row, each decorated with @overload.

For example::

    @overload
    def utf...
2024-11-27 14:22:23,156 - INFO - Indexing document: lib.azure.override - Indicate that a method is intended to override a method in a base class.

Usage::

    class Base:
        def method(self) -> None: ...
            pass

    class Child(Base):
        @override
    ...
2024-11-27 14:22:23,159 - INFO - Indexing document: lib.streaming.AssistantStreamManager - Wrapper over AssistantStreamEventHandler that is returned by `.stream()`
so that a context manager can be used.

```py
with client.threads.create_and_run_stream(...) as stream:
    for event in stream...
2024-11-27 14:22:23,161 - INFO - Indexing document: lib.streaming.AsyncAssistantStreamManager - Wrapper over AsyncAssistantStreamEventHandler that is returned by `.stream()`
so that an async context manager can be used without `await`ing the
original client call.

```py
async with client.threads...
2024-11-27 14:22:23,162 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 14:22:23,164 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:22:23,166 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 14:22:23,167 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 14:22:23,168 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStreamManager - Context manager over a `AsyncChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```p...
2024-11-27 14:22:23,170 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 14:22:23,172 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:22:23,174 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 14:22:23,175 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 14:22:23,176 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStreamManager - Context manager over a `ChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```py
wit...
2024-11-27 14:22:23,178 - INFO - Indexing document: lib.streaming.chat.ChunkEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,180 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,182 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,184 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,185 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,188 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,190 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,191 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent - This event is yielded for every chunk with `choice.delta.content` data....
2024-11-27 14:22:23,192 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,194 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,196 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,200 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,202 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,204 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,207 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,209 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,211 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,213 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,215 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,218 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,220 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,222 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,224 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,227 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,230 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,231 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,233 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,235 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,237 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,240 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,242 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,244 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,246 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,248 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,250 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,252 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,254 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,256 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,258 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,261 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,264 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,266 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,269 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,271 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,273 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,275 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,277 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,279 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,281 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,283 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,285 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,287 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,289 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,291 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,293 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,296 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,299 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,300 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,302 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,304 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,306 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,307 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,310 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,312 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,313 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,315 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,317 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,319 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,322 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,325 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,327 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,329 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,331 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,333 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,335 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,336 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,339 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,342 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,343 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,345 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,347 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,349 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,351 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,353 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,354 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,356 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,358 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,360 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,362 - INFO - Indexing document: pagination.AsyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:22:23,364 - INFO - Indexing document: pagination.AsyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,365 - INFO - Indexing document: pagination.AsyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,367 - INFO - Indexing document: pagination.AsyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:22:23,368 - INFO - Indexing document: pagination.AsyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,369 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,371 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,373 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,374 - INFO - Indexing document: pagination.AsyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 14:22:23,375 - INFO - Indexing document: pagination.AsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,377 - INFO - Indexing document: pagination.AsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,379 - INFO - Indexing document: pagination.AsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:22:23,380 - INFO - Indexing document: pagination.AsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,381 - INFO - Indexing document: pagination.AsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,382 - INFO - Indexing document: pagination.AsyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,385 - INFO - Indexing document: pagination.AsyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,387 - INFO - Indexing document: pagination.AsyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 14:22:23,388 - INFO - Indexing document: pagination.BaseAsyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:22:23,389 - INFO - Indexing document: pagination.BaseAsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,391 - INFO - Indexing document: pagination.BaseAsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,393 - INFO - Indexing document: pagination.BaseAsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:22:23,394 - INFO - Indexing document: pagination.BaseAsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,395 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,397 - INFO - Indexing document: pagination.BasePage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:22:23,399 - INFO - Indexing document: pagination.BasePage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,400 - INFO - Indexing document: pagination.BasePage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,402 - INFO - Indexing document: pagination.BasePage.model_post_init - This function is meant to behave like a BaseModel method to initialise private attributes.

It takes context as an argument since that's what pydantic-core passes when calling it.

Args:
    self: The...
2024-11-27 14:22:23,403 - INFO - Indexing document: pagination.BasePage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,404 - INFO - Indexing document: pagination.BasePage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,406 - INFO - Indexing document: pagination.BasePage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,408 - INFO - Indexing document: pagination.BasePage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,410 - INFO - Indexing document: pagination.BaseSyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:22:23,411 - INFO - Indexing document: pagination.BaseSyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,413 - INFO - Indexing document: pagination.BaseSyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,415 - INFO - Indexing document: pagination.BaseSyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:22:23,416 - INFO - Indexing document: pagination.BaseSyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,418 - INFO - Indexing document: pagination.BaseSyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,419 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,421 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,423 - INFO - Indexing document: pagination.CursorPageItem - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 14:22:23,426 - INFO - Indexing document: pagination.Generic - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,427 - INFO - Indexing document: pagination.PageInfo - Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set....
2024-11-27 14:22:23,428 - INFO - Indexing document: pagination.Protocol - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 14:22:23,430 - INFO - Indexing document: pagination.SyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:22:23,432 - INFO - Indexing document: pagination.SyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,434 - INFO - Indexing document: pagination.SyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,435 - INFO - Indexing document: pagination.SyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:22:23,436 - INFO - Indexing document: pagination.SyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,437 - INFO - Indexing document: pagination.SyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,439 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,441 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,442 - INFO - Indexing document: pagination.SyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 14:22:23,443 - INFO - Indexing document: pagination.SyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,445 - INFO - Indexing document: pagination.SyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,447 - INFO - Indexing document: pagination.SyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:22:23,448 - INFO - Indexing document: pagination.SyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,449 - INFO - Indexing document: pagination.SyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,451 - INFO - Indexing document: pagination.SyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,453 - INFO - Indexing document: pagination.SyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,455 - INFO - Indexing document: pagination.SyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 14:22:23,456 - INFO - Indexing document: pagination.runtime_checkable - Mark a protocol class as a runtime protocol.

Such protocol can be used with isinstance() and issubclass().
Raise TypeError if applied to a non-protocol class.
This allows a simple-minded structural c...
2024-11-27 14:22:23,458 - INFO - Indexing document: resources.AsyncBatches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 14:22:23,459 - INFO - Indexing document: resources.AsyncBatches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 14:22:23,461 - INFO - Indexing document: resources.AsyncBatches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 14:22:23,463 - INFO - Indexing document: resources.AsyncBatches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:22:23,465 - INFO - Indexing document: resources.AsyncEmbeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 14:22:23,467 - INFO - Indexing document: resources.AsyncFiles.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:22:23,469 - INFO - Indexing document: resources.AsyncFiles.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 14:22:23,471 - INFO - Indexing document: resources.AsyncFiles.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 14:22:23,473 - INFO - Indexing document: resources.AsyncFiles.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 14:22:23,474 - INFO - Indexing document: resources.AsyncFiles.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 14:22:23,476 - INFO - Indexing document: resources.AsyncFiles.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:22:23,478 - INFO - Indexing document: resources.AsyncFiles.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 14:22:23,479 - INFO - Indexing document: resources.AsyncImages.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 14:22:23,482 - INFO - Indexing document: resources.AsyncImages.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 14:22:23,484 - INFO - Indexing document: resources.AsyncImages.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 14:22:23,486 - INFO - Indexing document: resources.AsyncModels.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 14:22:23,488 - INFO - Indexing document: resources.AsyncModels.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 14:22:23,489 - INFO - Indexing document: resources.AsyncModels.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 14:22:23,491 - INFO - Indexing document: resources.AsyncModerations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 14:22:23,493 - INFO - Indexing document: resources.AsyncUploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 14:22:23,495 - INFO - Indexing document: resources.AsyncUploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 14:22:23,496 - INFO - Indexing document: resources.AsyncUploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 14:22:23,498 - INFO - Indexing document: resources.AsyncUploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 14:22:23,500 - INFO - Indexing document: resources.Batches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 14:22:23,502 - INFO - Indexing document: resources.Batches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 14:22:23,503 - INFO - Indexing document: resources.Batches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 14:22:23,505 - INFO - Indexing document: resources.Batches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:22:23,507 - INFO - Indexing document: resources.Embeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 14:22:23,510 - INFO - Indexing document: resources.Files.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:22:23,512 - INFO - Indexing document: resources.Files.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 14:22:23,515 - INFO - Indexing document: resources.Files.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 14:22:23,518 - INFO - Indexing document: resources.Files.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 14:22:23,520 - INFO - Indexing document: resources.Files.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 14:22:23,522 - INFO - Indexing document: resources.Files.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:22:23,523 - INFO - Indexing document: resources.Files.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 14:22:23,524 - INFO - Indexing document: resources.Images.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 14:22:23,526 - INFO - Indexing document: resources.Images.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 14:22:23,527 - INFO - Indexing document: resources.Images.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 14:22:23,529 - INFO - Indexing document: resources.Models.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 14:22:23,531 - INFO - Indexing document: resources.Models.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 14:22:23,532 - INFO - Indexing document: resources.Models.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 14:22:23,534 - INFO - Indexing document: resources.Moderations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 14:22:23,536 - INFO - Indexing document: resources.Uploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 14:22:23,538 - INFO - Indexing document: resources.Uploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 14:22:23,539 - INFO - Indexing document: resources.Uploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 14:22:23,541 - INFO - Indexing document: resources.Uploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 14:22:23,543 - INFO - Indexing document: resources.audio.AsyncSpeech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 14:22:23,545 - INFO - Indexing document: resources.audio.AsyncTranscriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 14:22:23,547 - INFO - Indexing document: resources.audio.AsyncTranslations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 14:22:23,550 - INFO - Indexing document: resources.audio.Speech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 14:22:23,552 - INFO - Indexing document: resources.audio.Transcriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 14:22:23,554 - INFO - Indexing document: resources.audio.Translations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 14:22:23,556 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,557 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 14:22:23,558 - INFO - Indexing document: resources.audio.speech.Body - The base class of the class hierarchy.

When called, it accepts no arguments and returns a new featureless
instance that has no instance attributes and cannot be given any....
2024-11-27 14:22:23,559 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,561 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 14:22:23,562 - INFO - Indexing document: resources.audio.speech.async_maybe_transform - Wrapper over `async_transform()` that allows `None` to be passed.

See `async_transform()` for more details....
2024-11-27 14:22:23,563 - INFO - Indexing document: resources.audio.speech.async_to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 14:22:23,564 - INFO - Indexing document: resources.audio.speech.make_request_options - Create a dict of type RequestOptions without keys of NotGiven values....
2024-11-27 14:22:23,565 - INFO - Indexing document: resources.audio.speech.maybe_transform - Wrapper over `transform()` that allows `None` to be passed.

See `transform()` for more details....
2024-11-27 14:22:23,566 - INFO - Indexing document: resources.audio.speech.speech_create_params.SpeechCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,567 - INFO - Indexing document: resources.audio.speech.speech_create_params.TypedDict - A simple typed namespace. At runtime it is equivalent to a plain dict.

TypedDict creates a dictionary type such that a type checker will expect all
instances to have a certain set of keys, where each...
2024-11-27 14:22:23,569 - INFO - Indexing document: resources.audio.speech.to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 14:22:23,571 - INFO - Indexing document: resources.audio.transcriptions.Transcription - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,573 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,575 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,577 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,579 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,581 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,583 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,584 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,586 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,588 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,590 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,591 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,593 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,595 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,597 - INFO - Indexing document: resources.audio.transcriptions.assert_never - Statically assert that a line of code is unreachable.

Example::

    def int_or_str(arg: int | str) -> None:
        match arg:
            case int():
                print("It's an int")
          ...
2024-11-27 14:22:23,599 - INFO - Indexing document: resources.audio.transcriptions.async_to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 14:22:23,600 - INFO - Indexing document: resources.audio.transcriptions.deepcopy_minimal - Minimal reimplementation of copy.deepcopy() that will only copy certain object types:

- mappings, e.g. `dict`
- list

This is done for performance reasons....
2024-11-27 14:22:23,603 - INFO - Indexing document: resources.audio.transcriptions.extract_files - Recursively extract files from the given dictionary based on specified paths.

A path may look like this ['foo', 'files', '<array>', 'data'].

Note: this mutates the given dictionary....
2024-11-27 14:22:23,604 - INFO - Indexing document: resources.audio.transcriptions.to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 14:22:23,605 - INFO - Indexing document: resources.audio.transcriptions.transcription_create_params.TranscriptionCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,607 - INFO - Indexing document: resources.audio.translations.Translation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,609 - INFO - Indexing document: resources.audio.translations.Translation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,612 - INFO - Indexing document: resources.audio.translations.Translation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,613 - INFO - Indexing document: resources.audio.translations.Translation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,615 - INFO - Indexing document: resources.audio.translations.Translation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,617 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,619 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,620 - INFO - Indexing document: resources.audio.translations.TranslationVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,623 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,625 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,627 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,628 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,630 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,632 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,633 - INFO - Indexing document: resources.audio.translations.translation_create_params.TranslationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,635 - INFO - Indexing document: resources.batches.AsyncPaginator - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:22:23,637 - INFO - Indexing document: resources.batches.Batch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,639 - INFO - Indexing document: resources.batches.Batch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,641 - INFO - Indexing document: resources.batches.Batch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,643 - INFO - Indexing document: resources.batches.Batch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,644 - INFO - Indexing document: resources.batches.Batch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,646 - INFO - Indexing document: resources.batches.Batch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,648 - INFO - Indexing document: resources.batches.Batch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,649 - INFO - Indexing document: resources.batches.batch_create_params.BatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,651 - INFO - Indexing document: resources.batches.batch_list_params.BatchListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,652 - INFO - Indexing document: resources.beta.Assistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 14:22:23,654 - INFO - Indexing document: resources.beta.Assistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 14:22:23,657 - INFO - Indexing document: resources.beta.Assistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 14:22:23,659 - INFO - Indexing document: resources.beta.Assistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 14:22:23,661 - INFO - Indexing document: resources.beta.AsyncAssistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 14:22:23,664 - INFO - Indexing document: resources.beta.AsyncAssistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 14:22:23,667 - INFO - Indexing document: resources.beta.AsyncAssistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 14:22:23,668 - INFO - Indexing document: resources.beta.AsyncAssistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 14:22:23,670 - INFO - Indexing document: resources.beta.AsyncThreads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 14:22:23,673 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:22:23,674 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 14:22:23,674 - INFO - Indexing document: resources.beta.AsyncThreads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:22:23,677 - INFO - Indexing document: resources.beta.AsyncThreads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:22:23,679 - INFO - Indexing document: resources.beta.AsyncVectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 14:22:23,680 - INFO - Indexing document: resources.beta.AsyncVectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 14:22:23,683 - INFO - Indexing document: resources.beta.AsyncVectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 14:22:23,684 - INFO - Indexing document: resources.beta.AsyncVectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 14:22:23,686 - INFO - Indexing document: resources.beta.Threads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 14:22:23,688 - INFO - Indexing document: resources.beta.Threads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:22:23,689 - INFO - Indexing document: resources.beta.Threads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 14:22:23,690 - INFO - Indexing document: resources.beta.Threads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:22:23,692 - INFO - Indexing document: resources.beta.Threads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:22:23,694 - INFO - Indexing document: resources.beta.VectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 14:22:23,696 - INFO - Indexing document: resources.beta.VectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 14:22:23,698 - INFO - Indexing document: resources.beta.VectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 14:22:23,700 - INFO - Indexing document: resources.beta.VectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 14:22:23,702 - INFO - Indexing document: resources.beta.assistants.Assistant - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,704 - INFO - Indexing document: resources.beta.assistants.Assistant.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,706 - INFO - Indexing document: resources.beta.assistants.Assistant.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,708 - INFO - Indexing document: resources.beta.assistants.Assistant.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,709 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,711 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,713 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,714 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,716 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,719 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,720 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,722 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,723 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,725 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,727 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.AssistantCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,729 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,731 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,732 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,734 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,736 - INFO - Indexing document: resources.beta.assistants.assistant_list_params.AssistantListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,738 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.AssistantUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,740 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,741 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,743 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,744 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 14:22:23,745 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 14:22:23,747 - INFO - Indexing document: resources.beta.chat.Completions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 14:22:23,748 - INFO - Indexing document: resources.beta.chat.Completions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 14:22:23,750 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,752 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,754 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,755 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,757 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,759 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,761 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,763 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,765 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,767 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,769 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,771 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,774 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,780 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,783 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,786 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionPredictionContentParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,790 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionStreamOptionsParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,793 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,795 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,799 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,801 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,803 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,805 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,807 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,809 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,810 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ChatCompletionFunctionCallOptionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,812 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,814 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,816 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,817 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,819 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONObject - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,821 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,823 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatText - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,825 - INFO - Indexing document: resources.beta.chat.completions.partial - partial(func, *args, **keywords) - new function with partial application
of the given arguments and keywords....
2024-11-27 14:22:23,826 - INFO - Indexing document: resources.beta.threads.AsyncMessages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 14:22:23,829 - INFO - Indexing document: resources.beta.threads.AsyncMessages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:22:23,831 - INFO - Indexing document: resources.beta.threads.AsyncMessages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 14:22:23,833 - INFO - Indexing document: resources.beta.threads.AsyncMessages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:22:23,835 - INFO - Indexing document: resources.beta.threads.AsyncRuns.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:22:23,836 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:22:23,837 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_stream - Create a Run stream...
2024-11-27 14:22:23,838 - INFO - Indexing document: resources.beta.threads.AsyncRuns.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 14:22:23,839 - INFO - Indexing document: resources.beta.threads.AsyncRuns.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:22:23,840 - INFO - Indexing document: resources.beta.threads.AsyncRuns.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:22:23,843 - INFO - Indexing document: resources.beta.threads.AsyncRuns.stream - Create a Run stream...
2024-11-27 14:22:23,843 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:22:23,844 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 14:22:23,845 - INFO - Indexing document: resources.beta.threads.Messages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 14:22:23,847 - INFO - Indexing document: resources.beta.threads.Messages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:22:23,849 - INFO - Indexing document: resources.beta.threads.Messages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 14:22:23,850 - INFO - Indexing document: resources.beta.threads.Messages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:22:23,853 - INFO - Indexing document: resources.beta.threads.Runs.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:22:23,855 - INFO - Indexing document: resources.beta.threads.Runs.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:22:23,856 - INFO - Indexing document: resources.beta.threads.Runs.create_and_stream - Create a Run stream...
2024-11-27 14:22:23,857 - INFO - Indexing document: resources.beta.threads.Runs.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 14:22:23,858 - INFO - Indexing document: resources.beta.threads.Runs.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:22:23,860 - INFO - Indexing document: resources.beta.threads.Runs.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:22:23,862 - INFO - Indexing document: resources.beta.threads.Runs.stream - Create a Run stream...
2024-11-27 14:22:23,863 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:22:23,864 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 14:22:23,865 - INFO - Indexing document: resources.beta.threads.messages.Message - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,867 - INFO - Indexing document: resources.beta.threads.messages.Message.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,869 - INFO - Indexing document: resources.beta.threads.messages.Message.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,870 - INFO - Indexing document: resources.beta.threads.messages.Message.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,872 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,873 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,875 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,877 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,879 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,881 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,882 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,884 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,886 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,888 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,890 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.Attachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,891 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.AttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,893 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.CodeInterpreterToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,895 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.MessageCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,896 - INFO - Indexing document: resources.beta.threads.messages.message_list_params.MessageListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,898 - INFO - Indexing document: resources.beta.threads.messages.message_update_params.MessageUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,900 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 14:22:23,901 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 14:22:23,903 - INFO - Indexing document: resources.beta.threads.runs.Steps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 14:22:23,904 - INFO - Indexing document: resources.beta.threads.runs.Steps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 14:22:23,908 - INFO - Indexing document: resources.beta.threads.runs.runs.Run - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,910 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,912 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,914 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,915 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,917 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,919 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,920 - INFO - Indexing document: resources.beta.threads.runs.runs.required_args - Decorator to enforce a given set of arguments or variants of arguments are passed to the decorated function.

Useful for enforcing runtime validation of overloaded functions.

Example usage:
```py
@ov...
2024-11-27 14:22:23,922 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,923 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,925 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,927 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,928 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,930 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,932 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,933 - INFO - Indexing document: resources.beta.threads.runs.runs.run_list_params.RunListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,935 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,937 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,939 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,940 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.ToolOutput - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,942 - INFO - Indexing document: resources.beta.threads.runs.runs.run_update_params.RunUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,943 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,947 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,949 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,950 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,952 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,954 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,957 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,959 - INFO - Indexing document: resources.beta.threads.runs.steps.step_list_params.StepListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,960 - INFO - Indexing document: resources.beta.threads.runs.steps.step_retrieve_params.StepRetrieveParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,962 - INFO - Indexing document: resources.beta.threads.threads.Thread - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,964 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,966 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,969 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,970 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,972 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,975 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,977 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:23,980 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:23,983 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:23,985 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:23,987 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:23,989 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:23,991 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:23,993 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FileSearchToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,995 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FunctionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:23,998 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.Thread - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,000 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,001 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,003 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,005 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,007 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,009 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,011 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,014 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,016 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,018 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,020 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,022 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,024 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,026 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,028 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.Message - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,029 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,031 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,033 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ThreadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,035 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,037 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,038 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,040 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,042 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ThreadUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,045 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,047 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,049 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,051 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 14:22:24,053 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 14:22:24,055 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 14:22:24,056 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 14:22:24,058 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 14:22:24,059 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:22:24,061 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 14:22:24,063 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 14:22:24,064 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 14:22:24,065 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 14:22:24,067 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 14:22:24,068 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 14:22:24,070 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 14:22:24,073 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 14:22:24,075 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 14:22:24,075 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 14:22:24,077 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 14:22:24,079 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 14:22:24,080 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 14:22:24,081 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 14:22:24,083 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:22:24,085 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 14:22:24,086 - INFO - Indexing document: resources.beta.vector_stores.Files.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 14:22:24,088 - INFO - Indexing document: resources.beta.vector_stores.Files.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 14:22:24,089 - INFO - Indexing document: resources.beta.vector_stores.Files.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 14:22:24,090 - INFO - Indexing document: resources.beta.vector_stores.Files.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 14:22:24,092 - INFO - Indexing document: resources.beta.vector_stores.Files.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 14:22:24,093 - INFO - Indexing document: resources.beta.vector_stores.Files.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 14:22:24,095 - INFO - Indexing document: resources.beta.vector_stores.Files.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 14:22:24,096 - INFO - Indexing document: resources.beta.vector_stores.Files.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 14:22:24,097 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,099 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,101 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,103 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,105 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,107 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,108 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,110 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future - Represents the result of an asynchronous computation....
2024-11-27 14:22:24,111 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.add_done_callback - Attaches a callable that will be called when the future finishes.

Args:
    fn: A callable that will be called with this future as its only
        argument when the future completes or is cancelled....
2024-11-27 14:22:24,112 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancel - Cancel the future if possible.

Returns True if the future was cancelled, False otherwise. A future
cannot be cancelled if it is running or has already completed....
2024-11-27 14:22:24,114 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancelled - Return True if the future was cancelled....
2024-11-27 14:22:24,115 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.done - Return True if the future was cancelled or finished executing....
2024-11-27 14:22:24,115 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.exception - Return the exception raised by the call that the future represents.

Args:
    timeout: The number of seconds to wait for the exception if the
        future isn't done. If None, then there is no limi...
2024-11-27 14:22:24,117 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.result - Return the result of the call that the future represents.

Args:
    timeout: The number of seconds to wait for the result if the future
        isn't done. If None, then there is no limit on the wait...
2024-11-27 14:22:24,118 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.running - Return True if the future is currently executing....
2024-11-27 14:22:24,119 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_exception - Sets the result of the future as being the given exception.

Should only be used by Executor implementations and unit tests....
2024-11-27 14:22:24,120 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_result - Sets the return value of work associated with the future.

Should only be used by Executor implementations and unit tests....
2024-11-27 14:22:24,121 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_running_or_notify_cancel - Mark the future as running or process any cancel notifications.

Should only be used by Executor implementations and unit tests.

If the future has been cancelled (cancel() was called and returned
Tru...
2024-11-27 14:22:24,123 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor - This is an abstract base class for concrete asynchronous executors....
2024-11-27 14:22:24,123 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.map - Returns an iterator equivalent to map(fn, iter).

Args:
    fn: A callable that will take as many arguments as there are
        passed iterables.
    timeout: The maximum number of seconds to wait. I...
2024-11-27 14:22:24,125 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.shutdown - Clean-up the resources associated with the Executor.

It is safe to call this method several times. Otherwise, no other
methods can be called after this one.

Args:
    wait: If True then shutdown wil...
2024-11-27 14:22:24,127 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.submit - Submits a callable to be executed with the given arguments.

Schedules the callable to be executed as fn(*args, **kwargs) and returns
a Future instance representing the execution of the callable.

Ret...
2024-11-27 14:22:24,128 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,130 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,132 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,135 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,137 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,139 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,141 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,143 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,145 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,146 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,148 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,149 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,151 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,153 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,155 - INFO - Indexing document: resources.beta.vector_stores.file_batches.as_completed - An iterator over the given futures that yields each as it completes.

Args:
    fs: The sequence of Futures (possibly created by different Executors) to
        iterate over.
    timeout: The maximum ...
2024-11-27 14:22:24,157 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_create_params.FileBatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,158 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_list_files_params.FileBatchListFilesParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,160 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,162 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,164 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,166 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,168 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,170 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,172 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,174 - INFO - Indexing document: resources.beta.vector_stores.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,175 - INFO - Indexing document: resources.beta.vector_stores.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,177 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,179 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,181 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,182 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,184 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,186 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,188 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,189 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,191 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,193 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,195 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,196 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,199 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,201 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,203 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,205 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.VectorStoreCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,206 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_list_params.VectorStoreListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,208 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,210 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.VectorStoreUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,211 - INFO - Indexing document: resources.completions.Completion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,214 - INFO - Indexing document: resources.completions.Completion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,215 - INFO - Indexing document: resources.completions.Completion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,217 - INFO - Indexing document: resources.completions.Completion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,219 - INFO - Indexing document: resources.completions.Completion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,220 - INFO - Indexing document: resources.completions.Completion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,222 - INFO - Indexing document: resources.completions.Completion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,224 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,225 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,227 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,230 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,232 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,234 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,235 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,237 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,239 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,241 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,242 - INFO - Indexing document: resources.embeddings.embedding_create_params.EmbeddingCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,244 - INFO - Indexing document: resources.files.FileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,246 - INFO - Indexing document: resources.files.FileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,247 - INFO - Indexing document: resources.files.FileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,249 - INFO - Indexing document: resources.files.FileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,250 - INFO - Indexing document: resources.files.FileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,252 - INFO - Indexing document: resources.files.FileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,254 - INFO - Indexing document: resources.files.FileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,255 - INFO - Indexing document: resources.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,257 - INFO - Indexing document: resources.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,259 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 14:22:24,261 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 14:22:24,263 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 14:22:24,265 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 14:22:24,267 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 14:22:24,269 - INFO - Indexing document: resources.fine_tuning.Jobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 14:22:24,271 - INFO - Indexing document: resources.fine_tuning.Jobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 14:22:24,273 - INFO - Indexing document: resources.fine_tuning.Jobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 14:22:24,275 - INFO - Indexing document: resources.fine_tuning.Jobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 14:22:24,276 - INFO - Indexing document: resources.fine_tuning.Jobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 14:22:24,279 - INFO - Indexing document: resources.fine_tuning.jobs.AsyncCheckpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 14:22:24,280 - INFO - Indexing document: resources.fine_tuning.jobs.Checkpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 14:22:24,282 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,284 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,286 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,288 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,289 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,291 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,294 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,295 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.checkpoint_list_params.CheckpointListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,297 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,299 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,301 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,303 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,304 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,306 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,307 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,309 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,311 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,313 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,314 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,316 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,318 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,319 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,321 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Hyperparameters - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,324 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Integration - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,326 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.IntegrationWandb - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,327 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.JobCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,329 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_events_params.JobListEventsParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,331 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_params.JobListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,332 - INFO - Indexing document: resources.images.ImagesResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,334 - INFO - Indexing document: resources.images.ImagesResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,336 - INFO - Indexing document: resources.images.ImagesResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,338 - INFO - Indexing document: resources.images.ImagesResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,339 - INFO - Indexing document: resources.images.ImagesResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,341 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,343 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,344 - INFO - Indexing document: resources.images.image_create_variation_params.ImageCreateVariationParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,346 - INFO - Indexing document: resources.images.image_edit_params.ImageEditParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,348 - INFO - Indexing document: resources.images.image_generate_params.ImageGenerateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,349 - INFO - Indexing document: resources.models.Model - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,351 - INFO - Indexing document: resources.models.Model.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,354 - INFO - Indexing document: resources.models.Model.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,355 - INFO - Indexing document: resources.models.Model.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,357 - INFO - Indexing document: resources.models.Model.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,359 - INFO - Indexing document: resources.models.Model.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,361 - INFO - Indexing document: resources.models.Model.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,362 - INFO - Indexing document: resources.models.ModelDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,366 - INFO - Indexing document: resources.models.ModelDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,367 - INFO - Indexing document: resources.models.ModelDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,369 - INFO - Indexing document: resources.models.ModelDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,370 - INFO - Indexing document: resources.models.ModelDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,372 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,374 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,375 - INFO - Indexing document: resources.moderations.ModerationCreateResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,378 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,379 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,381 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,383 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,386 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,388 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,389 - INFO - Indexing document: resources.moderations.moderation_create_params.ModerationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,391 - INFO - Indexing document: resources.uploads.AsyncParts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 14:22:24,393 - INFO - Indexing document: resources.uploads.Parts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 14:22:24,394 - INFO - Indexing document: resources.uploads.parts.UploadPart - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,396 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,398 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,400 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,401 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,403 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,404 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,406 - INFO - Indexing document: resources.uploads.parts.part_create_params.PartCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,408 - INFO - Indexing document: resources.uploads.uploads.Path - PurePath subclass that can make system calls.

Path represents a filesystem path but unlike PurePath, also offers
methods to do system calls on path objects. Depending on your system,
instantiating a ...
2024-11-27 14:22:24,409 - INFO - Indexing document: resources.uploads.uploads.Path.absolute - Return an absolute version of this path by prepending the current
working directory. No normalization or symlink resolution is performed.

Use resolve() to get the canonical path to a file....
2024-11-27 14:22:24,410 - INFO - Indexing document: resources.uploads.uploads.Path.anchor - The concatenation of the drive and root, or ''....
2024-11-27 14:22:24,411 - INFO - Indexing document: resources.uploads.uploads.Path.as_posix - Return the string representation of the path with forward (/)
slashes....
2024-11-27 14:22:24,411 - INFO - Indexing document: resources.uploads.uploads.Path.as_uri - Return the path as a 'file' URI....
2024-11-27 14:22:24,412 - INFO - Indexing document: resources.uploads.uploads.Path.chmod - Change the permissions of the path, like os.chmod()....
2024-11-27 14:22:24,413 - INFO - Indexing document: resources.uploads.uploads.Path.cwd - Return a new path pointing to the current working directory....
2024-11-27 14:22:24,413 - INFO - Indexing document: resources.uploads.uploads.Path.drive - The drive prefix (letter or UNC path), if any....
2024-11-27 14:22:24,414 - INFO - Indexing document: resources.uploads.uploads.Path.exists - Whether this path exists.

This method normally follows symlinks; to check whether a symlink exists,
add the argument follow_symlinks=False....
2024-11-27 14:22:24,415 - INFO - Indexing document: resources.uploads.uploads.Path.expanduser - Return a new path with expanded ~ and ~user constructs
(as returned by os.path.expanduser)...
2024-11-27 14:22:24,417 - INFO - Indexing document: resources.uploads.uploads.Path.glob - Iterate over this subtree and yield all existing files (of any
kind, including directories) matching the given relative pattern....
2024-11-27 14:22:24,418 - INFO - Indexing document: resources.uploads.uploads.Path.group - Return the group name of the file gid....
2024-11-27 14:22:24,419 - INFO - Indexing document: resources.uploads.uploads.Path.hardlink_to - Make this path a hard link pointing to the same file as *target*.

Note the order of arguments (self, target) is the reverse of os.link's....
2024-11-27 14:22:24,420 - INFO - Indexing document: resources.uploads.uploads.Path.home - Return a new path pointing to the user's home directory (as
returned by os.path.expanduser('~'))....
2024-11-27 14:22:24,421 - INFO - Indexing document: resources.uploads.uploads.Path.is_absolute - True if the path is absolute (has both a root and, if applicable,
a drive)....
2024-11-27 14:22:24,422 - INFO - Indexing document: resources.uploads.uploads.Path.is_block_device - Whether this path is a block device....
2024-11-27 14:22:24,423 - INFO - Indexing document: resources.uploads.uploads.Path.is_char_device - Whether this path is a character device....
2024-11-27 14:22:24,424 - INFO - Indexing document: resources.uploads.uploads.Path.is_dir - Whether this path is a directory....
2024-11-27 14:22:24,424 - INFO - Indexing document: resources.uploads.uploads.Path.is_fifo - Whether this path is a FIFO....
2024-11-27 14:22:24,425 - INFO - Indexing document: resources.uploads.uploads.Path.is_file - Whether this path is a regular file (also True for symlinks pointing
to regular files)....
2024-11-27 14:22:24,425 - INFO - Indexing document: resources.uploads.uploads.Path.is_junction - Whether this path is a junction....
2024-11-27 14:22:24,426 - INFO - Indexing document: resources.uploads.uploads.Path.is_mount - Check if this path is a mount point...
2024-11-27 14:22:24,426 - INFO - Indexing document: resources.uploads.uploads.Path.is_relative_to - Return True if the path is relative to another path or False.
        ...
2024-11-27 14:22:24,428 - INFO - Indexing document: resources.uploads.uploads.Path.is_reserved - Return True if the path contains one of the special names reserved
by the system, if any....
2024-11-27 14:22:24,428 - INFO - Indexing document: resources.uploads.uploads.Path.is_socket - Whether this path is a socket....
2024-11-27 14:22:24,429 - INFO - Indexing document: resources.uploads.uploads.Path.is_symlink - Whether this path is a symbolic link....
2024-11-27 14:22:24,429 - INFO - Indexing document: resources.uploads.uploads.Path.iterdir - Yield path objects of the directory contents.

The children are yielded in arbitrary order, and the
special entries '.' and '..' are not included....
2024-11-27 14:22:24,430 - INFO - Indexing document: resources.uploads.uploads.Path.joinpath - Combine this path with one or several arguments, and return a
new path representing either a subpath (if all arguments are relative
paths) or a totally different path (if one of the arguments is
ancho...
2024-11-27 14:22:24,431 - INFO - Indexing document: resources.uploads.uploads.Path.lchmod - Like chmod(), except if the path points to a symlink, the symlink's
permissions are changed, rather than its target's....
2024-11-27 14:22:24,432 - INFO - Indexing document: resources.uploads.uploads.Path.lstat - Like stat(), except if the path points to a symlink, the symlink's
status information is returned, rather than its target's....
2024-11-27 14:22:24,433 - INFO - Indexing document: resources.uploads.uploads.Path.match - Return True if this path matches the given pattern....
2024-11-27 14:22:24,434 - INFO - Indexing document: resources.uploads.uploads.Path.mkdir - Create a new directory at this given path....
2024-11-27 14:22:24,434 - INFO - Indexing document: resources.uploads.uploads.Path.name - The final path component, if any....
2024-11-27 14:22:24,435 - INFO - Indexing document: resources.uploads.uploads.Path.open - Open the file pointed by this path and return a file object, as
the built-in open() function does....
2024-11-27 14:22:24,436 - INFO - Indexing document: resources.uploads.uploads.Path.owner - Return the login name of the file owner....
2024-11-27 14:22:24,436 - INFO - Indexing document: resources.uploads.uploads.Path.parent - The logical parent of the path....
2024-11-27 14:22:24,437 - INFO - Indexing document: resources.uploads.uploads.Path.parents - A sequence of this path's logical parents....
2024-11-27 14:22:24,437 - INFO - Indexing document: resources.uploads.uploads.Path.parts - An object providing sequence-like access to the
components in the filesystem path....
2024-11-27 14:22:24,438 - INFO - Indexing document: resources.uploads.uploads.Path.read_bytes - Open the file in bytes mode, read it, and close the file....
2024-11-27 14:22:24,438 - INFO - Indexing document: resources.uploads.uploads.Path.read_text - Open the file in text mode, read it, and close the file....
2024-11-27 14:22:24,439 - INFO - Indexing document: resources.uploads.uploads.Path.readlink - Return the path to which the symbolic link points....
2024-11-27 14:22:24,440 - INFO - Indexing document: resources.uploads.uploads.Path.relative_to - Return the relative path to another path identified by the passed
arguments.  If the operation is not possible (because this is not
related to the other path), raise ValueError.

The *walk_up* paramet...
2024-11-27 14:22:24,441 - INFO - Indexing document: resources.uploads.uploads.Path.rename - Rename this path to the target path.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
directory of the Path object.

Re...
2024-11-27 14:22:24,443 - INFO - Indexing document: resources.uploads.uploads.Path.replace - Rename this path to the target path, overwriting if that path exists.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
...
2024-11-27 14:22:24,444 - INFO - Indexing document: resources.uploads.uploads.Path.resolve - Make the path absolute, resolving all symlinks on the way and also
normalizing it....
2024-11-27 14:22:24,445 - INFO - Indexing document: resources.uploads.uploads.Path.rglob - Recursively yield all existing files (of any kind, including
directories) matching the given relative pattern, anywhere in
this subtree....
2024-11-27 14:22:24,447 - INFO - Indexing document: resources.uploads.uploads.Path.rmdir - Remove this directory.  The directory must be empty....
2024-11-27 14:22:24,448 - INFO - Indexing document: resources.uploads.uploads.Path.root - The root of the path, if any....
2024-11-27 14:22:24,449 - INFO - Indexing document: resources.uploads.uploads.Path.samefile - Return whether other_path is the same or not as this file
(as returned by os.path.samefile())....
2024-11-27 14:22:24,449 - INFO - Indexing document: resources.uploads.uploads.Path.stat - Return the result of the stat() system call on this path, like
os.stat() does....
2024-11-27 14:22:24,450 - INFO - Indexing document: resources.uploads.uploads.Path.stem - The final path component, minus its last suffix....
2024-11-27 14:22:24,451 - INFO - Indexing document: resources.uploads.uploads.Path.suffix - The final component's last suffix, if any.

This includes the leading period. For example: '.txt'...
2024-11-27 14:22:24,451 - INFO - Indexing document: resources.uploads.uploads.Path.suffixes - A list of the final component's suffixes, if any.

These include the leading periods. For example: ['.tar', '.gz']...
2024-11-27 14:22:24,452 - INFO - Indexing document: resources.uploads.uploads.Path.symlink_to - Make this path a symlink pointing to the target path.
Note the order of arguments (link, target) is the reverse of os.symlink....
2024-11-27 14:22:24,453 - INFO - Indexing document: resources.uploads.uploads.Path.touch - Create this file with the given access mode, if it doesn't exist....
2024-11-27 14:22:24,454 - INFO - Indexing document: resources.uploads.uploads.Path.unlink - Remove this file or link.
If the path is a directory, use rmdir() instead....
2024-11-27 14:22:24,455 - INFO - Indexing document: resources.uploads.uploads.Path.walk - Walk the directory tree from this directory, similar to os.walk()....
2024-11-27 14:22:24,456 - INFO - Indexing document: resources.uploads.uploads.Path.with_name - Return a new path with the file name changed....
2024-11-27 14:22:24,456 - INFO - Indexing document: resources.uploads.uploads.Path.with_segments - Construct a new path object from any number of path-like objects.
Subclasses may override this method to customize how new path objects
are created from methods like `iterdir()`....
2024-11-27 14:22:24,457 - INFO - Indexing document: resources.uploads.uploads.Path.with_stem - Return a new path with the stem changed....
2024-11-27 14:22:24,458 - INFO - Indexing document: resources.uploads.uploads.Path.with_suffix - Return a new path with the file suffix changed.  If the path
has no suffix, add given suffix.  If the given suffix is an empty
string, remove the suffix from the path....
2024-11-27 14:22:24,459 - INFO - Indexing document: resources.uploads.uploads.Path.write_bytes - Open the file in bytes mode, write to it, and close the file....
2024-11-27 14:22:24,460 - INFO - Indexing document: resources.uploads.uploads.Path.write_text - Open the file in text mode, write to it, and close the file....
2024-11-27 14:22:24,460 - INFO - Indexing document: resources.uploads.uploads.Upload - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,462 - INFO - Indexing document: resources.uploads.uploads.Upload.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,464 - INFO - Indexing document: resources.uploads.uploads.Upload.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,467 - INFO - Indexing document: resources.uploads.uploads.Upload.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,469 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,470 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,472 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,474 - INFO - Indexing document: resources.uploads.uploads.upload_complete_params.UploadCompleteParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,476 - INFO - Indexing document: resources.uploads.uploads.upload_create_params.UploadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,479 - INFO - Indexing document: types.BatchError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,481 - INFO - Indexing document: types.BatchError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,483 - INFO - Indexing document: types.BatchError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,485 - INFO - Indexing document: types.BatchError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,486 - INFO - Indexing document: types.BatchError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,488 - INFO - Indexing document: types.BatchError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,490 - INFO - Indexing document: types.BatchError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,492 - INFO - Indexing document: types.BatchRequestCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,494 - INFO - Indexing document: types.BatchRequestCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,496 - INFO - Indexing document: types.BatchRequestCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,498 - INFO - Indexing document: types.BatchRequestCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,500 - INFO - Indexing document: types.BatchRequestCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,501 - INFO - Indexing document: types.BatchRequestCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,504 - INFO - Indexing document: types.BatchRequestCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,505 - INFO - Indexing document: types.CompletionChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,508 - INFO - Indexing document: types.CompletionChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,510 - INFO - Indexing document: types.CompletionChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,512 - INFO - Indexing document: types.CompletionChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,514 - INFO - Indexing document: types.CompletionChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,517 - INFO - Indexing document: types.CompletionChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,519 - INFO - Indexing document: types.CompletionChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,521 - INFO - Indexing document: types.CompletionUsage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,523 - INFO - Indexing document: types.CompletionUsage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,525 - INFO - Indexing document: types.CompletionUsage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,527 - INFO - Indexing document: types.CompletionUsage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,529 - INFO - Indexing document: types.CompletionUsage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,530 - INFO - Indexing document: types.CompletionUsage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,532 - INFO - Indexing document: types.CompletionUsage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,534 - INFO - Indexing document: types.Embedding - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,536 - INFO - Indexing document: types.Embedding.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,538 - INFO - Indexing document: types.Embedding.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,540 - INFO - Indexing document: types.Embedding.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,541 - INFO - Indexing document: types.Embedding.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,543 - INFO - Indexing document: types.Embedding.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,545 - INFO - Indexing document: types.Embedding.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,548 - INFO - Indexing document: types.ErrorObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,551 - INFO - Indexing document: types.ErrorObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,553 - INFO - Indexing document: types.ErrorObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,555 - INFO - Indexing document: types.ErrorObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,556 - INFO - Indexing document: types.ErrorObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,558 - INFO - Indexing document: types.ErrorObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,560 - INFO - Indexing document: types.ErrorObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,563 - INFO - Indexing document: types.FileContent - str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer...
2024-11-27 14:22:24,564 - INFO - Indexing document: types.FunctionDefinition - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,566 - INFO - Indexing document: types.FunctionDefinition.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,568 - INFO - Indexing document: types.FunctionDefinition.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,570 - INFO - Indexing document: types.FunctionDefinition.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,571 - INFO - Indexing document: types.FunctionDefinition.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,574 - INFO - Indexing document: types.FunctionDefinition.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,576 - INFO - Indexing document: types.FunctionDefinition.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,578 - INFO - Indexing document: types.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,581 - INFO - Indexing document: types.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,584 - INFO - Indexing document: types.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,586 - INFO - Indexing document: types.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,588 - INFO - Indexing document: types.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,590 - INFO - Indexing document: types.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,591 - INFO - Indexing document: types.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,593 - INFO - Indexing document: types.Moderation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,595 - INFO - Indexing document: types.Moderation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,597 - INFO - Indexing document: types.Moderation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,598 - INFO - Indexing document: types.Moderation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,599 - INFO - Indexing document: types.Moderation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,602 - INFO - Indexing document: types.Moderation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,604 - INFO - Indexing document: types.Moderation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,606 - INFO - Indexing document: types.ModerationImageURLInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,607 - INFO - Indexing document: types.ModerationTextInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,609 - INFO - Indexing document: types.ResponseFormatJSONObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,611 - INFO - Indexing document: types.ResponseFormatJSONObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,614 - INFO - Indexing document: types.ResponseFormatJSONObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,615 - INFO - Indexing document: types.ResponseFormatJSONObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,617 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,618 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,621 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,622 - INFO - Indexing document: types.ResponseFormatJSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,624 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,626 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,627 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,629 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,630 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,632 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,634 - INFO - Indexing document: types.ResponseFormatText - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,636 - INFO - Indexing document: types.ResponseFormatText.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,637 - INFO - Indexing document: types.ResponseFormatText.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,639 - INFO - Indexing document: types.ResponseFormatText.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,640 - INFO - Indexing document: types.ResponseFormatText.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,642 - INFO - Indexing document: types.ResponseFormatText.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,644 - INFO - Indexing document: types.ResponseFormatText.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,646 - INFO - Indexing document: types.audio.TranscriptionSegment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,648 - INFO - Indexing document: types.audio.TranscriptionSegment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,649 - INFO - Indexing document: types.audio.TranscriptionSegment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,651 - INFO - Indexing document: types.audio.TranscriptionSegment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,653 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,654 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,656 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,658 - INFO - Indexing document: types.audio.TranscriptionWord - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,659 - INFO - Indexing document: types.audio.TranscriptionWord.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,661 - INFO - Indexing document: types.audio.TranscriptionWord.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,663 - INFO - Indexing document: types.audio.TranscriptionWord.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,665 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,667 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,669 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,670 - INFO - Indexing document: types.batch.Errors - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,672 - INFO - Indexing document: types.batch.Errors.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,674 - INFO - Indexing document: types.batch.Errors.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,676 - INFO - Indexing document: types.batch.Errors.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,677 - INFO - Indexing document: types.batch.Errors.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,679 - INFO - Indexing document: types.batch.Errors.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,681 - INFO - Indexing document: types.batch.Errors.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,683 - INFO - Indexing document: types.beta.AssistantToolChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,685 - INFO - Indexing document: types.beta.AssistantToolChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,686 - INFO - Indexing document: types.beta.AssistantToolChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,688 - INFO - Indexing document: types.beta.AssistantToolChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,689 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,691 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,692 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,694 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,697 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,699 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,701 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,702 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,704 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,706 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,708 - INFO - Indexing document: types.beta.AssistantToolChoiceFunctionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,709 - INFO - Indexing document: types.beta.AssistantToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,710 - INFO - Indexing document: types.beta.AutoFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,712 - INFO - Indexing document: types.beta.CodeInterpreterTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,714 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,716 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,717 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,719 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,720 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,722 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,724 - INFO - Indexing document: types.beta.FileSearchTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,726 - INFO - Indexing document: types.beta.FileSearchTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,728 - INFO - Indexing document: types.beta.FileSearchTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,730 - INFO - Indexing document: types.beta.FileSearchTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,731 - INFO - Indexing document: types.beta.FileSearchTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,733 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,736 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,737 - INFO - Indexing document: types.beta.FunctionTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,739 - INFO - Indexing document: types.beta.FunctionTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,741 - INFO - Indexing document: types.beta.FunctionTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,743 - INFO - Indexing document: types.beta.FunctionTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,745 - INFO - Indexing document: types.beta.FunctionTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,746 - INFO - Indexing document: types.beta.FunctionTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,748 - INFO - Indexing document: types.beta.FunctionTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,750 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,752 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,753 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,755 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,756 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,759 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,761 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,764 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,766 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,768 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,770 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,771 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,773 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,776 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,777 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,779 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,781 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,782 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,784 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,785 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,787 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,790 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:24,791 - INFO - Indexing document: types.beta.assistant.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,794 - INFO - Indexing document: types.beta.assistant.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,795 - INFO - Indexing document: types.beta.assistant.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,797 - INFO - Indexing document: types.beta.assistant.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,799 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,801 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,802 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,804 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,806 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,808 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,810 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,811 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,813 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,814 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,816 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,818 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,819 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,822 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,824 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,825 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,827 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,830 - INFO - Indexing document: types.beta.assistant_stream_event.Annotated - Add context-specific metadata to a type.

Example: Annotated[int, runtime_check.Unsigned] indicates to the
hypothetical runtime_check module that this type is an unsigned int.
Every other consumer of ...
2024-11-27 14:22:24,832 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,835 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,836 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,838 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,839 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,841 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,843 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,845 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,847 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,848 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,850 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,852 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,854 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,857 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,858 - INFO - Indexing document: types.beta.assistant_stream_event.PropertyInfo - Metadata class to be used in Annotated types to provide information about a given type.

For example:

class MyParams(TypedDict):
    account_holder_name: Annotated[str, PropertyInfo(alias='accountHol...
2024-11-27 14:22:24,860 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,862 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,864 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,865 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,867 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,869 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,871 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,872 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,875 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,876 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,878 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,879 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,881 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,884 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,886 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,888 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,889 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,891 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,893 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,895 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,896 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,898 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,901 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,902 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,904 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,905 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,907 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,909 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,910 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,912 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,915 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,917 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,920 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,921 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,924 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,925 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,927 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,929 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,930 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,932 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,934 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,935 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,937 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,939 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,940 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,942 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,944 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,946 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,948 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,950 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,952 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,954 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,956 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,957 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,959 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,961 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,963 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,965 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,967 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,968 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,970 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,971 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,973 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,975 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,978 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,981 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,985 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,986 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:24,988 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:24,990 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:24,991 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:24,994 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:24,995 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:24,997 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:24,998 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,000 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,002 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,003 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,005 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,007 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,010 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,011 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,013 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,015 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,017 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,020 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,021 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,023 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,025 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,026 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,028 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,030 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,032 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,034 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,035 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,037 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,039 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,042 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,044 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,047 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,048 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,050 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,052 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,054 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,057 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,059 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,061 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,063 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,064 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,066 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,067 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,069 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,071 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,073 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,075 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,077 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,079 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,081 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,083 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,084 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,087 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,088 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,090 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,091 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,093 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,095 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,096 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,098 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,100 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,103 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,104 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,106 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,108 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,110 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,112 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,114 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,116 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,117 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,119 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,121 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,122 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,125 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,126 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,128 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,129 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,131 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,133 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,135 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,138 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,140 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,142 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,144 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,145 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,148 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,150 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,152 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,153 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,155 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,156 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,158 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,160 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,162 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,164 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,166 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,168 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,169 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,172 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,175 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,177 - INFO - Indexing document: types.beta.file_search_tool.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,180 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,182 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,183 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,185 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,186 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,188 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,189 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,192 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,193 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,195 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,197 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,199 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,201 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,202 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:25,204 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearchRankingOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:25,206 - INFO - Indexing document: types.beta.function_tool_param.FunctionDefinition - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:25,207 - INFO - Indexing document: types.beta.thread.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,209 - INFO - Indexing document: types.beta.thread.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,211 - INFO - Indexing document: types.beta.thread.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,212 - INFO - Indexing document: types.beta.thread.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,214 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,215 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,217 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,219 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,221 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,223 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,225 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,226 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,229 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,231 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,233 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,236 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,238 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,240 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,242 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,244 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,246 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,248 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,250 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,252 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,254 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,255 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,258 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,261 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,263 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,267 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,268 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,271 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,273 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,276 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,278 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,280 - INFO - Indexing document: types.beta.threads.FilePathAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,283 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,285 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,286 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,288 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,291 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,293 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,296 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,298 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,302 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,304 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,306 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,308 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,311 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,313 - INFO - Indexing document: types.beta.threads.ImageFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,316 - INFO - Indexing document: types.beta.threads.ImageFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,317 - INFO - Indexing document: types.beta.threads.ImageFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,319 - INFO - Indexing document: types.beta.threads.ImageFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,321 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,323 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,326 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,328 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,332 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,334 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,335 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,337 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,339 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,340 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,342 - INFO - Indexing document: types.beta.threads.ImageFileContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:25,344 - INFO - Indexing document: types.beta.threads.ImageFileDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,346 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,348 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,350 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,352 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,354 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,357 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,359 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,363 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,365 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,366 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,368 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,370 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,372 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,374 - INFO - Indexing document: types.beta.threads.ImageFileParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:25,375 - INFO - Indexing document: types.beta.threads.ImageURL - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,377 - INFO - Indexing document: types.beta.threads.ImageURL.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,379 - INFO - Indexing document: types.beta.threads.ImageURL.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,381 - INFO - Indexing document: types.beta.threads.ImageURL.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,382 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,385 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,387 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,389 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,392 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,395 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,397 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,398 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,400 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,402 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,403 - INFO - Indexing document: types.beta.threads.ImageURLContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:25,405 - INFO - Indexing document: types.beta.threads.ImageURLDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,407 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,409 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,410 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,412 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,414 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,417 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,419 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,421 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,424 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,426 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,428 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,430 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,432 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,434 - INFO - Indexing document: types.beta.threads.ImageURLParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:25,435 - INFO - Indexing document: types.beta.threads.MessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,437 - INFO - Indexing document: types.beta.threads.MessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,440 - INFO - Indexing document: types.beta.threads.MessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,442 - INFO - Indexing document: types.beta.threads.MessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,443 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,446 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,449 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,451 - INFO - Indexing document: types.beta.threads.RefusalContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,453 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,455 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,457 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,458 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,460 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,462 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,463 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,465 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,468 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,471 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,472 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,474 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,475 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,477 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,480 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,481 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,483 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,485 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,486 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,489 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,490 - INFO - Indexing document: types.beta.threads.Text - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,492 - INFO - Indexing document: types.beta.threads.Text.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,494 - INFO - Indexing document: types.beta.threads.Text.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,495 - INFO - Indexing document: types.beta.threads.Text.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,497 - INFO - Indexing document: types.beta.threads.Text.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,498 - INFO - Indexing document: types.beta.threads.Text.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,500 - INFO - Indexing document: types.beta.threads.Text.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,501 - INFO - Indexing document: types.beta.threads.TextContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,503 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,505 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,506 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,508 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,510 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,512 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,514 - INFO - Indexing document: types.beta.threads.TextContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:25,515 - INFO - Indexing document: types.beta.threads.TextDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,518 - INFO - Indexing document: types.beta.threads.TextDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,520 - INFO - Indexing document: types.beta.threads.TextDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,521 - INFO - Indexing document: types.beta.threads.TextDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,523 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,525 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,526 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,528 - INFO - Indexing document: types.beta.threads.TextDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,530 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,532 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,533 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,535 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,537 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,540 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,542 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,545 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,546 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,548 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,550 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,552 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,553 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,555 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,557 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,559 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,561 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,562 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,564 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,566 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,567 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,569 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,572 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,573 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,575 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,578 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,580 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,582 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,584 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,585 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,587 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,588 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,590 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,592 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,594 - INFO - Indexing document: types.beta.threads.message.Attachment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,597 - INFO - Indexing document: types.beta.threads.message.Attachment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,598 - INFO - Indexing document: types.beta.threads.message.Attachment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,600 - INFO - Indexing document: types.beta.threads.message.Attachment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,602 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,604 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,606 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,608 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,610 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,612 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,614 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,615 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,617 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,619 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,620 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,622 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,624 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,626 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,627 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,629 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,631 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,632 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,635 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,638 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,640 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,641 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,643 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,645 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,646 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,648 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,650 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,652 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,653 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,655 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,657 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,658 - INFO - Indexing document: types.beta.threads.run.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,660 - INFO - Indexing document: types.beta.threads.run.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,662 - INFO - Indexing document: types.beta.threads.run.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,665 - INFO - Indexing document: types.beta.threads.run.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,666 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,668 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,670 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,672 - INFO - Indexing document: types.beta.threads.run.RequiredAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,674 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,676 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,678 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,680 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,681 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,683 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,685 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,687 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,688 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,690 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,691 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,693 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,696 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,698 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,700 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,703 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,705 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,706 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,708 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,710 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,711 - INFO - Indexing document: types.beta.threads.run.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,713 - INFO - Indexing document: types.beta.threads.run.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,715 - INFO - Indexing document: types.beta.threads.run.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,716 - INFO - Indexing document: types.beta.threads.run.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,718 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,720 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,722 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,723 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,725 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,727 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,729 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,730 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,733 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,735 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,737 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,739 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,741 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,743 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,744 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,746 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,748 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,749 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,751 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,752 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,754 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,755 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,757 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,759 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,762 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,764 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,766 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,768 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,770 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,771 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,773 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,775 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,777 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,778 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,780 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,781 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,783 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,785 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,786 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,788 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,790 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,792 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,793 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,795 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,797 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,799 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,801 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,803 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,805 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,806 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,808 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,810 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,811 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,813 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,815 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,817 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,818 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,820 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,823 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,825 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,827 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,829 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,831 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,832 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,834 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,836 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,838 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,840 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,841 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,843 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,844 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,846 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,847 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,849 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,851 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,853 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,856 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,857 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,859 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,861 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,864 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,866 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,867 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,869 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,870 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,872 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,874 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,876 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,878 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,879 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,881 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,882 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,885 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,886 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,888 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,891 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,893 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,895 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,896 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,898 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,900 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,901 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,903 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,905 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,907 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,908 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,910 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,912 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,913 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,916 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,918 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,920 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,921 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,924 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,926 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,928 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,930 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,931 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,933 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,935 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,936 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,938 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,940 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,942 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,943 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,945 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,947 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,950 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,952 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,954 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,956 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,958 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,960 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,961 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,963 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,965 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,966 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,968 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,970 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,971 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,972 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,974 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,976 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,978 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,981 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,983 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,986 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:25,987 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:25,989 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:25,991 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:25,993 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:25,995 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:25,997 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:25,998 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,001 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,002 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,006 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,008 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,011 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,012 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,014 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,016 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,018 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,020 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,022 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,024 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,026 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,027 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,029 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,030 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,032 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,034 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,036 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,037 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,040 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,042 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,044 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,046 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,047 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,050 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,051 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,053 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,054 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,056 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,058 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,060 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,062 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,063 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,065 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,067 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,068 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,070 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,072 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,074 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,076 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,078 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,079 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,081 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,083 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,084 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,087 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,088 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,090 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,091 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,093 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,095 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,097 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,099 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,101 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,103 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,106 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,107 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,109 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,111 - INFO - Indexing document: types.beta.vector_store.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,113 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,115 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,116 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,118 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,119 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,121 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,123 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,125 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,127 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,128 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,130 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,132 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,134 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,136 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,138 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,140 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,142 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,144 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,147 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,148 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,150 - INFO - Indexing document: types.chat.ChatCompletionAssistantMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,152 - INFO - Indexing document: types.chat.ChatCompletionAudio - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,153 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,155 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,157 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,157 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,159 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,161 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,162 - INFO - Indexing document: types.chat.ChatCompletionContentPartImageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,164 - INFO - Indexing document: types.chat.ChatCompletionContentPartInputAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,166 - INFO - Indexing document: types.chat.ChatCompletionContentPartRefusalParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,168 - INFO - Indexing document: types.chat.ChatCompletionContentPartTextParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,170 - INFO - Indexing document: types.chat.ChatCompletionFunctionMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,172 - INFO - Indexing document: types.chat.ChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,175 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,176 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,178 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,179 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,181 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,183 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,184 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,186 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,188 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,190 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,191 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,193 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,194 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,197 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCallParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,198 - INFO - Indexing document: types.chat.ChatCompletionNamedToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,200 - INFO - Indexing document: types.chat.ChatCompletionSystemMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,201 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,203 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,205 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,207 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,209 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,210 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,212 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,214 - INFO - Indexing document: types.chat.ChatCompletionToolMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,215 - INFO - Indexing document: types.chat.ChatCompletionUserMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,217 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,219 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,221 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,222 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,223 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,225 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,228 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,230 - INFO - Indexing document: types.chat.ParsedChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,232 - INFO - Indexing document: types.chat.ParsedChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,234 - INFO - Indexing document: types.chat.ParsedChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,236 - INFO - Indexing document: types.chat.ParsedChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,238 - INFO - Indexing document: types.chat.ParsedChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,240 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,242 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,244 - INFO - Indexing document: types.chat.ParsedFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,246 - INFO - Indexing document: types.chat.ParsedFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,247 - INFO - Indexing document: types.chat.ParsedFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,249 - INFO - Indexing document: types.chat.ParsedFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,250 - INFO - Indexing document: types.chat.ParsedFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,252 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,253 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,255 - INFO - Indexing document: types.chat.ParsedFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,257 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,259 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,261 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,263 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,265 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,269 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,271 - INFO - Indexing document: types.chat.chat_completion.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,274 - INFO - Indexing document: types.chat.chat_completion.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,275 - INFO - Indexing document: types.chat.chat_completion.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,277 - INFO - Indexing document: types.chat.chat_completion.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,278 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,280 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,282 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,284 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,286 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,287 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,289 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,291 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,294 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,296 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,298 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.Audio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,299 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.FunctionCall - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,302 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,304 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,306 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,307 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,309 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,310 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,312 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,314 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,316 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,318 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,319 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,321 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,323 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,325 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,327 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,329 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,331 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,333 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,334 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,336 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,338 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,339 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,341 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,343 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,345 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,346 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,348 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,350 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,352 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,355 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,357 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,358 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,360 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,362 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,364 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,365 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,367 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,369 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,371 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,372 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,374 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,376 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,378 - INFO - Indexing document: types.chat.chat_completion_content_part_image_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,379 - INFO - Indexing document: types.chat.chat_completion_content_part_input_audio_param.InputAudio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,381 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,383 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,385 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,387 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,389 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,391 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,393 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,395 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,397 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,399 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,400 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,402 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,403 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,405 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,407 - INFO - Indexing document: types.chat.chat_completion_message_tool_call_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,408 - INFO - Indexing document: types.chat.chat_completion_named_tool_choice_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,410 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,412 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,413 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,416 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,418 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,420 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,423 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,424 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,427 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,428 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,430 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,431 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,433 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,435 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,436 - INFO - Indexing document: types.completion_choice.Logprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,438 - INFO - Indexing document: types.completion_choice.Logprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,440 - INFO - Indexing document: types.completion_choice.Logprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,442 - INFO - Indexing document: types.completion_choice.Logprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,443 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,445 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,447 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,449 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,451 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,452 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,454 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,456 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,458 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,459 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,461 - INFO - Indexing document: types.completion_usage.PromptTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,463 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,466 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,468 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,469 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,471 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,473 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,475 - INFO - Indexing document: types.create_embedding_response.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,477 - INFO - Indexing document: types.create_embedding_response.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,479 - INFO - Indexing document: types.create_embedding_response.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,482 - INFO - Indexing document: types.create_embedding_response.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,483 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,485 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,486 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,488 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,490 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,492 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,493 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,495 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,497 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,498 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,500 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,502 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,504 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,506 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,507 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,509 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,512 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,513 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,516 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,518 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,519 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,521 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,522 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,524 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,526 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,528 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,529 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,531 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,532 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,534 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,536 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,537 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,540 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,543 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,545 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,546 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,548 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,551 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,552 - INFO - Indexing document: types.moderation.Categories - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,554 - INFO - Indexing document: types.moderation.Categories.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,556 - INFO - Indexing document: types.moderation.Categories.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,558 - INFO - Indexing document: types.moderation.Categories.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,559 - INFO - Indexing document: types.moderation.Categories.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,563 - INFO - Indexing document: types.moderation.Categories.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,567 - INFO - Indexing document: types.moderation.Categories.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,569 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,572 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,573 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,576 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,578 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,580 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,582 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,583 - INFO - Indexing document: types.moderation.CategoryScores - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,585 - INFO - Indexing document: types.moderation.CategoryScores.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,587 - INFO - Indexing document: types.moderation.CategoryScores.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,589 - INFO - Indexing document: types.moderation.CategoryScores.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,590 - INFO - Indexing document: types.moderation.CategoryScores.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,592 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,594 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,595 - INFO - Indexing document: types.moderation.FieldInfo - Usage docs: https://docs.pydantic.dev/2.10/concepts/fields

Create a field for objects that can be configured.

Used to provide extra information about a field, either for the model schema or complex ...
2024-11-27 14:22:26,598 - INFO - Indexing document: types.moderation_image_url_input_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:26,599 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:22:26,602 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:22:26,604 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:22:26,606 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:22:26,608 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:22:26,610 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:22:26,613 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:22:26,614 - INFO - Indexing document: types.shared_params.response_format_json_schema.JSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:22:53,219 - INFO - Indexed data saved successfully.
2024-11-27 14:22:53,321 - INFO - Configuration loaded successfully.
2024-11-27 14:22:58,583 - INFO - Starting search for query: example search query
2024-11-27 14:23:02,204 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.004881200002273545>
2024-11-27 14:23:02,206 - INFO - Final combined search results: []
2024-11-27 14:23:02,208 - INFO - 
Search results for query 'example search query':
2024-11-27 14:24:11,400 - INFO - Configuration loaded successfully.
2024-11-27 14:24:11,407 - INFO - Using device: cpu
2024-11-27 14:24:11,409 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 14:24:11,418 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 14:24:11,522 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 14:24:11,563 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 14:24:11,599 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 14:24:11,636 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 14:24:11,674 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 14:24:11,714 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 14:24:11,754 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 14:24:12,062 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 14:24:12,148 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 14:24:12,193 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 14:24:18,074 - INFO - Indexed data loaded successfully.
2024-11-27 14:24:20,012 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 14:24:20,013 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 14:24:20,774 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_17.json
2024-11-27 14:24:20,793 - INFO - Indexing document: APIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:20,796 - INFO - Indexing document: APIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:24:20,798 - INFO - Indexing document: APIResponse.elapsed - The time taken for the complete request/response cycle to complete....
2024-11-27 14:24:20,799 - INFO - Indexing document: APIResponse.http_request - Returns the httpx Request instance associated with the current response....
2024-11-27 14:24:20,800 - INFO - Indexing document: APIResponse.is_closed - Whether or not the response body has been closed.

If this is False then there is response data that has not been read yet.
You must either fully consume the response body or call `.close()`
before di...
2024-11-27 14:24:20,803 - INFO - Indexing document: APIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 14:24:20,804 - INFO - Indexing document: APIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 14:24:20,804 - INFO - Indexing document: APIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 14:24:20,805 - INFO - Indexing document: APIResponse.json - Read and decode the JSON response content....
2024-11-27 14:24:20,806 - INFO - Indexing document: APIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 14:24:20,807 - INFO - Indexing document: APIResponse.read - Read and return the binary response content....
2024-11-27 14:24:20,808 - INFO - Indexing document: APIResponse.text - Read and decode the response content into a string....
2024-11-27 14:24:20,808 - INFO - Indexing document: APIResponse.url - Returns the URL for which the request was made....
2024-11-27 14:24:20,809 - INFO - Indexing document: AssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 14:24:20,810 - INFO - Indexing document: AssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 14:24:20,810 - INFO - Indexing document: AssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 14:24:20,811 - INFO - Indexing document: AssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 14:24:20,812 - INFO - Indexing document: AssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 14:24:20,813 - INFO - Indexing document: AssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 14:24:20,813 - INFO - Indexing document: AssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 14:24:20,814 - INFO - Indexing document: AssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 14:24:20,815 - INFO - Indexing document: AssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 14:24:20,815 - INFO - Indexing document: AssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 14:24:20,817 - INFO - Indexing document: AssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 14:24:20,817 - INFO - Indexing document: AssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 14:24:20,818 - INFO - Indexing document: AssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 14:24:20,820 - INFO - Indexing document: AssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 14:24:20,821 - INFO - Indexing document: AssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 14:24:20,822 - INFO - Indexing document: AssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 14:24:20,824 - INFO - Indexing document: AssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 14:24:20,825 - INFO - Indexing document: AssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 14:24:20,826 - INFO - Indexing document: AssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 14:24:20,827 - INFO - Indexing document: AssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:24:20,828 - INFO - Indexing document: AssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:24:20,829 - INFO - Indexing document: AssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 14:24:20,829 - INFO - Indexing document: AsyncAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:20,831 - INFO - Indexing document: AsyncAPIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:24:20,832 - INFO - Indexing document: AsyncAPIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 14:24:20,833 - INFO - Indexing document: AsyncAPIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 14:24:20,833 - INFO - Indexing document: AsyncAPIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 14:24:20,834 - INFO - Indexing document: AsyncAPIResponse.json - Read and decode the JSON response content....
2024-11-27 14:24:20,835 - INFO - Indexing document: AsyncAPIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 14:24:20,836 - INFO - Indexing document: AsyncAPIResponse.read - Read and return the binary response content....
2024-11-27 14:24:20,837 - INFO - Indexing document: AsyncAPIResponse.text - Read and decode the response content into a string....
2024-11-27 14:24:20,837 - INFO - Indexing document: AsyncAssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 14:24:20,838 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 14:24:20,839 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 14:24:20,839 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 14:24:20,840 - INFO - Indexing document: AsyncAssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 14:24:20,841 - INFO - Indexing document: AsyncAssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 14:24:20,841 - INFO - Indexing document: AsyncAssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 14:24:20,842 - INFO - Indexing document: AsyncAssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 14:24:20,843 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 14:24:20,843 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 14:24:20,845 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 14:24:20,846 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 14:24:20,846 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 14:24:20,848 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 14:24:20,848 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 14:24:20,849 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 14:24:20,850 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 14:24:20,851 - INFO - Indexing document: AsyncAssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 14:24:20,852 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 14:24:20,853 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:24:20,854 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:24:20,856 - INFO - Indexing document: AsyncAssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 14:24:20,856 - INFO - Indexing document: AsyncAzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:20,858 - INFO - Indexing document: AsyncAzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 14:24:20,859 - INFO - Indexing document: AsyncClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:20,861 - INFO - Indexing document: AsyncStream - Provides the core interface to iterate over an asynchronous stream response....
2024-11-27 14:24:20,862 - INFO - Indexing document: AsyncStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:24:20,863 - INFO - Indexing document: AzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:20,865 - INFO - Indexing document: AzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 14:24:20,866 - INFO - Indexing document: BaseModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:20,867 - INFO - Indexing document: BaseModel.model_copy - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#model_copy

Returns a copy of the model.

Args:
    update: Values to change/add in the new model. Note: the data is not validated
  ...
2024-11-27 14:24:20,869 - INFO - Indexing document: BaseModel.model_dump - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump

Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

Args:
...
2024-11-27 14:24:20,872 - INFO - Indexing document: BaseModel.model_dump_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump_json

Generates a JSON representation of the model using Pydantic's `to_json` method.

Args:
    indent: Indentation ...
2024-11-27 14:24:20,873 - INFO - Indexing document: BaseModel.model_extra - Get extra fields set during validation.

Returns:
    A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`....
2024-11-27 14:24:20,874 - INFO - Indexing document: BaseModel.model_fields_set - Returns the set of fields that have been explicitly set on this model instance.

Returns:
    A set of strings representing the fields that have been set,
        i.e. that were not filled from defaul...
2024-11-27 14:24:20,876 - INFO - Indexing document: BaseModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:20,877 - INFO - Indexing document: BaseModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:20,878 - INFO - Indexing document: BaseModel.model_post_init - Override this method to perform additional initialization after `__init__` and `model_construct`.
This is useful if you want to do some validation that requires the entire model to be initialized....
2024-11-27 14:24:20,879 - INFO - Indexing document: BaseModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:20,881 - INFO - Indexing document: BaseModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:20,882 - INFO - Indexing document: BaseModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:20,884 - INFO - Indexing document: BaseModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:20,888 - INFO - Indexing document: BaseModel.to_dict - Recursively generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

By default, fields that were not set by the API will not be included,
and keys...
2024-11-27 14:24:20,891 - INFO - Indexing document: BaseModel.to_json - Generates a JSON string representing this model as it would be received from or sent to the API (but with indentation).

By default, fields that were not set by the API will not be included,
and keys ...
2024-11-27 14:24:20,893 - INFO - Indexing document: Client - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:20,894 - INFO - Indexing document: DefaultAsyncHttpxClient - An asynchronous HTTP client, with connection pooling, HTTP/2, redirects,
cookie persistence, etc.

It can be shared between tasks.

Usage:

```python
>>> async with httpx.AsyncClient() as client:
>>> ...
2024-11-27 14:24:20,898 - INFO - Indexing document: DefaultAsyncHttpxClient.aclose - Close transport and proxies....
2024-11-27 14:24:20,898 - INFO - Indexing document: DefaultAsyncHttpxClient.auth - Authentication class used when none is passed at the request-level.

See also [Authentication][0].

[0]: /quickstart/#authentication...
2024-11-27 14:24:20,900 - INFO - Indexing document: DefaultAsyncHttpxClient.base_url - Base URL to use when sending requests with relative URLs....
2024-11-27 14:24:20,901 - INFO - Indexing document: DefaultAsyncHttpxClient.build_request - Build and return a request instance.

* The `params`, `headers` and `cookies` arguments
are merged with any values set on the client.
* The `url` argument is merged with any `base_url` set on the clie...
2024-11-27 14:24:20,902 - INFO - Indexing document: DefaultAsyncHttpxClient.cookies - Cookie values to include when sending requests....
2024-11-27 14:24:20,903 - INFO - Indexing document: DefaultAsyncHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,904 - INFO - Indexing document: DefaultAsyncHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,904 - INFO - Indexing document: DefaultAsyncHttpxClient.headers - HTTP headers to include when sending requests....
2024-11-27 14:24:20,905 - INFO - Indexing document: DefaultAsyncHttpxClient.is_closed - Check if the client being closed...
2024-11-27 14:24:20,905 - INFO - Indexing document: DefaultAsyncHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,906 - INFO - Indexing document: DefaultAsyncHttpxClient.params - Query parameters to include in the URL when sending requests....
2024-11-27 14:24:20,907 - INFO - Indexing document: DefaultAsyncHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,908 - INFO - Indexing document: DefaultAsyncHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,909 - INFO - Indexing document: DefaultAsyncHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,910 - INFO - Indexing document: DefaultAsyncHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = await client.send(request, ...)
```

See `AsyncClient.build_request()`, `AsyncClient.send()`
and [Me...
2024-11-27 14:24:20,912 - INFO - Indexing document: DefaultAsyncHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `AsyncClient.build_request()`
so that any client-level configuration is merged into the request,
but pa...
2024-11-27 14:24:20,914 - INFO - Indexing document: DefaultAsyncHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 14:24:20,916 - INFO - Indexing document: DefaultHttpxClient - An HTTP client, with connection pooling, HTTP/2, redirects, cookie persistence, etc.

It can be shared between threads.

Usage:

```python
>>> client = httpx.Client()
>>> response = client.get('https:...
2024-11-27 14:24:20,919 - INFO - Indexing document: DefaultHttpxClient.close - Close transport and proxies....
2024-11-27 14:24:20,920 - INFO - Indexing document: DefaultHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,922 - INFO - Indexing document: DefaultHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,922 - INFO - Indexing document: DefaultHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,924 - INFO - Indexing document: DefaultHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,925 - INFO - Indexing document: DefaultHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,926 - INFO - Indexing document: DefaultHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:24:20,927 - INFO - Indexing document: DefaultHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = client.send(request, ...)
```

See `Client.build_request()`, `Client.send()` and
[Merging of configu...
2024-11-27 14:24:20,930 - INFO - Indexing document: DefaultHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `Client.build_request()`
so that any client-level configuration is merged into the request,
but passing...
2024-11-27 14:24:20,932 - INFO - Indexing document: DefaultHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 14:24:20,937 - INFO - Indexing document: NotGiven - A sentinel singleton class used to distinguish omitted keyword arguments
from those passed in with the value None (which may have different behavior).

For example:

```py
def get(timeout: Union[int, ...
2024-11-27 14:24:20,940 - INFO - Indexing document: RequestOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:20,941 - INFO - Indexing document: Stream - Provides the core interface to iterate over a synchronous stream response....
2024-11-27 14:24:20,942 - INFO - Indexing document: Stream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:24:20,943 - INFO - Indexing document: Timeout - Timeout configuration.

**Usage**:

Timeout(None)               # No timeouts.
Timeout(5.0)                # 5s timeout on all operations.
Timeout(None, connect=5.0)  # 5s timeout on connect, no other...
2024-11-27 14:24:20,945 - INFO - Indexing document: Transport.handle_request - Send a single HTTP request and return a response.

Developers shouldn't typically ever need to call into this API directly,
since the Client class provides all the higher level user-facing API
nicetie...
2024-11-27 14:24:20,946 - INFO - Indexing document: lib.azure.Any - Special type indicating an unconstrained type.

- Any is compatible with every type.
- Any assumed to have all methods.
- All values assumed to be instances of Any.

Note that all the above statements...
2024-11-27 14:24:20,949 - INFO - Indexing document: lib.azure.BaseAzureClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:20,952 - INFO - Indexing document: lib.azure.BaseClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:20,954 - INFO - Indexing document: lib.azure.FinalRequestOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:20,956 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:20,958 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:20,959 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:20,961 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:20,962 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:20,965 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:20,966 - INFO - Indexing document: lib.azure.Omit - In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 14:24:20,968 - INFO - Indexing document: lib.azure.TypeVar - Type variable.

The preferred way to construct a type variable is via the dedicated
syntax for generic functions, classes, and type aliases::

    class Sequence[T]:  # T is a TypeVar
        ...

Thi...
2024-11-27 14:24:20,970 - INFO - Indexing document: lib.azure.cast - Cast a value to a type.

This returns the value unchanged.  To the type checker this
signals that the return value has the designated type, but at
runtime we intentionally don't check anything (we wan...
2024-11-27 14:24:20,971 - INFO - Indexing document: lib.azure.overload - Decorator for overloaded functions/methods.

In a stub file, place two or more stub definitions for the same
function in a row, each decorated with @overload.

For example::

    @overload
    def utf...
2024-11-27 14:24:20,973 - INFO - Indexing document: lib.azure.override - Indicate that a method is intended to override a method in a base class.

Usage::

    class Base:
        def method(self) -> None: ...
            pass

    class Child(Base):
        @override
    ...
2024-11-27 14:24:20,977 - INFO - Indexing document: lib.streaming.AssistantStreamManager - Wrapper over AssistantStreamEventHandler that is returned by `.stream()`
so that a context manager can be used.

```py
with client.threads.create_and_run_stream(...) as stream:
    for event in stream...
2024-11-27 14:24:20,979 - INFO - Indexing document: lib.streaming.AsyncAssistantStreamManager - Wrapper over AsyncAssistantStreamEventHandler that is returned by `.stream()`
so that an async context manager can be used without `await`ing the
original client call.

```py
async with client.threads...
2024-11-27 14:24:20,981 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 14:24:20,982 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:24:20,983 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 14:24:20,985 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 14:24:20,985 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStreamManager - Context manager over a `AsyncChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```p...
2024-11-27 14:24:20,987 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 14:24:20,989 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:24:20,990 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 14:24:20,991 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 14:24:20,992 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStreamManager - Context manager over a `ChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```py
wit...
2024-11-27 14:24:20,994 - INFO - Indexing document: lib.streaming.chat.ChunkEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:20,995 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:20,997 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:20,999 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,000 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,001 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,003 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,005 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent - This event is yielded for every chunk with `choice.delta.content` data....
2024-11-27 14:24:21,005 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,007 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,009 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,010 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,012 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,014 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,015 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,018 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,019 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,021 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,022 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,023 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,026 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,027 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,029 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,031 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,033 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,034 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,036 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,038 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,040 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,042 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,044 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,046 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,049 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,051 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,053 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,055 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,057 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,059 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,061 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,063 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,064 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,067 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,068 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,071 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,074 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,075 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,078 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,080 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,082 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,084 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,086 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,088 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,089 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,091 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,093 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,094 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,096 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,098 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,100 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,102 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,103 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,106 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,108 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,109 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,112 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,113 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,115 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,116 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,118 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,120 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,122 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,125 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,128 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,129 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,131 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,132 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,135 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,137 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,139 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,141 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,143 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,144 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,146 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,148 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,150 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,152 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,153 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,155 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,157 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,158 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,160 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,162 - INFO - Indexing document: pagination.AsyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:24:21,163 - INFO - Indexing document: pagination.AsyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,165 - INFO - Indexing document: pagination.AsyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,167 - INFO - Indexing document: pagination.AsyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:24:21,169 - INFO - Indexing document: pagination.AsyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,170 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,172 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,174 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,175 - INFO - Indexing document: pagination.AsyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 14:24:21,176 - INFO - Indexing document: pagination.AsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,177 - INFO - Indexing document: pagination.AsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,179 - INFO - Indexing document: pagination.AsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:24:21,180 - INFO - Indexing document: pagination.AsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,181 - INFO - Indexing document: pagination.AsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,183 - INFO - Indexing document: pagination.AsyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,185 - INFO - Indexing document: pagination.AsyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,186 - INFO - Indexing document: pagination.AsyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 14:24:21,187 - INFO - Indexing document: pagination.BaseAsyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:24:21,189 - INFO - Indexing document: pagination.BaseAsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,190 - INFO - Indexing document: pagination.BaseAsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:24:21,191 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,193 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,194 - INFO - Indexing document: pagination.BasePage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:24:21,196 - INFO - Indexing document: pagination.BasePage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,198 - INFO - Indexing document: pagination.BasePage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,200 - INFO - Indexing document: pagination.BasePage.model_post_init - This function is meant to behave like a BaseModel method to initialise private attributes.

It takes context as an argument since that's what pydantic-core passes when calling it.

Args:
    self: The...
2024-11-27 14:24:21,202 - INFO - Indexing document: pagination.BasePage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,203 - INFO - Indexing document: pagination.BasePage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,205 - INFO - Indexing document: pagination.BasePage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,207 - INFO - Indexing document: pagination.BasePage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,208 - INFO - Indexing document: pagination.BaseSyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:24:21,210 - INFO - Indexing document: pagination.BaseSyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,212 - INFO - Indexing document: pagination.BaseSyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,214 - INFO - Indexing document: pagination.BaseSyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:24:21,215 - INFO - Indexing document: pagination.BaseSyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,216 - INFO - Indexing document: pagination.BaseSyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,218 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,220 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,221 - INFO - Indexing document: pagination.CursorPageItem - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 14:24:21,224 - INFO - Indexing document: pagination.Generic - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:21,225 - INFO - Indexing document: pagination.PageInfo - Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set....
2024-11-27 14:24:21,227 - INFO - Indexing document: pagination.Protocol - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 14:24:21,229 - INFO - Indexing document: pagination.SyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:24:21,232 - INFO - Indexing document: pagination.SyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,233 - INFO - Indexing document: pagination.SyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,236 - INFO - Indexing document: pagination.SyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:24:21,237 - INFO - Indexing document: pagination.SyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,238 - INFO - Indexing document: pagination.SyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,240 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,242 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,244 - INFO - Indexing document: pagination.SyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 14:24:21,244 - INFO - Indexing document: pagination.SyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,246 - INFO - Indexing document: pagination.SyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,247 - INFO - Indexing document: pagination.SyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:24:21,248 - INFO - Indexing document: pagination.SyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,250 - INFO - Indexing document: pagination.SyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,252 - INFO - Indexing document: pagination.SyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,253 - INFO - Indexing document: pagination.SyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,255 - INFO - Indexing document: pagination.SyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 14:24:21,256 - INFO - Indexing document: pagination.runtime_checkable - Mark a protocol class as a runtime protocol.

Such protocol can be used with isinstance() and issubclass().
Raise TypeError if applied to a non-protocol class.
This allows a simple-minded structural c...
2024-11-27 14:24:21,257 - INFO - Indexing document: resources.AsyncBatches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 14:24:21,259 - INFO - Indexing document: resources.AsyncBatches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 14:24:21,263 - INFO - Indexing document: resources.AsyncBatches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 14:24:21,266 - INFO - Indexing document: resources.AsyncBatches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:24:21,268 - INFO - Indexing document: resources.AsyncEmbeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 14:24:21,270 - INFO - Indexing document: resources.AsyncFiles.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:24:21,272 - INFO - Indexing document: resources.AsyncFiles.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 14:24:21,274 - INFO - Indexing document: resources.AsyncFiles.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 14:24:21,276 - INFO - Indexing document: resources.AsyncFiles.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 14:24:21,281 - INFO - Indexing document: resources.AsyncFiles.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 14:24:21,287 - INFO - Indexing document: resources.AsyncFiles.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:24:21,289 - INFO - Indexing document: resources.AsyncFiles.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 14:24:21,291 - INFO - Indexing document: resources.AsyncImages.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 14:24:21,294 - INFO - Indexing document: resources.AsyncImages.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 14:24:21,296 - INFO - Indexing document: resources.AsyncImages.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 14:24:21,300 - INFO - Indexing document: resources.AsyncModels.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 14:24:21,302 - INFO - Indexing document: resources.AsyncModels.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 14:24:21,303 - INFO - Indexing document: resources.AsyncModels.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 14:24:21,305 - INFO - Indexing document: resources.AsyncModerations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 14:24:21,307 - INFO - Indexing document: resources.AsyncUploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 14:24:21,310 - INFO - Indexing document: resources.AsyncUploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 14:24:21,311 - INFO - Indexing document: resources.AsyncUploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 14:24:21,313 - INFO - Indexing document: resources.AsyncUploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 14:24:21,315 - INFO - Indexing document: resources.Batches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 14:24:21,317 - INFO - Indexing document: resources.Batches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 14:24:21,319 - INFO - Indexing document: resources.Batches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 14:24:21,321 - INFO - Indexing document: resources.Batches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:24:21,324 - INFO - Indexing document: resources.Embeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 14:24:21,326 - INFO - Indexing document: resources.Files.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:24:21,328 - INFO - Indexing document: resources.Files.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 14:24:21,331 - INFO - Indexing document: resources.Files.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 14:24:21,333 - INFO - Indexing document: resources.Files.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 14:24:21,335 - INFO - Indexing document: resources.Files.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 14:24:21,337 - INFO - Indexing document: resources.Files.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:24:21,339 - INFO - Indexing document: resources.Files.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 14:24:21,339 - INFO - Indexing document: resources.Images.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 14:24:21,342 - INFO - Indexing document: resources.Images.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 14:24:21,344 - INFO - Indexing document: resources.Images.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 14:24:21,346 - INFO - Indexing document: resources.Models.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 14:24:21,348 - INFO - Indexing document: resources.Models.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 14:24:21,349 - INFO - Indexing document: resources.Models.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 14:24:21,351 - INFO - Indexing document: resources.Moderations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 14:24:21,353 - INFO - Indexing document: resources.Uploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 14:24:21,355 - INFO - Indexing document: resources.Uploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 14:24:21,357 - INFO - Indexing document: resources.Uploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 14:24:21,359 - INFO - Indexing document: resources.Uploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 14:24:21,362 - INFO - Indexing document: resources.audio.AsyncSpeech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 14:24:21,364 - INFO - Indexing document: resources.audio.AsyncTranscriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 14:24:21,366 - INFO - Indexing document: resources.audio.AsyncTranslations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 14:24:21,367 - INFO - Indexing document: resources.audio.Speech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 14:24:21,369 - INFO - Indexing document: resources.audio.Transcriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 14:24:21,371 - INFO - Indexing document: resources.audio.Translations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 14:24:21,373 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:21,375 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 14:24:21,376 - INFO - Indexing document: resources.audio.speech.Body - The base class of the class hierarchy.

When called, it accepts no arguments and returns a new featureless
instance that has no instance attributes and cannot be given any....
2024-11-27 14:24:21,377 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:21,378 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 14:24:21,379 - INFO - Indexing document: resources.audio.speech.async_maybe_transform - Wrapper over `async_transform()` that allows `None` to be passed.

See `async_transform()` for more details....
2024-11-27 14:24:21,380 - INFO - Indexing document: resources.audio.speech.async_to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 14:24:21,381 - INFO - Indexing document: resources.audio.speech.make_request_options - Create a dict of type RequestOptions without keys of NotGiven values....
2024-11-27 14:24:21,382 - INFO - Indexing document: resources.audio.speech.maybe_transform - Wrapper over `transform()` that allows `None` to be passed.

See `transform()` for more details....
2024-11-27 14:24:21,384 - INFO - Indexing document: resources.audio.speech.speech_create_params.SpeechCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,386 - INFO - Indexing document: resources.audio.speech.speech_create_params.TypedDict - A simple typed namespace. At runtime it is equivalent to a plain dict.

TypedDict creates a dictionary type such that a type checker will expect all
instances to have a certain set of keys, where each...
2024-11-27 14:24:21,388 - INFO - Indexing document: resources.audio.speech.to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 14:24:21,389 - INFO - Indexing document: resources.audio.transcriptions.Transcription - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,391 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,393 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,394 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,396 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,397 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,399 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,401 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,403 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,404 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,406 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,407 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,409 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,410 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,412 - INFO - Indexing document: resources.audio.transcriptions.assert_never - Statically assert that a line of code is unreachable.

Example::

    def int_or_str(arg: int | str) -> None:
        match arg:
            case int():
                print("It's an int")
          ...
2024-11-27 14:24:21,414 - INFO - Indexing document: resources.audio.transcriptions.async_to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 14:24:21,417 - INFO - Indexing document: resources.audio.transcriptions.deepcopy_minimal - Minimal reimplementation of copy.deepcopy() that will only copy certain object types:

- mappings, e.g. `dict`
- list

This is done for performance reasons....
2024-11-27 14:24:21,419 - INFO - Indexing document: resources.audio.transcriptions.extract_files - Recursively extract files from the given dictionary based on specified paths.

A path may look like this ['foo', 'files', '<array>', 'data'].

Note: this mutates the given dictionary....
2024-11-27 14:24:21,420 - INFO - Indexing document: resources.audio.transcriptions.to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 14:24:21,421 - INFO - Indexing document: resources.audio.transcriptions.transcription_create_params.TranscriptionCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,423 - INFO - Indexing document: resources.audio.translations.Translation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,425 - INFO - Indexing document: resources.audio.translations.Translation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,427 - INFO - Indexing document: resources.audio.translations.Translation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,429 - INFO - Indexing document: resources.audio.translations.Translation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,430 - INFO - Indexing document: resources.audio.translations.Translation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,432 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,434 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,435 - INFO - Indexing document: resources.audio.translations.TranslationVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,437 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,439 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,441 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,442 - INFO - Indexing document: resources.audio.translations.translation_create_params.TranslationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,444 - INFO - Indexing document: resources.batches.AsyncPaginator - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:24:21,446 - INFO - Indexing document: resources.batches.Batch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,448 - INFO - Indexing document: resources.batches.Batch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,449 - INFO - Indexing document: resources.batches.Batch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,451 - INFO - Indexing document: resources.batches.Batch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,453 - INFO - Indexing document: resources.batches.Batch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,454 - INFO - Indexing document: resources.batches.Batch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,456 - INFO - Indexing document: resources.batches.Batch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,458 - INFO - Indexing document: resources.batches.batch_create_params.BatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,459 - INFO - Indexing document: resources.batches.batch_list_params.BatchListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,461 - INFO - Indexing document: resources.beta.Assistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 14:24:21,463 - INFO - Indexing document: resources.beta.Assistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 14:24:21,465 - INFO - Indexing document: resources.beta.Assistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 14:24:21,467 - INFO - Indexing document: resources.beta.Assistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 14:24:21,469 - INFO - Indexing document: resources.beta.AsyncAssistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 14:24:21,471 - INFO - Indexing document: resources.beta.AsyncAssistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 14:24:21,473 - INFO - Indexing document: resources.beta.AsyncAssistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 14:24:21,475 - INFO - Indexing document: resources.beta.AsyncAssistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 14:24:21,478 - INFO - Indexing document: resources.beta.AsyncThreads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 14:24:21,479 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:24:21,480 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 14:24:21,481 - INFO - Indexing document: resources.beta.AsyncThreads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:24:21,483 - INFO - Indexing document: resources.beta.AsyncThreads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:24:21,486 - INFO - Indexing document: resources.beta.AsyncVectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 14:24:21,487 - INFO - Indexing document: resources.beta.AsyncVectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 14:24:21,490 - INFO - Indexing document: resources.beta.AsyncVectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 14:24:21,492 - INFO - Indexing document: resources.beta.AsyncVectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 14:24:21,494 - INFO - Indexing document: resources.beta.Threads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 14:24:21,496 - INFO - Indexing document: resources.beta.Threads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:24:21,497 - INFO - Indexing document: resources.beta.Threads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 14:24:21,497 - INFO - Indexing document: resources.beta.Threads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:24:21,499 - INFO - Indexing document: resources.beta.Threads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:24:21,501 - INFO - Indexing document: resources.beta.VectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 14:24:21,503 - INFO - Indexing document: resources.beta.VectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 14:24:21,505 - INFO - Indexing document: resources.beta.VectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 14:24:21,507 - INFO - Indexing document: resources.beta.VectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 14:24:21,509 - INFO - Indexing document: resources.beta.assistants.Assistant - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,511 - INFO - Indexing document: resources.beta.assistants.Assistant.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,514 - INFO - Indexing document: resources.beta.assistants.Assistant.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,515 - INFO - Indexing document: resources.beta.assistants.Assistant.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,517 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,519 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,520 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,522 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,524 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,526 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,528 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,529 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,531 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,533 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,534 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.AssistantCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,536 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,537 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,539 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,541 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,543 - INFO - Indexing document: resources.beta.assistants.assistant_list_params.AssistantListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,545 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.AssistantUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,547 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,549 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,551 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,553 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 14:24:21,554 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 14:24:21,555 - INFO - Indexing document: resources.beta.chat.Completions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 14:24:21,557 - INFO - Indexing document: resources.beta.chat.Completions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 14:24:21,558 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,560 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,562 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,564 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,565 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,567 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,568 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,570 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,572 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,575 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,576 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,578 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,580 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,581 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,583 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,585 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionPredictionContentParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,587 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionStreamOptionsParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,588 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,590 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,592 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,594 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,595 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,596 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,598 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,600 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,601 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ChatCompletionFunctionCallOptionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,603 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,605 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,607 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,609 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,611 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONObject - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,613 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,615 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatText - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,617 - INFO - Indexing document: resources.beta.chat.completions.partial - partial(func, *args, **keywords) - new function with partial application
of the given arguments and keywords....
2024-11-27 14:24:21,618 - INFO - Indexing document: resources.beta.threads.AsyncMessages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 14:24:21,620 - INFO - Indexing document: resources.beta.threads.AsyncMessages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:24:21,622 - INFO - Indexing document: resources.beta.threads.AsyncMessages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 14:24:21,623 - INFO - Indexing document: resources.beta.threads.AsyncMessages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:24:21,625 - INFO - Indexing document: resources.beta.threads.AsyncRuns.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:24:21,627 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:24:21,628 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_stream - Create a Run stream...
2024-11-27 14:24:21,628 - INFO - Indexing document: resources.beta.threads.AsyncRuns.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 14:24:21,630 - INFO - Indexing document: resources.beta.threads.AsyncRuns.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:24:21,631 - INFO - Indexing document: resources.beta.threads.AsyncRuns.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:24:21,634 - INFO - Indexing document: resources.beta.threads.AsyncRuns.stream - Create a Run stream...
2024-11-27 14:24:21,634 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:24:21,635 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 14:24:21,636 - INFO - Indexing document: resources.beta.threads.Messages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 14:24:21,640 - INFO - Indexing document: resources.beta.threads.Messages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:24:21,643 - INFO - Indexing document: resources.beta.threads.Messages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 14:24:21,644 - INFO - Indexing document: resources.beta.threads.Messages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:24:21,646 - INFO - Indexing document: resources.beta.threads.Runs.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:24:21,648 - INFO - Indexing document: resources.beta.threads.Runs.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:24:21,649 - INFO - Indexing document: resources.beta.threads.Runs.create_and_stream - Create a Run stream...
2024-11-27 14:24:21,650 - INFO - Indexing document: resources.beta.threads.Runs.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 14:24:21,651 - INFO - Indexing document: resources.beta.threads.Runs.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:24:21,652 - INFO - Indexing document: resources.beta.threads.Runs.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:24:21,654 - INFO - Indexing document: resources.beta.threads.Runs.stream - Create a Run stream...
2024-11-27 14:24:21,655 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:24:21,656 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 14:24:21,657 - INFO - Indexing document: resources.beta.threads.messages.Message - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,659 - INFO - Indexing document: resources.beta.threads.messages.Message.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,660 - INFO - Indexing document: resources.beta.threads.messages.Message.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,663 - INFO - Indexing document: resources.beta.threads.messages.Message.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,664 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,666 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,669 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,670 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,673 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,675 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,676 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,679 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,681 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,683 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.Attachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,684 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.AttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,686 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.CodeInterpreterToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,687 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.MessageCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,689 - INFO - Indexing document: resources.beta.threads.messages.message_list_params.MessageListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,690 - INFO - Indexing document: resources.beta.threads.messages.message_update_params.MessageUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,692 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 14:24:21,694 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 14:24:21,695 - INFO - Indexing document: resources.beta.threads.runs.Steps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 14:24:21,697 - INFO - Indexing document: resources.beta.threads.runs.Steps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 14:24:21,699 - INFO - Indexing document: resources.beta.threads.runs.runs.Run - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,701 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,703 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,705 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,707 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,708 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,710 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,712 - INFO - Indexing document: resources.beta.threads.runs.runs.required_args - Decorator to enforce a given set of arguments or variants of arguments are passed to the decorated function.

Useful for enforcing runtime validation of overloaded functions.

Example usage:
```py
@ov...
2024-11-27 14:24:21,714 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,716 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,717 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,719 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,720 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,722 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,724 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,725 - INFO - Indexing document: resources.beta.threads.runs.runs.run_list_params.RunListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,728 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,730 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,733 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,734 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.ToolOutput - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,736 - INFO - Indexing document: resources.beta.threads.runs.runs.run_update_params.RunUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,738 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,740 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,742 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,744 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,745 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,747 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,749 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,750 - INFO - Indexing document: resources.beta.threads.runs.steps.step_list_params.StepListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,752 - INFO - Indexing document: resources.beta.threads.runs.steps.step_retrieve_params.StepRetrieveParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,754 - INFO - Indexing document: resources.beta.threads.threads.Thread - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,756 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,757 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,759 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,761 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,764 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,766 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,768 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,770 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,772 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,774 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,775 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,777 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,779 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,781 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FileSearchToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,782 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FunctionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,784 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.Thread - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,785 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,787 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,789 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,791 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,792 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,794 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,796 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,798 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,800 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,803 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,805 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,807 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,809 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,811 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,813 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.Message - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,815 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,817 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,818 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ThreadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,820 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,822 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,824 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,826 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,828 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ThreadUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,830 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,832 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,834 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,835 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 14:24:21,837 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 14:24:21,839 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 14:24:21,839 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 14:24:21,841 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 14:24:21,842 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:24:21,844 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 14:24:21,845 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 14:24:21,847 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 14:24:21,848 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 14:24:21,850 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 14:24:21,851 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 14:24:21,853 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 14:24:21,857 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 14:24:21,858 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 14:24:21,859 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 14:24:21,861 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 14:24:21,863 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 14:24:21,864 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 14:24:21,866 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 14:24:21,867 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:24:21,869 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 14:24:21,870 - INFO - Indexing document: resources.beta.vector_stores.Files.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 14:24:21,871 - INFO - Indexing document: resources.beta.vector_stores.Files.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 14:24:21,872 - INFO - Indexing document: resources.beta.vector_stores.Files.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 14:24:21,873 - INFO - Indexing document: resources.beta.vector_stores.Files.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 14:24:21,875 - INFO - Indexing document: resources.beta.vector_stores.Files.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 14:24:21,876 - INFO - Indexing document: resources.beta.vector_stores.Files.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 14:24:21,878 - INFO - Indexing document: resources.beta.vector_stores.Files.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 14:24:21,879 - INFO - Indexing document: resources.beta.vector_stores.Files.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 14:24:21,880 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,882 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,884 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,886 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,888 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,891 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,893 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,895 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future - Represents the result of an asynchronous computation....
2024-11-27 14:24:21,895 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.add_done_callback - Attaches a callable that will be called when the future finishes.

Args:
    fn: A callable that will be called with this future as its only
        argument when the future completes or is cancelled....
2024-11-27 14:24:21,897 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancel - Cancel the future if possible.

Returns True if the future was cancelled, False otherwise. A future
cannot be cancelled if it is running or has already completed....
2024-11-27 14:24:21,898 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancelled - Return True if the future was cancelled....
2024-11-27 14:24:21,898 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.done - Return True if the future was cancelled or finished executing....
2024-11-27 14:24:21,899 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.exception - Return the exception raised by the call that the future represents.

Args:
    timeout: The number of seconds to wait for the exception if the
        future isn't done. If None, then there is no limi...
2024-11-27 14:24:21,900 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.result - Return the result of the call that the future represents.

Args:
    timeout: The number of seconds to wait for the result if the future
        isn't done. If None, then there is no limit on the wait...
2024-11-27 14:24:21,902 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.running - Return True if the future is currently executing....
2024-11-27 14:24:21,903 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_exception - Sets the result of the future as being the given exception.

Should only be used by Executor implementations and unit tests....
2024-11-27 14:24:21,904 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_result - Sets the return value of work associated with the future.

Should only be used by Executor implementations and unit tests....
2024-11-27 14:24:21,905 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_running_or_notify_cancel - Mark the future as running or process any cancel notifications.

Should only be used by Executor implementations and unit tests.

If the future has been cancelled (cancel() was called and returned
Tru...
2024-11-27 14:24:21,906 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor - This is an abstract base class for concrete asynchronous executors....
2024-11-27 14:24:21,907 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.map - Returns an iterator equivalent to map(fn, iter).

Args:
    fn: A callable that will take as many arguments as there are
        passed iterables.
    timeout: The maximum number of seconds to wait. I...
2024-11-27 14:24:21,911 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.shutdown - Clean-up the resources associated with the Executor.

It is safe to call this method several times. Otherwise, no other
methods can be called after this one.

Args:
    wait: If True then shutdown wil...
2024-11-27 14:24:21,916 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.submit - Submits a callable to be executed with the given arguments.

Schedules the callable to be executed as fn(*args, **kwargs) and returns
a Future instance representing the execution of the callable.

Ret...
2024-11-27 14:24:21,919 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,923 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,926 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,929 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,931 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,932 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,934 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,936 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,938 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,939 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,941 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,943 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,944 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,946 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,948 - INFO - Indexing document: resources.beta.vector_stores.file_batches.as_completed - An iterator over the given futures that yields each as it completes.

Args:
    fs: The sequence of Futures (possibly created by different Executors) to
        iterate over.
    timeout: The maximum ...
2024-11-27 14:24:21,950 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_create_params.FileBatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,952 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_list_files_params.FileBatchListFilesParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,954 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,957 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,959 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,961 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,962 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,964 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,966 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,967 - INFO - Indexing document: resources.beta.vector_stores.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,969 - INFO - Indexing document: resources.beta.vector_stores.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,970 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,973 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,974 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,976 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,978 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,980 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,982 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,984 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:21,986 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:21,988 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:21,990 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:21,991 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:21,993 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:21,995 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:21,996 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,998 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.VectorStoreCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:21,999 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_list_params.VectorStoreListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,001 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,003 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.VectorStoreUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,004 - INFO - Indexing document: resources.completions.Completion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,007 - INFO - Indexing document: resources.completions.Completion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,009 - INFO - Indexing document: resources.completions.Completion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,011 - INFO - Indexing document: resources.completions.Completion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,012 - INFO - Indexing document: resources.completions.Completion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,014 - INFO - Indexing document: resources.completions.Completion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,016 - INFO - Indexing document: resources.completions.Completion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,018 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,020 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,022 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,024 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,026 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,028 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,030 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,032 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,034 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,036 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,038 - INFO - Indexing document: resources.embeddings.embedding_create_params.EmbeddingCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,040 - INFO - Indexing document: resources.files.FileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,043 - INFO - Indexing document: resources.files.FileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,045 - INFO - Indexing document: resources.files.FileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,047 - INFO - Indexing document: resources.files.FileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,050 - INFO - Indexing document: resources.files.FileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,052 - INFO - Indexing document: resources.files.FileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,054 - INFO - Indexing document: resources.files.FileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,056 - INFO - Indexing document: resources.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,058 - INFO - Indexing document: resources.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,060 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 14:24:22,062 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 14:24:22,064 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 14:24:22,066 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 14:24:22,069 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 14:24:22,071 - INFO - Indexing document: resources.fine_tuning.Jobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 14:24:22,074 - INFO - Indexing document: resources.fine_tuning.Jobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 14:24:22,076 - INFO - Indexing document: resources.fine_tuning.Jobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 14:24:22,078 - INFO - Indexing document: resources.fine_tuning.Jobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 14:24:22,081 - INFO - Indexing document: resources.fine_tuning.Jobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 14:24:22,083 - INFO - Indexing document: resources.fine_tuning.jobs.AsyncCheckpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 14:24:22,085 - INFO - Indexing document: resources.fine_tuning.jobs.Checkpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 14:24:22,087 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,090 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,092 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,093 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,095 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,097 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,100 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,103 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.checkpoint_list_params.CheckpointListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,106 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,109 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,111 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,113 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,115 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,117 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,119 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,121 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,124 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,126 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,128 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,130 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,134 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,137 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,138 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Hyperparameters - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,140 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Integration - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,142 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.IntegrationWandb - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,143 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.JobCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,146 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_events_params.JobListEventsParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,148 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_params.JobListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,150 - INFO - Indexing document: resources.images.ImagesResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,152 - INFO - Indexing document: resources.images.ImagesResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,153 - INFO - Indexing document: resources.images.ImagesResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,155 - INFO - Indexing document: resources.images.ImagesResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,156 - INFO - Indexing document: resources.images.ImagesResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,158 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,161 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,163 - INFO - Indexing document: resources.images.image_create_variation_params.ImageCreateVariationParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,165 - INFO - Indexing document: resources.images.image_edit_params.ImageEditParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,167 - INFO - Indexing document: resources.images.image_generate_params.ImageGenerateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,169 - INFO - Indexing document: resources.models.Model - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,171 - INFO - Indexing document: resources.models.Model.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,174 - INFO - Indexing document: resources.models.Model.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,176 - INFO - Indexing document: resources.models.Model.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,178 - INFO - Indexing document: resources.models.Model.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,179 - INFO - Indexing document: resources.models.Model.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,181 - INFO - Indexing document: resources.models.Model.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,183 - INFO - Indexing document: resources.models.ModelDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,185 - INFO - Indexing document: resources.models.ModelDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,187 - INFO - Indexing document: resources.models.ModelDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,188 - INFO - Indexing document: resources.models.ModelDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,190 - INFO - Indexing document: resources.models.ModelDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,192 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,194 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,197 - INFO - Indexing document: resources.moderations.ModerationCreateResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,200 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,202 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,203 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,205 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,207 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,208 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,210 - INFO - Indexing document: resources.moderations.moderation_create_params.ModerationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,212 - INFO - Indexing document: resources.uploads.AsyncParts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 14:24:22,213 - INFO - Indexing document: resources.uploads.Parts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 14:24:22,214 - INFO - Indexing document: resources.uploads.parts.UploadPart - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,216 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,218 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,219 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,222 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,223 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,225 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,226 - INFO - Indexing document: resources.uploads.parts.part_create_params.PartCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,228 - INFO - Indexing document: resources.uploads.uploads.Path - PurePath subclass that can make system calls.

Path represents a filesystem path but unlike PurePath, also offers
methods to do system calls on path objects. Depending on your system,
instantiating a ...
2024-11-27 14:24:22,230 - INFO - Indexing document: resources.uploads.uploads.Path.absolute - Return an absolute version of this path by prepending the current
working directory. No normalization or symlink resolution is performed.

Use resolve() to get the canonical path to a file....
2024-11-27 14:24:22,231 - INFO - Indexing document: resources.uploads.uploads.Path.anchor - The concatenation of the drive and root, or ''....
2024-11-27 14:24:22,232 - INFO - Indexing document: resources.uploads.uploads.Path.as_posix - Return the string representation of the path with forward (/)
slashes....
2024-11-27 14:24:22,233 - INFO - Indexing document: resources.uploads.uploads.Path.as_uri - Return the path as a 'file' URI....
2024-11-27 14:24:22,233 - INFO - Indexing document: resources.uploads.uploads.Path.chmod - Change the permissions of the path, like os.chmod()....
2024-11-27 14:24:22,234 - INFO - Indexing document: resources.uploads.uploads.Path.cwd - Return a new path pointing to the current working directory....
2024-11-27 14:24:22,234 - INFO - Indexing document: resources.uploads.uploads.Path.drive - The drive prefix (letter or UNC path), if any....
2024-11-27 14:24:22,235 - INFO - Indexing document: resources.uploads.uploads.Path.exists - Whether this path exists.

This method normally follows symlinks; to check whether a symlink exists,
add the argument follow_symlinks=False....
2024-11-27 14:24:22,236 - INFO - Indexing document: resources.uploads.uploads.Path.expanduser - Return a new path with expanded ~ and ~user constructs
(as returned by os.path.expanduser)...
2024-11-27 14:24:22,237 - INFO - Indexing document: resources.uploads.uploads.Path.glob - Iterate over this subtree and yield all existing files (of any
kind, including directories) matching the given relative pattern....
2024-11-27 14:24:22,238 - INFO - Indexing document: resources.uploads.uploads.Path.group - Return the group name of the file gid....
2024-11-27 14:24:22,239 - INFO - Indexing document: resources.uploads.uploads.Path.hardlink_to - Make this path a hard link pointing to the same file as *target*.

Note the order of arguments (self, target) is the reverse of os.link's....
2024-11-27 14:24:22,240 - INFO - Indexing document: resources.uploads.uploads.Path.home - Return a new path pointing to the user's home directory (as
returned by os.path.expanduser('~'))....
2024-11-27 14:24:22,240 - INFO - Indexing document: resources.uploads.uploads.Path.is_absolute - True if the path is absolute (has both a root and, if applicable,
a drive)....
2024-11-27 14:24:22,241 - INFO - Indexing document: resources.uploads.uploads.Path.is_block_device - Whether this path is a block device....
2024-11-27 14:24:22,242 - INFO - Indexing document: resources.uploads.uploads.Path.is_char_device - Whether this path is a character device....
2024-11-27 14:24:22,242 - INFO - Indexing document: resources.uploads.uploads.Path.is_dir - Whether this path is a directory....
2024-11-27 14:24:22,242 - INFO - Indexing document: resources.uploads.uploads.Path.is_fifo - Whether this path is a FIFO....
2024-11-27 14:24:22,243 - INFO - Indexing document: resources.uploads.uploads.Path.is_file - Whether this path is a regular file (also True for symlinks pointing
to regular files)....
2024-11-27 14:24:22,244 - INFO - Indexing document: resources.uploads.uploads.Path.is_junction - Whether this path is a junction....
2024-11-27 14:24:22,244 - INFO - Indexing document: resources.uploads.uploads.Path.is_mount - Check if this path is a mount point...
2024-11-27 14:24:22,246 - INFO - Indexing document: resources.uploads.uploads.Path.is_relative_to - Return True if the path is relative to another path or False.
        ...
2024-11-27 14:24:22,246 - INFO - Indexing document: resources.uploads.uploads.Path.is_reserved - Return True if the path contains one of the special names reserved
by the system, if any....
2024-11-27 14:24:22,247 - INFO - Indexing document: resources.uploads.uploads.Path.is_socket - Whether this path is a socket....
2024-11-27 14:24:22,248 - INFO - Indexing document: resources.uploads.uploads.Path.is_symlink - Whether this path is a symbolic link....
2024-11-27 14:24:22,248 - INFO - Indexing document: resources.uploads.uploads.Path.iterdir - Yield path objects of the directory contents.

The children are yielded in arbitrary order, and the
special entries '.' and '..' are not included....
2024-11-27 14:24:22,249 - INFO - Indexing document: resources.uploads.uploads.Path.joinpath - Combine this path with one or several arguments, and return a
new path representing either a subpath (if all arguments are relative
paths) or a totally different path (if one of the arguments is
ancho...
2024-11-27 14:24:22,251 - INFO - Indexing document: resources.uploads.uploads.Path.lchmod - Like chmod(), except if the path points to a symlink, the symlink's
permissions are changed, rather than its target's....
2024-11-27 14:24:22,252 - INFO - Indexing document: resources.uploads.uploads.Path.lstat - Like stat(), except if the path points to a symlink, the symlink's
status information is returned, rather than its target's....
2024-11-27 14:24:22,252 - INFO - Indexing document: resources.uploads.uploads.Path.match - Return True if this path matches the given pattern....
2024-11-27 14:24:22,253 - INFO - Indexing document: resources.uploads.uploads.Path.mkdir - Create a new directory at this given path....
2024-11-27 14:24:22,253 - INFO - Indexing document: resources.uploads.uploads.Path.name - The final path component, if any....
2024-11-27 14:24:22,254 - INFO - Indexing document: resources.uploads.uploads.Path.open - Open the file pointed by this path and return a file object, as
the built-in open() function does....
2024-11-27 14:24:22,255 - INFO - Indexing document: resources.uploads.uploads.Path.owner - Return the login name of the file owner....
2024-11-27 14:24:22,255 - INFO - Indexing document: resources.uploads.uploads.Path.parent - The logical parent of the path....
2024-11-27 14:24:22,256 - INFO - Indexing document: resources.uploads.uploads.Path.parents - A sequence of this path's logical parents....
2024-11-27 14:24:22,256 - INFO - Indexing document: resources.uploads.uploads.Path.parts - An object providing sequence-like access to the
components in the filesystem path....
2024-11-27 14:24:22,257 - INFO - Indexing document: resources.uploads.uploads.Path.read_bytes - Open the file in bytes mode, read it, and close the file....
2024-11-27 14:24:22,258 - INFO - Indexing document: resources.uploads.uploads.Path.read_text - Open the file in text mode, read it, and close the file....
2024-11-27 14:24:22,259 - INFO - Indexing document: resources.uploads.uploads.Path.readlink - Return the path to which the symbolic link points....
2024-11-27 14:24:22,259 - INFO - Indexing document: resources.uploads.uploads.Path.relative_to - Return the relative path to another path identified by the passed
arguments.  If the operation is not possible (because this is not
related to the other path), raise ValueError.

The *walk_up* paramet...
2024-11-27 14:24:22,261 - INFO - Indexing document: resources.uploads.uploads.Path.rename - Rename this path to the target path.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
directory of the Path object.

Re...
2024-11-27 14:24:22,263 - INFO - Indexing document: resources.uploads.uploads.Path.replace - Rename this path to the target path, overwriting if that path exists.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
...
2024-11-27 14:24:22,265 - INFO - Indexing document: resources.uploads.uploads.Path.resolve - Make the path absolute, resolving all symlinks on the way and also
normalizing it....
2024-11-27 14:24:22,266 - INFO - Indexing document: resources.uploads.uploads.Path.rglob - Recursively yield all existing files (of any kind, including
directories) matching the given relative pattern, anywhere in
this subtree....
2024-11-27 14:24:22,267 - INFO - Indexing document: resources.uploads.uploads.Path.rmdir - Remove this directory.  The directory must be empty....
2024-11-27 14:24:22,268 - INFO - Indexing document: resources.uploads.uploads.Path.root - The root of the path, if any....
2024-11-27 14:24:22,268 - INFO - Indexing document: resources.uploads.uploads.Path.samefile - Return whether other_path is the same or not as this file
(as returned by os.path.samefile())....
2024-11-27 14:24:22,269 - INFO - Indexing document: resources.uploads.uploads.Path.stat - Return the result of the stat() system call on this path, like
os.stat() does....
2024-11-27 14:24:22,270 - INFO - Indexing document: resources.uploads.uploads.Path.stem - The final path component, minus its last suffix....
2024-11-27 14:24:22,271 - INFO - Indexing document: resources.uploads.uploads.Path.suffix - The final component's last suffix, if any.

This includes the leading period. For example: '.txt'...
2024-11-27 14:24:22,272 - INFO - Indexing document: resources.uploads.uploads.Path.suffixes - A list of the final component's suffixes, if any.

These include the leading periods. For example: ['.tar', '.gz']...
2024-11-27 14:24:22,272 - INFO - Indexing document: resources.uploads.uploads.Path.symlink_to - Make this path a symlink pointing to the target path.
Note the order of arguments (link, target) is the reverse of os.symlink....
2024-11-27 14:24:22,273 - INFO - Indexing document: resources.uploads.uploads.Path.touch - Create this file with the given access mode, if it doesn't exist....
2024-11-27 14:24:22,274 - INFO - Indexing document: resources.uploads.uploads.Path.unlink - Remove this file or link.
If the path is a directory, use rmdir() instead....
2024-11-27 14:24:22,275 - INFO - Indexing document: resources.uploads.uploads.Path.walk - Walk the directory tree from this directory, similar to os.walk()....
2024-11-27 14:24:22,275 - INFO - Indexing document: resources.uploads.uploads.Path.with_name - Return a new path with the file name changed....
2024-11-27 14:24:22,276 - INFO - Indexing document: resources.uploads.uploads.Path.with_segments - Construct a new path object from any number of path-like objects.
Subclasses may override this method to customize how new path objects
are created from methods like `iterdir()`....
2024-11-27 14:24:22,277 - INFO - Indexing document: resources.uploads.uploads.Path.with_stem - Return a new path with the stem changed....
2024-11-27 14:24:22,277 - INFO - Indexing document: resources.uploads.uploads.Path.with_suffix - Return a new path with the file suffix changed.  If the path
has no suffix, add given suffix.  If the given suffix is an empty
string, remove the suffix from the path....
2024-11-27 14:24:22,279 - INFO - Indexing document: resources.uploads.uploads.Path.write_bytes - Open the file in bytes mode, write to it, and close the file....
2024-11-27 14:24:22,279 - INFO - Indexing document: resources.uploads.uploads.Path.write_text - Open the file in text mode, write to it, and close the file....
2024-11-27 14:24:22,280 - INFO - Indexing document: resources.uploads.uploads.Upload - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,282 - INFO - Indexing document: resources.uploads.uploads.Upload.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,284 - INFO - Indexing document: resources.uploads.uploads.Upload.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,286 - INFO - Indexing document: resources.uploads.uploads.Upload.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,287 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,288 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,291 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,293 - INFO - Indexing document: resources.uploads.uploads.upload_complete_params.UploadCompleteParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,295 - INFO - Indexing document: resources.uploads.uploads.upload_create_params.UploadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,297 - INFO - Indexing document: types.BatchError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,300 - INFO - Indexing document: types.BatchError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,302 - INFO - Indexing document: types.BatchError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,304 - INFO - Indexing document: types.BatchError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,305 - INFO - Indexing document: types.BatchError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,307 - INFO - Indexing document: types.BatchError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,308 - INFO - Indexing document: types.BatchError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,310 - INFO - Indexing document: types.BatchRequestCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,312 - INFO - Indexing document: types.BatchRequestCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,314 - INFO - Indexing document: types.BatchRequestCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,316 - INFO - Indexing document: types.BatchRequestCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,317 - INFO - Indexing document: types.BatchRequestCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,319 - INFO - Indexing document: types.BatchRequestCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,321 - INFO - Indexing document: types.BatchRequestCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,323 - INFO - Indexing document: types.CompletionChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,325 - INFO - Indexing document: types.CompletionChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,327 - INFO - Indexing document: types.CompletionChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,329 - INFO - Indexing document: types.CompletionChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,330 - INFO - Indexing document: types.CompletionChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,332 - INFO - Indexing document: types.CompletionChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,334 - INFO - Indexing document: types.CompletionChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,336 - INFO - Indexing document: types.CompletionUsage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,338 - INFO - Indexing document: types.CompletionUsage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,339 - INFO - Indexing document: types.CompletionUsage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,342 - INFO - Indexing document: types.CompletionUsage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,344 - INFO - Indexing document: types.CompletionUsage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,346 - INFO - Indexing document: types.CompletionUsage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,348 - INFO - Indexing document: types.CompletionUsage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,349 - INFO - Indexing document: types.Embedding - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,351 - INFO - Indexing document: types.Embedding.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,353 - INFO - Indexing document: types.Embedding.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,355 - INFO - Indexing document: types.Embedding.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,357 - INFO - Indexing document: types.Embedding.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,358 - INFO - Indexing document: types.Embedding.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,361 - INFO - Indexing document: types.Embedding.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,363 - INFO - Indexing document: types.ErrorObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,365 - INFO - Indexing document: types.ErrorObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,367 - INFO - Indexing document: types.ErrorObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,368 - INFO - Indexing document: types.ErrorObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,370 - INFO - Indexing document: types.ErrorObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,371 - INFO - Indexing document: types.ErrorObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,373 - INFO - Indexing document: types.ErrorObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,374 - INFO - Indexing document: types.FileContent - str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer...
2024-11-27 14:24:22,376 - INFO - Indexing document: types.FunctionDefinition - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,378 - INFO - Indexing document: types.FunctionDefinition.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,379 - INFO - Indexing document: types.FunctionDefinition.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,381 - INFO - Indexing document: types.FunctionDefinition.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,382 - INFO - Indexing document: types.FunctionDefinition.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,385 - INFO - Indexing document: types.FunctionDefinition.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,387 - INFO - Indexing document: types.FunctionDefinition.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,388 - INFO - Indexing document: types.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,391 - INFO - Indexing document: types.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,393 - INFO - Indexing document: types.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,395 - INFO - Indexing document: types.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,396 - INFO - Indexing document: types.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,398 - INFO - Indexing document: types.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,399 - INFO - Indexing document: types.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,401 - INFO - Indexing document: types.Moderation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,403 - INFO - Indexing document: types.Moderation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,404 - INFO - Indexing document: types.Moderation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,406 - INFO - Indexing document: types.Moderation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,407 - INFO - Indexing document: types.Moderation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,409 - INFO - Indexing document: types.Moderation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,410 - INFO - Indexing document: types.Moderation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,412 - INFO - Indexing document: types.ModerationImageURLInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,414 - INFO - Indexing document: types.ModerationTextInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,416 - INFO - Indexing document: types.ResponseFormatJSONObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,418 - INFO - Indexing document: types.ResponseFormatJSONObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,420 - INFO - Indexing document: types.ResponseFormatJSONObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,422 - INFO - Indexing document: types.ResponseFormatJSONObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,424 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,428 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,430 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,432 - INFO - Indexing document: types.ResponseFormatJSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,434 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,436 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,438 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,440 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,442 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,443 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,446 - INFO - Indexing document: types.ResponseFormatText - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,448 - INFO - Indexing document: types.ResponseFormatText.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,450 - INFO - Indexing document: types.ResponseFormatText.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,452 - INFO - Indexing document: types.ResponseFormatText.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,454 - INFO - Indexing document: types.ResponseFormatText.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,456 - INFO - Indexing document: types.ResponseFormatText.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,458 - INFO - Indexing document: types.ResponseFormatText.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,460 - INFO - Indexing document: types.audio.TranscriptionSegment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,462 - INFO - Indexing document: types.audio.TranscriptionSegment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,464 - INFO - Indexing document: types.audio.TranscriptionSegment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,465 - INFO - Indexing document: types.audio.TranscriptionSegment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,467 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,469 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,470 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,472 - INFO - Indexing document: types.audio.TranscriptionWord - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,474 - INFO - Indexing document: types.audio.TranscriptionWord.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,475 - INFO - Indexing document: types.audio.TranscriptionWord.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,477 - INFO - Indexing document: types.audio.TranscriptionWord.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,479 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,481 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,483 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,484 - INFO - Indexing document: types.batch.Errors - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,486 - INFO - Indexing document: types.batch.Errors.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,488 - INFO - Indexing document: types.batch.Errors.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,490 - INFO - Indexing document: types.batch.Errors.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,491 - INFO - Indexing document: types.batch.Errors.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,493 - INFO - Indexing document: types.batch.Errors.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,495 - INFO - Indexing document: types.batch.Errors.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,496 - INFO - Indexing document: types.beta.AssistantToolChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,498 - INFO - Indexing document: types.beta.AssistantToolChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,500 - INFO - Indexing document: types.beta.AssistantToolChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,501 - INFO - Indexing document: types.beta.AssistantToolChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,504 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,505 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,509 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,511 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,514 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,516 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,519 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,520 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,522 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,524 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,525 - INFO - Indexing document: types.beta.AssistantToolChoiceFunctionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,527 - INFO - Indexing document: types.beta.AssistantToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,528 - INFO - Indexing document: types.beta.AutoFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,530 - INFO - Indexing document: types.beta.CodeInterpreterTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,532 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,533 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,535 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,536 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,538 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,541 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,542 - INFO - Indexing document: types.beta.FileSearchTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,545 - INFO - Indexing document: types.beta.FileSearchTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,547 - INFO - Indexing document: types.beta.FileSearchTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,548 - INFO - Indexing document: types.beta.FileSearchTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,550 - INFO - Indexing document: types.beta.FileSearchTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,552 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,553 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,555 - INFO - Indexing document: types.beta.FunctionTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,557 - INFO - Indexing document: types.beta.FunctionTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,558 - INFO - Indexing document: types.beta.FunctionTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,560 - INFO - Indexing document: types.beta.FunctionTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,561 - INFO - Indexing document: types.beta.FunctionTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,563 - INFO - Indexing document: types.beta.FunctionTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,565 - INFO - Indexing document: types.beta.FunctionTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,566 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,568 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,570 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,572 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,574 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,576 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,578 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,581 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,583 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,585 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,587 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,588 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,590 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,591 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,593 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,595 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,597 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,598 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,600 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,602 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,605 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,607 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:22,609 - INFO - Indexing document: types.beta.assistant.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,613 - INFO - Indexing document: types.beta.assistant.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,614 - INFO - Indexing document: types.beta.assistant.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,616 - INFO - Indexing document: types.beta.assistant.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,617 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,619 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,621 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,623 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,625 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,626 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,628 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,629 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,631 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,633 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,635 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,637 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,639 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,641 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,643 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,645 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,646 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,648 - INFO - Indexing document: types.beta.assistant_stream_event.Annotated - Add context-specific metadata to a type.

Example: Annotated[int, runtime_check.Unsigned] indicates to the
hypothetical runtime_check module that this type is an unsigned int.
Every other consumer of ...
2024-11-27 14:24:22,649 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,652 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,653 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,655 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,656 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,658 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,660 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,662 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,664 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,666 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,669 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,670 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,672 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,674 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,676 - INFO - Indexing document: types.beta.assistant_stream_event.PropertyInfo - Metadata class to be used in Annotated types to provide information about a given type.

For example:

class MyParams(TypedDict):
    account_holder_name: Annotated[str, PropertyInfo(alias='accountHol...
2024-11-27 14:24:22,678 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,680 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,682 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,683 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,685 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,687 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,688 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,690 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,692 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,694 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,697 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,698 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,701 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,703 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,713 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,716 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,718 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,720 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,722 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,724 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,726 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,730 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,733 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,735 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,738 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,739 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,742 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,743 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,745 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,747 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,749 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,751 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,752 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,754 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,756 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,758 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,760 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,762 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,764 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,766 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,768 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,771 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,773 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,775 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,777 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,779 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,780 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,783 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,785 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,786 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,788 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,790 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,792 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,794 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,796 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,800 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,802 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,804 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,806 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,808 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,810 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,812 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,814 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,816 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,818 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,820 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,823 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,825 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,827 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,830 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,833 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,835 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,838 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,839 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,842 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,844 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,846 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,849 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,850 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,853 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,855 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,857 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,859 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,862 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,865 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,867 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,869 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,871 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,873 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,875 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,877 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,879 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,881 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,883 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,886 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,888 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,891 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,894 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,897 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,899 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,901 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,903 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,905 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,908 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,910 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,913 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,915 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,916 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,919 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,922 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,924 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,927 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,929 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,931 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,932 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,934 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,936 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,938 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,940 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,942 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,943 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,945 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,947 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,948 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,950 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,953 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,954 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,956 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,958 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,959 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,961 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,963 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,965 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,967 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,969 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,971 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,973 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,975 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,978 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,981 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,983 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,985 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:22,987 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:22,989 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:22,991 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:22,993 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:22,995 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:22,998 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:22,999 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,001 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,003 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,006 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,009 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,012 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,015 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,017 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,019 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,021 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,023 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,026 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,028 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,030 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,031 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,034 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,036 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,038 - INFO - Indexing document: types.beta.file_search_tool.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,042 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,044 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,047 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,049 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,051 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,054 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,055 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,058 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,060 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,062 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,063 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,065 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,068 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,070 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:23,072 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearchRankingOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:23,075 - INFO - Indexing document: types.beta.function_tool_param.FunctionDefinition - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:23,077 - INFO - Indexing document: types.beta.thread.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,080 - INFO - Indexing document: types.beta.thread.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,082 - INFO - Indexing document: types.beta.thread.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,084 - INFO - Indexing document: types.beta.thread.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,085 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,086 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,088 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,090 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,092 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,094 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,096 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,097 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,099 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,102 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,104 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,107 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,109 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,112 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,115 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,117 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,119 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,121 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,123 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,125 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,128 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,129 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,131 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,134 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,136 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,139 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,141 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,144 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,145 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,149 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,151 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,153 - INFO - Indexing document: types.beta.threads.FilePathAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,155 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,157 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,158 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,160 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,161 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,163 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,165 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,168 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,171 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,172 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,174 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,176 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,178 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,179 - INFO - Indexing document: types.beta.threads.ImageFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,181 - INFO - Indexing document: types.beta.threads.ImageFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,183 - INFO - Indexing document: types.beta.threads.ImageFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,185 - INFO - Indexing document: types.beta.threads.ImageFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,187 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,189 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,191 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,193 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,195 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,196 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,198 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,201 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,203 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,206 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,208 - INFO - Indexing document: types.beta.threads.ImageFileContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:23,210 - INFO - Indexing document: types.beta.threads.ImageFileDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,212 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,214 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,216 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,217 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,219 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,221 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,222 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,224 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,226 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,228 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,230 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,232 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,235 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,237 - INFO - Indexing document: types.beta.threads.ImageFileParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:23,238 - INFO - Indexing document: types.beta.threads.ImageURL - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,240 - INFO - Indexing document: types.beta.threads.ImageURL.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,242 - INFO - Indexing document: types.beta.threads.ImageURL.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,243 - INFO - Indexing document: types.beta.threads.ImageURL.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,245 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,246 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,248 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,250 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,255 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,256 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,259 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,261 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,263 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,264 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,267 - INFO - Indexing document: types.beta.threads.ImageURLContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:23,270 - INFO - Indexing document: types.beta.threads.ImageURLDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,272 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,274 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,275 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,277 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,278 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,280 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,282 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,284 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,285 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,287 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,289 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,291 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,293 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,295 - INFO - Indexing document: types.beta.threads.ImageURLParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:23,296 - INFO - Indexing document: types.beta.threads.MessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,301 - INFO - Indexing document: types.beta.threads.MessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,302 - INFO - Indexing document: types.beta.threads.MessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,303 - INFO - Indexing document: types.beta.threads.MessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,305 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,306 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,308 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,310 - INFO - Indexing document: types.beta.threads.RefusalContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,312 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,313 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,315 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,316 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,318 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,320 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,322 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,324 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,326 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,328 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,330 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,331 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,333 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,335 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,337 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,339 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,341 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,344 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,347 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,350 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,351 - INFO - Indexing document: types.beta.threads.Text - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,354 - INFO - Indexing document: types.beta.threads.Text.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,355 - INFO - Indexing document: types.beta.threads.Text.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,357 - INFO - Indexing document: types.beta.threads.Text.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,359 - INFO - Indexing document: types.beta.threads.Text.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,361 - INFO - Indexing document: types.beta.threads.Text.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,363 - INFO - Indexing document: types.beta.threads.Text.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,364 - INFO - Indexing document: types.beta.threads.TextContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,366 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,368 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,370 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,372 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,374 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,376 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,377 - INFO - Indexing document: types.beta.threads.TextContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:23,379 - INFO - Indexing document: types.beta.threads.TextDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,380 - INFO - Indexing document: types.beta.threads.TextDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,383 - INFO - Indexing document: types.beta.threads.TextDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,385 - INFO - Indexing document: types.beta.threads.TextDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,387 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,389 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,391 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,393 - INFO - Indexing document: types.beta.threads.TextDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,395 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,397 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,398 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,400 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,401 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,403 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,405 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,406 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,408 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,410 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,411 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,413 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,415 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,417 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,420 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,421 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,423 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,425 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,427 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,428 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,430 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,432 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,434 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,435 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,437 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,439 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,441 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,442 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,444 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,447 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,449 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,450 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,453 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,455 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,456 - INFO - Indexing document: types.beta.threads.message.Attachment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,459 - INFO - Indexing document: types.beta.threads.message.Attachment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,461 - INFO - Indexing document: types.beta.threads.message.Attachment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,462 - INFO - Indexing document: types.beta.threads.message.Attachment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,463 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,465 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,467 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,469 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,472 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,473 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,475 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,478 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,481 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,483 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,485 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,488 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,489 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,491 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,492 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,494 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,496 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,498 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,500 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,501 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,503 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,504 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,506 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,508 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,510 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,512 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,515 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,521 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,525 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,532 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,537 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,541 - INFO - Indexing document: types.beta.threads.run.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,545 - INFO - Indexing document: types.beta.threads.run.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,549 - INFO - Indexing document: types.beta.threads.run.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,551 - INFO - Indexing document: types.beta.threads.run.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,555 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,558 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,561 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,564 - INFO - Indexing document: types.beta.threads.run.RequiredAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,571 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,574 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,578 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,582 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,585 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,589 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,593 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,596 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,599 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,601 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,603 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,605 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,607 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,609 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,612 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,617 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,620 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,623 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,626 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,630 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,633 - INFO - Indexing document: types.beta.threads.run.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,636 - INFO - Indexing document: types.beta.threads.run.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,638 - INFO - Indexing document: types.beta.threads.run.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,640 - INFO - Indexing document: types.beta.threads.run.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,641 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,644 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,646 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,648 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,650 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,652 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,654 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,655 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,657 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,659 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,661 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,663 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,665 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,666 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,668 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,670 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,672 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,674 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,676 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,678 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,679 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,681 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,683 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,685 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,687 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,689 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,691 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,693 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,694 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,696 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,698 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,700 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,702 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,705 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,707 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,708 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,710 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,712 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,713 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,716 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,717 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,719 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,720 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,722 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,724 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,727 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,735 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,741 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,745 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,747 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,749 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,752 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,754 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,756 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,758 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,760 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,762 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,764 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,766 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,768 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,770 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,772 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,774 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,775 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,777 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,779 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,781 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,783 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,785 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,786 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,788 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,790 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,791 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,793 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,796 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,799 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,801 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,802 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,804 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,806 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,807 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,810 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,812 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,813 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,815 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,817 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,818 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,820 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,823 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,825 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,827 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,828 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,830 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,832 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,834 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,836 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,838 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,839 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,841 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,843 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,845 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,847 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,850 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,852 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,854 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,857 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,859 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,862 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,863 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,866 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,867 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,869 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,871 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,872 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,874 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,876 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,878 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,879 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,881 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,882 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,885 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,887 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,890 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,892 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,894 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,896 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,898 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,899 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,901 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,903 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,905 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,907 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,908 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,910 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,912 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,914 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,915 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,918 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,920 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,922 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,924 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,926 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,929 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,931 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,933 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,934 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,936 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,937 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,939 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,941 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,943 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,945 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,946 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,948 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,950 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,952 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,954 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,956 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,958 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,960 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,961 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,963 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,965 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,967 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,969 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,971 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,972 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,974 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,975 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,978 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,980 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,982 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,984 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,986 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:23,987 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:23,989 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:23,991 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:23,993 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:23,994 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:23,996 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:23,998 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,000 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,001 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,003 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,005 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,006 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,009 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,011 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,014 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,015 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,017 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,020 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,021 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,023 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,025 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,027 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,028 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,030 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,032 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,033 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,035 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,037 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,039 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,041 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,043 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,045 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,047 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,050 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,052 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,053 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,055 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,056 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,058 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,059 - INFO - Indexing document: types.beta.vector_store.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,061 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,063 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,064 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,066 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,067 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,069 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,072 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,074 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,076 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,078 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,079 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,081 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,083 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,084 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,086 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,088 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,090 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,092 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,094 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,096 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,097 - INFO - Indexing document: types.chat.ChatCompletionAssistantMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,098 - INFO - Indexing document: types.chat.ChatCompletionAudio - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,101 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,102 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,104 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,107 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,109 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,112 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,113 - INFO - Indexing document: types.chat.ChatCompletionContentPartImageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,115 - INFO - Indexing document: types.chat.ChatCompletionContentPartInputAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,116 - INFO - Indexing document: types.chat.ChatCompletionContentPartRefusalParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,117 - INFO - Indexing document: types.chat.ChatCompletionContentPartTextParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,119 - INFO - Indexing document: types.chat.ChatCompletionFunctionMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,121 - INFO - Indexing document: types.chat.ChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,123 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,125 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,126 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,128 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,129 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,131 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,132 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,135 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,137 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,140 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,142 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,145 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,147 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,149 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCallParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,150 - INFO - Indexing document: types.chat.ChatCompletionNamedToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,152 - INFO - Indexing document: types.chat.ChatCompletionSystemMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,154 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,157 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,159 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,161 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,163 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,164 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,167 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,170 - INFO - Indexing document: types.chat.ChatCompletionToolMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,173 - INFO - Indexing document: types.chat.ChatCompletionUserMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,174 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,177 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,179 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,181 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,183 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,186 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,188 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,191 - INFO - Indexing document: types.chat.ParsedChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,194 - INFO - Indexing document: types.chat.ParsedChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,196 - INFO - Indexing document: types.chat.ParsedChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,198 - INFO - Indexing document: types.chat.ParsedChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,200 - INFO - Indexing document: types.chat.ParsedChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,203 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,206 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,208 - INFO - Indexing document: types.chat.ParsedFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,211 - INFO - Indexing document: types.chat.ParsedFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,212 - INFO - Indexing document: types.chat.ParsedFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,214 - INFO - Indexing document: types.chat.ParsedFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,216 - INFO - Indexing document: types.chat.ParsedFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,218 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,220 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,221 - INFO - Indexing document: types.chat.ParsedFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,224 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,226 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,229 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,231 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,233 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,236 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,238 - INFO - Indexing document: types.chat.chat_completion.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,241 - INFO - Indexing document: types.chat.chat_completion.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,243 - INFO - Indexing document: types.chat.chat_completion.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,245 - INFO - Indexing document: types.chat.chat_completion.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,246 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,248 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,250 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,251 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,254 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,256 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,259 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,262 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,264 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,266 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,268 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.Audio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,270 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.FunctionCall - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,272 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,274 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,276 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,278 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,280 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,282 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,284 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,285 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,288 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,289 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,291 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,293 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,295 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,297 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,299 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,301 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,304 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,305 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,307 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,309 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,310 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,312 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,314 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,316 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,317 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,319 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,321 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,324 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,326 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,329 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,331 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,333 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,334 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,336 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,337 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,339 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,342 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,346 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,347 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,349 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,351 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,353 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,355 - INFO - Indexing document: types.chat.chat_completion_content_part_image_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,357 - INFO - Indexing document: types.chat.chat_completion_content_part_input_audio_param.InputAudio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,359 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,361 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,363 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,365 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,366 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,368 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,369 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,372 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,374 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,376 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,378 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,379 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,381 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,382 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,385 - INFO - Indexing document: types.chat.chat_completion_message_tool_call_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,387 - INFO - Indexing document: types.chat.chat_completion_named_tool_choice_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,388 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,390 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,392 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,394 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,396 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,397 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,399 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,401 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,403 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,404 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,406 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,407 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,409 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,411 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,413 - INFO - Indexing document: types.completion_choice.Logprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,415 - INFO - Indexing document: types.completion_choice.Logprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,418 - INFO - Indexing document: types.completion_choice.Logprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,420 - INFO - Indexing document: types.completion_choice.Logprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,421 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,423 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,425 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,426 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,428 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,430 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,432 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,433 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,435 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,437 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,438 - INFO - Indexing document: types.completion_usage.PromptTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,440 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,442 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,444 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,445 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,447 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,451 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,452 - INFO - Indexing document: types.create_embedding_response.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,455 - INFO - Indexing document: types.create_embedding_response.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,457 - INFO - Indexing document: types.create_embedding_response.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,458 - INFO - Indexing document: types.create_embedding_response.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,460 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,461 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,463 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,466 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,468 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,470 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,471 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,473 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,474 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,476 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,479 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,481 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,483 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,485 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,486 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,488 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,490 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,491 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,493 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,495 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,497 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,498 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,500 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,502 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,504 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,506 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,507 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,510 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,511 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,514 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,516 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,518 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,520 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,522 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,523 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,525 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,526 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,528 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,530 - INFO - Indexing document: types.moderation.Categories - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,532 - INFO - Indexing document: types.moderation.Categories.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,533 - INFO - Indexing document: types.moderation.Categories.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,535 - INFO - Indexing document: types.moderation.Categories.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,536 - INFO - Indexing document: types.moderation.Categories.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,538 - INFO - Indexing document: types.moderation.Categories.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,539 - INFO - Indexing document: types.moderation.Categories.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,541 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,545 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,548 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,550 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,552 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,553 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,555 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,558 - INFO - Indexing document: types.moderation.CategoryScores - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,560 - INFO - Indexing document: types.moderation.CategoryScores.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,562 - INFO - Indexing document: types.moderation.CategoryScores.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,564 - INFO - Indexing document: types.moderation.CategoryScores.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,566 - INFO - Indexing document: types.moderation.CategoryScores.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,567 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,569 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,571 - INFO - Indexing document: types.moderation.FieldInfo - Usage docs: https://docs.pydantic.dev/2.10/concepts/fields

Create a field for objects that can be configured.

Used to provide extra information about a field, either for the model schema or complex ...
2024-11-27 14:24:24,573 - INFO - Indexing document: types.moderation_image_url_input_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:24,575 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:24:24,578 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:24:24,580 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:24:24,582 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:24:24,583 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:24:24,586 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:24:24,588 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:24:24,589 - INFO - Indexing document: types.shared_params.response_format_json_schema.JSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:24:52,266 - INFO - Indexed data saved successfully.
2024-11-27 14:24:52,380 - INFO - Configuration loaded successfully.
2024-11-27 14:24:56,369 - INFO - Starting search for query: example search query
2024-11-27 14:25:00,774 - INFO - Whoosh search results: <Top 0 Results for And([Term('text', 'example'), Term('text', 'search'), Term('text', 'query')]) runtime=0.0029337000160012394>
2024-11-27 14:25:17,134 - INFO - Final combined search results: []
2024-11-27 14:37:58,103 - INFO - Configuration loaded successfully.
2024-11-27 14:37:58,108 - INFO - Using device: cpu
2024-11-27 14:37:58,111 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 14:37:58,117 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 14:37:58,331 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 14:37:58,373 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 14:37:58,417 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 14:37:58,620 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 14:37:58,662 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 14:37:58,709 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 14:37:58,747 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 14:37:59,047 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 14:37:59,175 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 14:37:59,221 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 14:38:05,353 - INFO - Indexed data loaded successfully.
2024-11-27 14:38:07,249 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 14:38:07,250 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 14:38:08,030 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_18.json
2024-11-27 14:38:08,047 - INFO - Indexing document: APIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,050 - INFO - Indexing document: APIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:38:08,051 - INFO - Indexing document: APIResponse.elapsed - The time taken for the complete request/response cycle to complete....
2024-11-27 14:38:08,052 - INFO - Indexing document: APIResponse.http_request - Returns the httpx Request instance associated with the current response....
2024-11-27 14:38:08,053 - INFO - Indexing document: APIResponse.is_closed - Whether or not the response body has been closed.

If this is False then there is response data that has not been read yet.
You must either fully consume the response body or call `.close()`
before di...
2024-11-27 14:38:08,055 - INFO - Indexing document: APIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 14:38:08,056 - INFO - Indexing document: APIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 14:38:08,056 - INFO - Indexing document: APIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 14:38:08,057 - INFO - Indexing document: APIResponse.json - Read and decode the JSON response content....
2024-11-27 14:38:08,058 - INFO - Indexing document: APIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 14:38:08,060 - INFO - Indexing document: APIResponse.read - Read and return the binary response content....
2024-11-27 14:38:08,060 - INFO - Indexing document: APIResponse.text - Read and decode the response content into a string....
2024-11-27 14:38:08,061 - INFO - Indexing document: APIResponse.url - Returns the URL for which the request was made....
2024-11-27 14:38:08,062 - INFO - Indexing document: AssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 14:38:08,063 - INFO - Indexing document: AssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 14:38:08,064 - INFO - Indexing document: AssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 14:38:08,065 - INFO - Indexing document: AssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 14:38:08,065 - INFO - Indexing document: AssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 14:38:08,067 - INFO - Indexing document: AssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 14:38:08,067 - INFO - Indexing document: AssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 14:38:08,068 - INFO - Indexing document: AssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 14:38:08,069 - INFO - Indexing document: AssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 14:38:08,071 - INFO - Indexing document: AssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 14:38:08,074 - INFO - Indexing document: AssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 14:38:08,075 - INFO - Indexing document: AssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 14:38:08,076 - INFO - Indexing document: AssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 14:38:08,079 - INFO - Indexing document: AssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 14:38:08,080 - INFO - Indexing document: AssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 14:38:08,081 - INFO - Indexing document: AssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 14:38:08,084 - INFO - Indexing document: AssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 14:38:08,085 - INFO - Indexing document: AssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 14:38:08,086 - INFO - Indexing document: AssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 14:38:08,087 - INFO - Indexing document: AssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:38:08,087 - INFO - Indexing document: AssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:38:08,088 - INFO - Indexing document: AssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 14:38:08,089 - INFO - Indexing document: AsyncAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,090 - INFO - Indexing document: AsyncAPIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:38:08,091 - INFO - Indexing document: AsyncAPIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 14:38:08,092 - INFO - Indexing document: AsyncAPIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 14:38:08,093 - INFO - Indexing document: AsyncAPIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 14:38:08,094 - INFO - Indexing document: AsyncAPIResponse.json - Read and decode the JSON response content....
2024-11-27 14:38:08,094 - INFO - Indexing document: AsyncAPIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 14:38:08,096 - INFO - Indexing document: AsyncAPIResponse.read - Read and return the binary response content....
2024-11-27 14:38:08,096 - INFO - Indexing document: AsyncAPIResponse.text - Read and decode the response content into a string....
2024-11-27 14:38:08,097 - INFO - Indexing document: AsyncAssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 14:38:08,098 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 14:38:08,098 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 14:38:08,099 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 14:38:08,100 - INFO - Indexing document: AsyncAssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 14:38:08,101 - INFO - Indexing document: AsyncAssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 14:38:08,102 - INFO - Indexing document: AsyncAssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 14:38:08,103 - INFO - Indexing document: AsyncAssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 14:38:08,104 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 14:38:08,105 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 14:38:08,106 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 14:38:08,107 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 14:38:08,108 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 14:38:08,109 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 14:38:08,110 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 14:38:08,111 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 14:38:08,112 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 14:38:08,113 - INFO - Indexing document: AsyncAssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 14:38:08,114 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 14:38:08,114 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:38:08,115 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:38:08,116 - INFO - Indexing document: AsyncAssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 14:38:08,116 - INFO - Indexing document: AsyncAzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,118 - INFO - Indexing document: AsyncAzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 14:38:08,119 - INFO - Indexing document: AsyncClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,121 - INFO - Indexing document: AsyncStream - Provides the core interface to iterate over an asynchronous stream response....
2024-11-27 14:38:08,122 - INFO - Indexing document: AsyncStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:38:08,123 - INFO - Indexing document: AzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,124 - INFO - Indexing document: AzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 14:38:08,125 - INFO - Indexing document: BaseModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,127 - INFO - Indexing document: BaseModel.model_copy - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#model_copy

Returns a copy of the model.

Args:
    update: Values to change/add in the new model. Note: the data is not validated
  ...
2024-11-27 14:38:08,129 - INFO - Indexing document: BaseModel.model_dump - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump

Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

Args:
...
2024-11-27 14:38:08,131 - INFO - Indexing document: BaseModel.model_dump_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump_json

Generates a JSON representation of the model using Pydantic's `to_json` method.

Args:
    indent: Indentation ...
2024-11-27 14:38:08,132 - INFO - Indexing document: BaseModel.model_extra - Get extra fields set during validation.

Returns:
    A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`....
2024-11-27 14:38:08,134 - INFO - Indexing document: BaseModel.model_fields_set - Returns the set of fields that have been explicitly set on this model instance.

Returns:
    A set of strings representing the fields that have been set,
        i.e. that were not filled from defaul...
2024-11-27 14:38:08,137 - INFO - Indexing document: BaseModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,139 - INFO - Indexing document: BaseModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,141 - INFO - Indexing document: BaseModel.model_post_init - Override this method to perform additional initialization after `__init__` and `model_construct`.
This is useful if you want to do some validation that requires the entire model to be initialized....
2024-11-27 14:38:08,142 - INFO - Indexing document: BaseModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,144 - INFO - Indexing document: BaseModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,145 - INFO - Indexing document: BaseModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,147 - INFO - Indexing document: BaseModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,150 - INFO - Indexing document: BaseModel.to_dict - Recursively generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

By default, fields that were not set by the API will not be included,
and keys...
2024-11-27 14:38:08,151 - INFO - Indexing document: BaseModel.to_json - Generates a JSON string representing this model as it would be received from or sent to the API (but with indentation).

By default, fields that were not set by the API will not be included,
and keys ...
2024-11-27 14:38:08,153 - INFO - Indexing document: Client - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,154 - INFO - Indexing document: DefaultAsyncHttpxClient - An asynchronous HTTP client, with connection pooling, HTTP/2, redirects,
cookie persistence, etc.

It can be shared between tasks.

Usage:

```python
>>> async with httpx.AsyncClient() as client:
>>> ...
2024-11-27 14:38:08,157 - INFO - Indexing document: DefaultAsyncHttpxClient.aclose - Close transport and proxies....
2024-11-27 14:38:08,158 - INFO - Indexing document: DefaultAsyncHttpxClient.auth - Authentication class used when none is passed at the request-level.

See also [Authentication][0].

[0]: /quickstart/#authentication...
2024-11-27 14:38:08,159 - INFO - Indexing document: DefaultAsyncHttpxClient.base_url - Base URL to use when sending requests with relative URLs....
2024-11-27 14:38:08,160 - INFO - Indexing document: DefaultAsyncHttpxClient.build_request - Build and return a request instance.

* The `params`, `headers` and `cookies` arguments
are merged with any values set on the client.
* The `url` argument is merged with any `base_url` set on the clie...
2024-11-27 14:38:08,161 - INFO - Indexing document: DefaultAsyncHttpxClient.cookies - Cookie values to include when sending requests....
2024-11-27 14:38:08,162 - INFO - Indexing document: DefaultAsyncHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,162 - INFO - Indexing document: DefaultAsyncHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,163 - INFO - Indexing document: DefaultAsyncHttpxClient.headers - HTTP headers to include when sending requests....
2024-11-27 14:38:08,164 - INFO - Indexing document: DefaultAsyncHttpxClient.is_closed - Check if the client being closed...
2024-11-27 14:38:08,166 - INFO - Indexing document: DefaultAsyncHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,167 - INFO - Indexing document: DefaultAsyncHttpxClient.params - Query parameters to include in the URL when sending requests....
2024-11-27 14:38:08,168 - INFO - Indexing document: DefaultAsyncHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,170 - INFO - Indexing document: DefaultAsyncHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,171 - INFO - Indexing document: DefaultAsyncHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,172 - INFO - Indexing document: DefaultAsyncHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = await client.send(request, ...)
```

See `AsyncClient.build_request()`, `AsyncClient.send()`
and [Me...
2024-11-27 14:38:08,175 - INFO - Indexing document: DefaultAsyncHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `AsyncClient.build_request()`
so that any client-level configuration is merged into the request,
but pa...
2024-11-27 14:38:08,176 - INFO - Indexing document: DefaultAsyncHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 14:38:08,178 - INFO - Indexing document: DefaultHttpxClient - An HTTP client, with connection pooling, HTTP/2, redirects, cookie persistence, etc.

It can be shared between threads.

Usage:

```python
>>> client = httpx.Client()
>>> response = client.get('https:...
2024-11-27 14:38:08,181 - INFO - Indexing document: DefaultHttpxClient.close - Close transport and proxies....
2024-11-27 14:38:08,181 - INFO - Indexing document: DefaultHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,183 - INFO - Indexing document: DefaultHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,184 - INFO - Indexing document: DefaultHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,185 - INFO - Indexing document: DefaultHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,186 - INFO - Indexing document: DefaultHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,187 - INFO - Indexing document: DefaultHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:38:08,188 - INFO - Indexing document: DefaultHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = client.send(request, ...)
```

See `Client.build_request()`, `Client.send()` and
[Merging of configu...
2024-11-27 14:38:08,190 - INFO - Indexing document: DefaultHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `Client.build_request()`
so that any client-level configuration is merged into the request,
but passing...
2024-11-27 14:38:08,192 - INFO - Indexing document: DefaultHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 14:38:08,194 - INFO - Indexing document: NotGiven - A sentinel singleton class used to distinguish omitted keyword arguments
from those passed in with the value None (which may have different behavior).

For example:

```py
def get(timeout: Union[int, ...
2024-11-27 14:38:08,196 - INFO - Indexing document: RequestOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,197 - INFO - Indexing document: Stream - Provides the core interface to iterate over a synchronous stream response....
2024-11-27 14:38:08,198 - INFO - Indexing document: Stream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:38:08,199 - INFO - Indexing document: Timeout - Timeout configuration.

**Usage**:

Timeout(None)               # No timeouts.
Timeout(5.0)                # 5s timeout on all operations.
Timeout(None, connect=5.0)  # 5s timeout on connect, no other...
2024-11-27 14:38:08,201 - INFO - Indexing document: Transport.handle_request - Send a single HTTP request and return a response.

Developers shouldn't typically ever need to call into this API directly,
since the Client class provides all the higher level user-facing API
nicetie...
2024-11-27 14:38:08,203 - INFO - Indexing document: lib.azure.Any - Special type indicating an unconstrained type.

- Any is compatible with every type.
- Any assumed to have all methods.
- All values assumed to be instances of Any.

Note that all the above statements...
2024-11-27 14:38:08,205 - INFO - Indexing document: lib.azure.BaseAzureClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,206 - INFO - Indexing document: lib.azure.BaseClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,208 - INFO - Indexing document: lib.azure.FinalRequestOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,210 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,211 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,214 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,215 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,216 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,218 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,220 - INFO - Indexing document: lib.azure.Omit - In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 14:38:08,221 - INFO - Indexing document: lib.azure.TypeVar - Type variable.

The preferred way to construct a type variable is via the dedicated
syntax for generic functions, classes, and type aliases::

    class Sequence[T]:  # T is a TypeVar
        ...

Thi...
2024-11-27 14:38:08,224 - INFO - Indexing document: lib.azure.cast - Cast a value to a type.

This returns the value unchanged.  To the type checker this
signals that the return value has the designated type, but at
runtime we intentionally don't check anything (we wan...
2024-11-27 14:38:08,225 - INFO - Indexing document: lib.azure.overload - Decorator for overloaded functions/methods.

In a stub file, place two or more stub definitions for the same
function in a row, each decorated with @overload.

For example::

    @overload
    def utf...
2024-11-27 14:38:08,227 - INFO - Indexing document: lib.azure.override - Indicate that a method is intended to override a method in a base class.

Usage::

    class Base:
        def method(self) -> None: ...
            pass

    class Child(Base):
        @override
    ...
2024-11-27 14:38:08,232 - INFO - Indexing document: lib.streaming.AssistantStreamManager - Wrapper over AssistantStreamEventHandler that is returned by `.stream()`
so that a context manager can be used.

```py
with client.threads.create_and_run_stream(...) as stream:
    for event in stream...
2024-11-27 14:38:08,234 - INFO - Indexing document: lib.streaming.AsyncAssistantStreamManager - Wrapper over AsyncAssistantStreamEventHandler that is returned by `.stream()`
so that an async context manager can be used without `await`ing the
original client call.

```py
async with client.threads...
2024-11-27 14:38:08,236 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 14:38:08,238 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:38:08,239 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 14:38:08,240 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 14:38:08,241 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStreamManager - Context manager over a `AsyncChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```p...
2024-11-27 14:38:08,242 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 14:38:08,244 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:38:08,245 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 14:38:08,247 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 14:38:08,248 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStreamManager - Context manager over a `ChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```py
wit...
2024-11-27 14:38:08,250 - INFO - Indexing document: lib.streaming.chat.ChunkEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,251 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,253 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,254 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,256 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,257 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,261 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,263 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent - This event is yielded for every chunk with `choice.delta.content` data....
2024-11-27 14:38:08,264 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,266 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,268 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,269 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,271 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,274 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,276 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,278 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,280 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,281 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,283 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,285 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,286 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,288 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,291 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,294 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,296 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,298 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,300 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,302 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,304 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,306 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,309 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,312 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,314 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,316 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,319 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,321 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,323 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,326 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,328 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,331 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,333 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,335 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,337 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,339 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,341 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,342 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,344 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,346 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,347 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,349 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,350 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,353 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,356 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,358 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,361 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,363 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,365 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,366 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,368 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,370 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,371 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,373 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,375 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,377 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,378 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,380 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,381 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,383 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,386 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,389 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,391 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,393 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,395 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,396 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,398 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,400 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,402 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,403 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,405 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,406 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,408 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,410 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,412 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,413 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,417 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,420 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,422 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,424 - INFO - Indexing document: pagination.AsyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:38:08,426 - INFO - Indexing document: pagination.AsyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,428 - INFO - Indexing document: pagination.AsyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,431 - INFO - Indexing document: pagination.AsyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:38:08,432 - INFO - Indexing document: pagination.AsyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,434 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,436 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,437 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,439 - INFO - Indexing document: pagination.AsyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 14:38:08,440 - INFO - Indexing document: pagination.AsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,441 - INFO - Indexing document: pagination.AsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,443 - INFO - Indexing document: pagination.AsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:38:08,444 - INFO - Indexing document: pagination.AsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,445 - INFO - Indexing document: pagination.AsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,449 - INFO - Indexing document: pagination.AsyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,451 - INFO - Indexing document: pagination.AsyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,453 - INFO - Indexing document: pagination.AsyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 14:38:08,454 - INFO - Indexing document: pagination.BaseAsyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:38:08,456 - INFO - Indexing document: pagination.BaseAsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,457 - INFO - Indexing document: pagination.BaseAsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,459 - INFO - Indexing document: pagination.BaseAsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:38:08,460 - INFO - Indexing document: pagination.BaseAsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,461 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,463 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,465 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,466 - INFO - Indexing document: pagination.BasePage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:38:08,468 - INFO - Indexing document: pagination.BasePage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,470 - INFO - Indexing document: pagination.BasePage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,471 - INFO - Indexing document: pagination.BasePage.model_post_init - This function is meant to behave like a BaseModel method to initialise private attributes.

It takes context as an argument since that's what pydantic-core passes when calling it.

Args:
    self: The...
2024-11-27 14:38:08,473 - INFO - Indexing document: pagination.BasePage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,474 - INFO - Indexing document: pagination.BasePage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,476 - INFO - Indexing document: pagination.BasePage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,480 - INFO - Indexing document: pagination.BasePage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,482 - INFO - Indexing document: pagination.BaseSyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:38:08,484 - INFO - Indexing document: pagination.BaseSyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,486 - INFO - Indexing document: pagination.BaseSyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,488 - INFO - Indexing document: pagination.BaseSyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:38:08,489 - INFO - Indexing document: pagination.BaseSyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,491 - INFO - Indexing document: pagination.BaseSyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,493 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,495 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,496 - INFO - Indexing document: pagination.CursorPageItem - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 14:38:08,498 - INFO - Indexing document: pagination.Generic - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,499 - INFO - Indexing document: pagination.PageInfo - Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set....
2024-11-27 14:38:08,500 - INFO - Indexing document: pagination.Protocol - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 14:38:08,502 - INFO - Indexing document: pagination.SyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:38:08,504 - INFO - Indexing document: pagination.SyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,506 - INFO - Indexing document: pagination.SyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,508 - INFO - Indexing document: pagination.SyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:38:08,509 - INFO - Indexing document: pagination.SyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,511 - INFO - Indexing document: pagination.SyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,519 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,526 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,529 - INFO - Indexing document: pagination.SyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 14:38:08,531 - INFO - Indexing document: pagination.SyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,536 - INFO - Indexing document: pagination.SyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,543 - INFO - Indexing document: pagination.SyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:38:08,545 - INFO - Indexing document: pagination.SyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,548 - INFO - Indexing document: pagination.SyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,554 - INFO - Indexing document: pagination.SyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,560 - INFO - Indexing document: pagination.SyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,563 - INFO - Indexing document: pagination.SyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 14:38:08,565 - INFO - Indexing document: pagination.runtime_checkable - Mark a protocol class as a runtime protocol.

Such protocol can be used with isinstance() and issubclass().
Raise TypeError if applied to a non-protocol class.
This allows a simple-minded structural c...
2024-11-27 14:38:08,568 - INFO - Indexing document: resources.AsyncBatches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 14:38:08,571 - INFO - Indexing document: resources.AsyncBatches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 14:38:08,575 - INFO - Indexing document: resources.AsyncBatches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 14:38:08,579 - INFO - Indexing document: resources.AsyncBatches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:38:08,584 - INFO - Indexing document: resources.AsyncEmbeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 14:38:08,588 - INFO - Indexing document: resources.AsyncFiles.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:38:08,591 - INFO - Indexing document: resources.AsyncFiles.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 14:38:08,594 - INFO - Indexing document: resources.AsyncFiles.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 14:38:08,597 - INFO - Indexing document: resources.AsyncFiles.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 14:38:08,599 - INFO - Indexing document: resources.AsyncFiles.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 14:38:08,601 - INFO - Indexing document: resources.AsyncFiles.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:38:08,604 - INFO - Indexing document: resources.AsyncFiles.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 14:38:08,605 - INFO - Indexing document: resources.AsyncImages.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 14:38:08,607 - INFO - Indexing document: resources.AsyncImages.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 14:38:08,611 - INFO - Indexing document: resources.AsyncImages.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 14:38:08,615 - INFO - Indexing document: resources.AsyncModels.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 14:38:08,618 - INFO - Indexing document: resources.AsyncModels.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 14:38:08,619 - INFO - Indexing document: resources.AsyncModels.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 14:38:08,622 - INFO - Indexing document: resources.AsyncModerations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 14:38:08,625 - INFO - Indexing document: resources.AsyncUploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 14:38:08,629 - INFO - Indexing document: resources.AsyncUploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 14:38:08,631 - INFO - Indexing document: resources.AsyncUploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 14:38:08,633 - INFO - Indexing document: resources.AsyncUploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 14:38:08,636 - INFO - Indexing document: resources.Batches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 14:38:08,638 - INFO - Indexing document: resources.Batches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 14:38:08,640 - INFO - Indexing document: resources.Batches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 14:38:08,642 - INFO - Indexing document: resources.Batches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:38:08,647 - INFO - Indexing document: resources.Embeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 14:38:08,649 - INFO - Indexing document: resources.Files.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:38:08,651 - INFO - Indexing document: resources.Files.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 14:38:08,653 - INFO - Indexing document: resources.Files.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 14:38:08,657 - INFO - Indexing document: resources.Files.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 14:38:08,659 - INFO - Indexing document: resources.Files.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 14:38:08,661 - INFO - Indexing document: resources.Files.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:38:08,663 - INFO - Indexing document: resources.Files.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 14:38:08,664 - INFO - Indexing document: resources.Images.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 14:38:08,666 - INFO - Indexing document: resources.Images.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 14:38:08,668 - INFO - Indexing document: resources.Images.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 14:38:08,671 - INFO - Indexing document: resources.Models.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 14:38:08,673 - INFO - Indexing document: resources.Models.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 14:38:08,674 - INFO - Indexing document: resources.Models.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 14:38:08,676 - INFO - Indexing document: resources.Moderations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 14:38:08,678 - INFO - Indexing document: resources.Uploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 14:38:08,680 - INFO - Indexing document: resources.Uploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 14:38:08,682 - INFO - Indexing document: resources.Uploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 14:38:08,684 - INFO - Indexing document: resources.Uploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 14:38:08,686 - INFO - Indexing document: resources.audio.AsyncSpeech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 14:38:08,688 - INFO - Indexing document: resources.audio.AsyncTranscriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 14:38:08,690 - INFO - Indexing document: resources.audio.AsyncTranslations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 14:38:08,692 - INFO - Indexing document: resources.audio.Speech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 14:38:08,694 - INFO - Indexing document: resources.audio.Transcriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 14:38:08,696 - INFO - Indexing document: resources.audio.Translations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 14:38:08,698 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,699 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 14:38:08,701 - INFO - Indexing document: resources.audio.speech.Body - The base class of the class hierarchy.

When called, it accepts no arguments and returns a new featureless
instance that has no instance attributes and cannot be given any....
2024-11-27 14:38:08,702 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,704 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 14:38:08,706 - INFO - Indexing document: resources.audio.speech.async_maybe_transform - Wrapper over `async_transform()` that allows `None` to be passed.

See `async_transform()` for more details....
2024-11-27 14:38:08,707 - INFO - Indexing document: resources.audio.speech.async_to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 14:38:08,708 - INFO - Indexing document: resources.audio.speech.make_request_options - Create a dict of type RequestOptions without keys of NotGiven values....
2024-11-27 14:38:08,709 - INFO - Indexing document: resources.audio.speech.maybe_transform - Wrapper over `transform()` that allows `None` to be passed.

See `transform()` for more details....
2024-11-27 14:38:08,710 - INFO - Indexing document: resources.audio.speech.speech_create_params.SpeechCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,711 - INFO - Indexing document: resources.audio.speech.speech_create_params.TypedDict - A simple typed namespace. At runtime it is equivalent to a plain dict.

TypedDict creates a dictionary type such that a type checker will expect all
instances to have a certain set of keys, where each...
2024-11-27 14:38:08,713 - INFO - Indexing document: resources.audio.speech.to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 14:38:08,714 - INFO - Indexing document: resources.audio.transcriptions.Transcription - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,716 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,718 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,720 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,721 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,724 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,725 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,728 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,731 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,733 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,735 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,736 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,739 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,741 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,742 - INFO - Indexing document: resources.audio.transcriptions.assert_never - Statically assert that a line of code is unreachable.

Example::

    def int_or_str(arg: int | str) -> None:
        match arg:
            case int():
                print("It's an int")
          ...
2024-11-27 14:38:08,745 - INFO - Indexing document: resources.audio.transcriptions.async_to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 14:38:08,745 - INFO - Indexing document: resources.audio.transcriptions.deepcopy_minimal - Minimal reimplementation of copy.deepcopy() that will only copy certain object types:

- mappings, e.g. `dict`
- list

This is done for performance reasons....
2024-11-27 14:38:08,747 - INFO - Indexing document: resources.audio.transcriptions.extract_files - Recursively extract files from the given dictionary based on specified paths.

A path may look like this ['foo', 'files', '<array>', 'data'].

Note: this mutates the given dictionary....
2024-11-27 14:38:08,748 - INFO - Indexing document: resources.audio.transcriptions.to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 14:38:08,749 - INFO - Indexing document: resources.audio.transcriptions.transcription_create_params.TranscriptionCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,751 - INFO - Indexing document: resources.audio.translations.Translation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,753 - INFO - Indexing document: resources.audio.translations.Translation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,755 - INFO - Indexing document: resources.audio.translations.Translation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,756 - INFO - Indexing document: resources.audio.translations.Translation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,758 - INFO - Indexing document: resources.audio.translations.Translation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,760 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,763 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,766 - INFO - Indexing document: resources.audio.translations.TranslationVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,768 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,770 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,773 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,775 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,776 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,778 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,780 - INFO - Indexing document: resources.audio.translations.translation_create_params.TranslationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,782 - INFO - Indexing document: resources.batches.AsyncPaginator - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:38:08,783 - INFO - Indexing document: resources.batches.Batch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,785 - INFO - Indexing document: resources.batches.Batch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,787 - INFO - Indexing document: resources.batches.Batch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,789 - INFO - Indexing document: resources.batches.Batch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,791 - INFO - Indexing document: resources.batches.Batch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,794 - INFO - Indexing document: resources.batches.Batch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,796 - INFO - Indexing document: resources.batches.Batch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,798 - INFO - Indexing document: resources.batches.batch_create_params.BatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,799 - INFO - Indexing document: resources.batches.batch_list_params.BatchListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,801 - INFO - Indexing document: resources.beta.Assistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 14:38:08,804 - INFO - Indexing document: resources.beta.Assistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 14:38:08,806 - INFO - Indexing document: resources.beta.Assistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 14:38:08,808 - INFO - Indexing document: resources.beta.Assistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 14:38:08,810 - INFO - Indexing document: resources.beta.AsyncAssistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 14:38:08,812 - INFO - Indexing document: resources.beta.AsyncAssistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 14:38:08,814 - INFO - Indexing document: resources.beta.AsyncAssistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 14:38:08,816 - INFO - Indexing document: resources.beta.AsyncAssistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 14:38:08,818 - INFO - Indexing document: resources.beta.AsyncThreads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 14:38:08,820 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:38:08,822 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 14:38:08,823 - INFO - Indexing document: resources.beta.AsyncThreads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:38:08,826 - INFO - Indexing document: resources.beta.AsyncThreads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:38:08,829 - INFO - Indexing document: resources.beta.AsyncVectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 14:38:08,831 - INFO - Indexing document: resources.beta.AsyncVectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 14:38:08,834 - INFO - Indexing document: resources.beta.AsyncVectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 14:38:08,836 - INFO - Indexing document: resources.beta.AsyncVectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 14:38:08,838 - INFO - Indexing document: resources.beta.Threads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 14:38:08,843 - INFO - Indexing document: resources.beta.Threads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:38:08,845 - INFO - Indexing document: resources.beta.Threads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 14:38:08,847 - INFO - Indexing document: resources.beta.Threads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:38:08,850 - INFO - Indexing document: resources.beta.Threads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:38:08,854 - INFO - Indexing document: resources.beta.VectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 14:38:08,858 - INFO - Indexing document: resources.beta.VectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 14:38:08,861 - INFO - Indexing document: resources.beta.VectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 14:38:08,865 - INFO - Indexing document: resources.beta.VectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 14:38:08,869 - INFO - Indexing document: resources.beta.assistants.Assistant - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,871 - INFO - Indexing document: resources.beta.assistants.Assistant.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,873 - INFO - Indexing document: resources.beta.assistants.Assistant.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,875 - INFO - Indexing document: resources.beta.assistants.Assistant.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,876 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,878 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,880 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,882 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,885 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,886 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,888 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,889 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,892 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,894 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,895 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.AssistantCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,897 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,899 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,900 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,902 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,903 - INFO - Indexing document: resources.beta.assistants.assistant_list_params.AssistantListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,905 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.AssistantUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,907 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,908 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,910 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,911 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 14:38:08,912 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 14:38:08,914 - INFO - Indexing document: resources.beta.chat.Completions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 14:38:08,915 - INFO - Indexing document: resources.beta.chat.Completions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 14:38:08,916 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,919 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,921 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,922 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,924 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,926 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,928 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,929 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,931 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,933 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,934 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,936 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,937 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,939 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,941 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,943 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionPredictionContentParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,945 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionStreamOptionsParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,947 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,948 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:08,951 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:08,952 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:08,954 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:08,956 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:08,958 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:08,959 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:08,961 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ChatCompletionFunctionCallOptionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,963 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,964 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,966 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,968 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,969 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONObject - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,971 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,973 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatText - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:08,975 - INFO - Indexing document: resources.beta.chat.completions.partial - partial(func, *args, **keywords) - new function with partial application
of the given arguments and keywords....
2024-11-27 14:38:08,976 - INFO - Indexing document: resources.beta.threads.AsyncMessages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 14:38:08,979 - INFO - Indexing document: resources.beta.threads.AsyncMessages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:38:08,983 - INFO - Indexing document: resources.beta.threads.AsyncMessages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 14:38:08,984 - INFO - Indexing document: resources.beta.threads.AsyncMessages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:38:08,987 - INFO - Indexing document: resources.beta.threads.AsyncRuns.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:38:08,990 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:38:08,991 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_stream - Create a Run stream...
2024-11-27 14:38:08,992 - INFO - Indexing document: resources.beta.threads.AsyncRuns.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 14:38:08,993 - INFO - Indexing document: resources.beta.threads.AsyncRuns.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:38:08,994 - INFO - Indexing document: resources.beta.threads.AsyncRuns.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:38:08,997 - INFO - Indexing document: resources.beta.threads.AsyncRuns.stream - Create a Run stream...
2024-11-27 14:38:08,997 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:38:08,998 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 14:38:08,999 - INFO - Indexing document: resources.beta.threads.Messages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 14:38:09,001 - INFO - Indexing document: resources.beta.threads.Messages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:38:09,003 - INFO - Indexing document: resources.beta.threads.Messages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 14:38:09,005 - INFO - Indexing document: resources.beta.threads.Messages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:38:09,007 - INFO - Indexing document: resources.beta.threads.Runs.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:38:09,009 - INFO - Indexing document: resources.beta.threads.Runs.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:38:09,011 - INFO - Indexing document: resources.beta.threads.Runs.create_and_stream - Create a Run stream...
2024-11-27 14:38:09,012 - INFO - Indexing document: resources.beta.threads.Runs.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 14:38:09,014 - INFO - Indexing document: resources.beta.threads.Runs.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:38:09,015 - INFO - Indexing document: resources.beta.threads.Runs.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:38:09,017 - INFO - Indexing document: resources.beta.threads.Runs.stream - Create a Run stream...
2024-11-27 14:38:09,018 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:38:09,019 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 14:38:09,021 - INFO - Indexing document: resources.beta.threads.messages.Message - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,024 - INFO - Indexing document: resources.beta.threads.messages.Message.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,026 - INFO - Indexing document: resources.beta.threads.messages.Message.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,028 - INFO - Indexing document: resources.beta.threads.messages.Message.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,029 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,031 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,033 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,035 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,037 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,040 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,043 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,045 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,049 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,052 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,054 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.Attachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,057 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.AttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,059 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.CodeInterpreterToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,061 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.MessageCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,063 - INFO - Indexing document: resources.beta.threads.messages.message_list_params.MessageListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,066 - INFO - Indexing document: resources.beta.threads.messages.message_update_params.MessageUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,068 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 14:38:09,070 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 14:38:09,073 - INFO - Indexing document: resources.beta.threads.runs.Steps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 14:38:09,075 - INFO - Indexing document: resources.beta.threads.runs.Steps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 14:38:09,077 - INFO - Indexing document: resources.beta.threads.runs.runs.Run - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,080 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,082 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,084 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,087 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,089 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,091 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,092 - INFO - Indexing document: resources.beta.threads.runs.runs.required_args - Decorator to enforce a given set of arguments or variants of arguments are passed to the decorated function.

Useful for enforcing runtime validation of overloaded functions.

Example usage:
```py
@ov...
2024-11-27 14:38:09,094 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,097 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,098 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,100 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,102 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,105 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,107 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,109 - INFO - Indexing document: resources.beta.threads.runs.runs.run_list_params.RunListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,112 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,114 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,116 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,119 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.ToolOutput - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,120 - INFO - Indexing document: resources.beta.threads.runs.runs.run_update_params.RunUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,123 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,126 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,129 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,130 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,132 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,134 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,137 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,140 - INFO - Indexing document: resources.beta.threads.runs.steps.step_list_params.StepListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,142 - INFO - Indexing document: resources.beta.threads.runs.steps.step_retrieve_params.StepRetrieveParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,145 - INFO - Indexing document: resources.beta.threads.threads.Thread - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,148 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,150 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,152 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,153 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,155 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,157 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,159 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,161 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,163 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,166 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,167 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,170 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,172 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,173 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FileSearchToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,175 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FunctionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,177 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.Thread - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,179 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,181 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,183 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,185 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,186 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,188 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,191 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,193 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,194 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,197 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,199 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,201 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,204 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,206 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,208 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.Message - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,210 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,212 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,214 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ThreadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,216 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,218 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,220 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,222 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,224 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ThreadUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,227 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,229 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,231 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,234 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 14:38:09,236 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 14:38:09,238 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 14:38:09,239 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 14:38:09,241 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 14:38:09,242 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:38:09,245 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 14:38:09,246 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 14:38:09,248 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 14:38:09,249 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 14:38:09,251 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 14:38:09,253 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 14:38:09,255 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 14:38:09,258 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 14:38:09,260 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 14:38:09,262 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 14:38:09,265 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 14:38:09,268 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 14:38:09,269 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 14:38:09,271 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 14:38:09,273 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:38:09,275 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 14:38:09,277 - INFO - Indexing document: resources.beta.vector_stores.Files.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 14:38:09,279 - INFO - Indexing document: resources.beta.vector_stores.Files.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 14:38:09,280 - INFO - Indexing document: resources.beta.vector_stores.Files.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 14:38:09,281 - INFO - Indexing document: resources.beta.vector_stores.Files.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 14:38:09,283 - INFO - Indexing document: resources.beta.vector_stores.Files.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 14:38:09,284 - INFO - Indexing document: resources.beta.vector_stores.Files.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 14:38:09,287 - INFO - Indexing document: resources.beta.vector_stores.Files.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 14:38:09,289 - INFO - Indexing document: resources.beta.vector_stores.Files.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 14:38:09,290 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,292 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,295 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,296 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,298 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,302 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,304 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,306 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future - Represents the result of an asynchronous computation....
2024-11-27 14:38:09,306 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.add_done_callback - Attaches a callable that will be called when the future finishes.

Args:
    fn: A callable that will be called with this future as its only
        argument when the future completes or is cancelled....
2024-11-27 14:38:09,308 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancel - Cancel the future if possible.

Returns True if the future was cancelled, False otherwise. A future
cannot be cancelled if it is running or has already completed....
2024-11-27 14:38:09,309 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancelled - Return True if the future was cancelled....
2024-11-27 14:38:09,310 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.done - Return True if the future was cancelled or finished executing....
2024-11-27 14:38:09,311 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.exception - Return the exception raised by the call that the future represents.

Args:
    timeout: The number of seconds to wait for the exception if the
        future isn't done. If None, then there is no limi...
2024-11-27 14:38:09,312 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.result - Return the result of the call that the future represents.

Args:
    timeout: The number of seconds to wait for the result if the future
        isn't done. If None, then there is no limit on the wait...
2024-11-27 14:38:09,314 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.running - Return True if the future is currently executing....
2024-11-27 14:38:09,314 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_exception - Sets the result of the future as being the given exception.

Should only be used by Executor implementations and unit tests....
2024-11-27 14:38:09,316 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_result - Sets the return value of work associated with the future.

Should only be used by Executor implementations and unit tests....
2024-11-27 14:38:09,317 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_running_or_notify_cancel - Mark the future as running or process any cancel notifications.

Should only be used by Executor implementations and unit tests.

If the future has been cancelled (cancel() was called and returned
Tru...
2024-11-27 14:38:09,319 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor - This is an abstract base class for concrete asynchronous executors....
2024-11-27 14:38:09,319 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.map - Returns an iterator equivalent to map(fn, iter).

Args:
    fn: A callable that will take as many arguments as there are
        passed iterables.
    timeout: The maximum number of seconds to wait. I...
2024-11-27 14:38:09,321 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.shutdown - Clean-up the resources associated with the Executor.

It is safe to call this method several times. Otherwise, no other
methods can be called after this one.

Args:
    wait: If True then shutdown wil...
2024-11-27 14:38:09,324 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.submit - Submits a callable to be executed with the given arguments.

Schedules the callable to be executed as fn(*args, **kwargs) and returns
a Future instance representing the execution of the callable.

Ret...
2024-11-27 14:38:09,325 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,328 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,331 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,334 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,335 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,337 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,339 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,342 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,345 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,346 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,348 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,349 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,352 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,354 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,356 - INFO - Indexing document: resources.beta.vector_stores.file_batches.as_completed - An iterator over the given futures that yields each as it completes.

Args:
    fs: The sequence of Futures (possibly created by different Executors) to
        iterate over.
    timeout: The maximum ...
2024-11-27 14:38:09,358 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_create_params.FileBatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,360 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_list_files_params.FileBatchListFilesParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,365 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,367 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,369 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,371 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,372 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,375 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,377 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,379 - INFO - Indexing document: resources.beta.vector_stores.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,380 - INFO - Indexing document: resources.beta.vector_stores.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,383 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,385 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,387 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,389 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,390 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,393 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,395 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,397 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,400 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,401 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,403 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,405 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,406 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,408 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,410 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,411 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.VectorStoreCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,413 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_list_params.VectorStoreListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,415 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,417 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.VectorStoreUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,419 - INFO - Indexing document: resources.completions.Completion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,421 - INFO - Indexing document: resources.completions.Completion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,423 - INFO - Indexing document: resources.completions.Completion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,425 - INFO - Indexing document: resources.completions.Completion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,426 - INFO - Indexing document: resources.completions.Completion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,428 - INFO - Indexing document: resources.completions.Completion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,430 - INFO - Indexing document: resources.completions.Completion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,432 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,433 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,435 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,436 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,438 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,440 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,442 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,443 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,445 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,447 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,449 - INFO - Indexing document: resources.embeddings.embedding_create_params.EmbeddingCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,451 - INFO - Indexing document: resources.files.FileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,453 - INFO - Indexing document: resources.files.FileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,455 - INFO - Indexing document: resources.files.FileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,457 - INFO - Indexing document: resources.files.FileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,458 - INFO - Indexing document: resources.files.FileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,460 - INFO - Indexing document: resources.files.FileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,462 - INFO - Indexing document: resources.files.FileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,464 - INFO - Indexing document: resources.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,465 - INFO - Indexing document: resources.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,466 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 14:38:09,468 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 14:38:09,470 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 14:38:09,472 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 14:38:09,474 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 14:38:09,476 - INFO - Indexing document: resources.fine_tuning.Jobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 14:38:09,478 - INFO - Indexing document: resources.fine_tuning.Jobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 14:38:09,480 - INFO - Indexing document: resources.fine_tuning.Jobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 14:38:09,482 - INFO - Indexing document: resources.fine_tuning.Jobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 14:38:09,485 - INFO - Indexing document: resources.fine_tuning.Jobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 14:38:09,487 - INFO - Indexing document: resources.fine_tuning.jobs.AsyncCheckpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 14:38:09,489 - INFO - Indexing document: resources.fine_tuning.jobs.Checkpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 14:38:09,490 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,493 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,495 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,496 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,498 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,500 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,502 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,504 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.checkpoint_list_params.CheckpointListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,505 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,508 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,510 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,512 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,513 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,515 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,518 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,519 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,521 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,523 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,525 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,526 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,528 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,530 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,532 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Hyperparameters - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,534 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Integration - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,535 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.IntegrationWandb - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,537 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.JobCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,539 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_events_params.JobListEventsParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,540 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_params.JobListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,542 - INFO - Indexing document: resources.images.ImagesResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,545 - INFO - Indexing document: resources.images.ImagesResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,547 - INFO - Indexing document: resources.images.ImagesResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,549 - INFO - Indexing document: resources.images.ImagesResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,550 - INFO - Indexing document: resources.images.ImagesResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,552 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,554 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,555 - INFO - Indexing document: resources.images.image_create_variation_params.ImageCreateVariationParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,557 - INFO - Indexing document: resources.images.image_edit_params.ImageEditParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,558 - INFO - Indexing document: resources.images.image_generate_params.ImageGenerateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,560 - INFO - Indexing document: resources.models.Model - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,561 - INFO - Indexing document: resources.models.Model.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,563 - INFO - Indexing document: resources.models.Model.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,565 - INFO - Indexing document: resources.models.Model.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,566 - INFO - Indexing document: resources.models.Model.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,568 - INFO - Indexing document: resources.models.Model.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,570 - INFO - Indexing document: resources.models.Model.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,571 - INFO - Indexing document: resources.models.ModelDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,573 - INFO - Indexing document: resources.models.ModelDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,575 - INFO - Indexing document: resources.models.ModelDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,577 - INFO - Indexing document: resources.models.ModelDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,578 - INFO - Indexing document: resources.models.ModelDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,580 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,583 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,584 - INFO - Indexing document: resources.moderations.ModerationCreateResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,586 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,588 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,591 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,592 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,593 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,595 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,597 - INFO - Indexing document: resources.moderations.moderation_create_params.ModerationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,598 - INFO - Indexing document: resources.uploads.AsyncParts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 14:38:09,599 - INFO - Indexing document: resources.uploads.Parts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 14:38:09,601 - INFO - Indexing document: resources.uploads.parts.UploadPart - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,603 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,606 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,608 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,609 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,612 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,614 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,615 - INFO - Indexing document: resources.uploads.parts.part_create_params.PartCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,618 - INFO - Indexing document: resources.uploads.uploads.Path - PurePath subclass that can make system calls.

Path represents a filesystem path but unlike PurePath, also offers
methods to do system calls on path objects. Depending on your system,
instantiating a ...
2024-11-27 14:38:09,618 - INFO - Indexing document: resources.uploads.uploads.Path.absolute - Return an absolute version of this path by prepending the current
working directory. No normalization or symlink resolution is performed.

Use resolve() to get the canonical path to a file....
2024-11-27 14:38:09,620 - INFO - Indexing document: resources.uploads.uploads.Path.anchor - The concatenation of the drive and root, or ''....
2024-11-27 14:38:09,620 - INFO - Indexing document: resources.uploads.uploads.Path.as_posix - Return the string representation of the path with forward (/)
slashes....
2024-11-27 14:38:09,621 - INFO - Indexing document: resources.uploads.uploads.Path.as_uri - Return the path as a 'file' URI....
2024-11-27 14:38:09,622 - INFO - Indexing document: resources.uploads.uploads.Path.chmod - Change the permissions of the path, like os.chmod()....
2024-11-27 14:38:09,622 - INFO - Indexing document: resources.uploads.uploads.Path.cwd - Return a new path pointing to the current working directory....
2024-11-27 14:38:09,624 - INFO - Indexing document: resources.uploads.uploads.Path.drive - The drive prefix (letter or UNC path), if any....
2024-11-27 14:38:09,624 - INFO - Indexing document: resources.uploads.uploads.Path.exists - Whether this path exists.

This method normally follows symlinks; to check whether a symlink exists,
add the argument follow_symlinks=False....
2024-11-27 14:38:09,625 - INFO - Indexing document: resources.uploads.uploads.Path.expanduser - Return a new path with expanded ~ and ~user constructs
(as returned by os.path.expanduser)...
2024-11-27 14:38:09,625 - INFO - Indexing document: resources.uploads.uploads.Path.glob - Iterate over this subtree and yield all existing files (of any
kind, including directories) matching the given relative pattern....
2024-11-27 14:38:09,627 - INFO - Indexing document: resources.uploads.uploads.Path.group - Return the group name of the file gid....
2024-11-27 14:38:09,627 - INFO - Indexing document: resources.uploads.uploads.Path.hardlink_to - Make this path a hard link pointing to the same file as *target*.

Note the order of arguments (self, target) is the reverse of os.link's....
2024-11-27 14:38:09,628 - INFO - Indexing document: resources.uploads.uploads.Path.home - Return a new path pointing to the user's home directory (as
returned by os.path.expanduser('~'))....
2024-11-27 14:38:09,628 - INFO - Indexing document: resources.uploads.uploads.Path.is_absolute - True if the path is absolute (has both a root and, if applicable,
a drive)....
2024-11-27 14:38:09,629 - INFO - Indexing document: resources.uploads.uploads.Path.is_block_device - Whether this path is a block device....
2024-11-27 14:38:09,630 - INFO - Indexing document: resources.uploads.uploads.Path.is_char_device - Whether this path is a character device....
2024-11-27 14:38:09,630 - INFO - Indexing document: resources.uploads.uploads.Path.is_dir - Whether this path is a directory....
2024-11-27 14:38:09,630 - INFO - Indexing document: resources.uploads.uploads.Path.is_fifo - Whether this path is a FIFO....
2024-11-27 14:38:09,631 - INFO - Indexing document: resources.uploads.uploads.Path.is_file - Whether this path is a regular file (also True for symlinks pointing
to regular files)....
2024-11-27 14:38:09,633 - INFO - Indexing document: resources.uploads.uploads.Path.is_junction - Whether this path is a junction....
2024-11-27 14:38:09,633 - INFO - Indexing document: resources.uploads.uploads.Path.is_mount - Check if this path is a mount point...
2024-11-27 14:38:09,634 - INFO - Indexing document: resources.uploads.uploads.Path.is_relative_to - Return True if the path is relative to another path or False.
        ...
2024-11-27 14:38:09,635 - INFO - Indexing document: resources.uploads.uploads.Path.is_reserved - Return True if the path contains one of the special names reserved
by the system, if any....
2024-11-27 14:38:09,636 - INFO - Indexing document: resources.uploads.uploads.Path.is_socket - Whether this path is a socket....
2024-11-27 14:38:09,636 - INFO - Indexing document: resources.uploads.uploads.Path.is_symlink - Whether this path is a symbolic link....
2024-11-27 14:38:09,637 - INFO - Indexing document: resources.uploads.uploads.Path.iterdir - Yield path objects of the directory contents.

The children are yielded in arbitrary order, and the
special entries '.' and '..' are not included....
2024-11-27 14:38:09,639 - INFO - Indexing document: resources.uploads.uploads.Path.joinpath - Combine this path with one or several arguments, and return a
new path representing either a subpath (if all arguments are relative
paths) or a totally different path (if one of the arguments is
ancho...
2024-11-27 14:38:09,641 - INFO - Indexing document: resources.uploads.uploads.Path.lchmod - Like chmod(), except if the path points to a symlink, the symlink's
permissions are changed, rather than its target's....
2024-11-27 14:38:09,643 - INFO - Indexing document: resources.uploads.uploads.Path.lstat - Like stat(), except if the path points to a symlink, the symlink's
status information is returned, rather than its target's....
2024-11-27 14:38:09,644 - INFO - Indexing document: resources.uploads.uploads.Path.match - Return True if this path matches the given pattern....
2024-11-27 14:38:09,645 - INFO - Indexing document: resources.uploads.uploads.Path.mkdir - Create a new directory at this given path....
2024-11-27 14:38:09,645 - INFO - Indexing document: resources.uploads.uploads.Path.name - The final path component, if any....
2024-11-27 14:38:09,646 - INFO - Indexing document: resources.uploads.uploads.Path.open - Open the file pointed by this path and return a file object, as
the built-in open() function does....
2024-11-27 14:38:09,646 - INFO - Indexing document: resources.uploads.uploads.Path.owner - Return the login name of the file owner....
2024-11-27 14:38:09,647 - INFO - Indexing document: resources.uploads.uploads.Path.parent - The logical parent of the path....
2024-11-27 14:38:09,647 - INFO - Indexing document: resources.uploads.uploads.Path.parents - A sequence of this path's logical parents....
2024-11-27 14:38:09,648 - INFO - Indexing document: resources.uploads.uploads.Path.parts - An object providing sequence-like access to the
components in the filesystem path....
2024-11-27 14:38:09,649 - INFO - Indexing document: resources.uploads.uploads.Path.read_bytes - Open the file in bytes mode, read it, and close the file....
2024-11-27 14:38:09,650 - INFO - Indexing document: resources.uploads.uploads.Path.read_text - Open the file in text mode, read it, and close the file....
2024-11-27 14:38:09,650 - INFO - Indexing document: resources.uploads.uploads.Path.readlink - Return the path to which the symbolic link points....
2024-11-27 14:38:09,651 - INFO - Indexing document: resources.uploads.uploads.Path.relative_to - Return the relative path to another path identified by the passed
arguments.  If the operation is not possible (because this is not
related to the other path), raise ValueError.

The *walk_up* paramet...
2024-11-27 14:38:09,653 - INFO - Indexing document: resources.uploads.uploads.Path.rename - Rename this path to the target path.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
directory of the Path object.

Re...
2024-11-27 14:38:09,654 - INFO - Indexing document: resources.uploads.uploads.Path.replace - Rename this path to the target path, overwriting if that path exists.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
...
2024-11-27 14:38:09,657 - INFO - Indexing document: resources.uploads.uploads.Path.resolve - Make the path absolute, resolving all symlinks on the way and also
normalizing it....
2024-11-27 14:38:09,658 - INFO - Indexing document: resources.uploads.uploads.Path.rglob - Recursively yield all existing files (of any kind, including
directories) matching the given relative pattern, anywhere in
this subtree....
2024-11-27 14:38:09,659 - INFO - Indexing document: resources.uploads.uploads.Path.rmdir - Remove this directory.  The directory must be empty....
2024-11-27 14:38:09,660 - INFO - Indexing document: resources.uploads.uploads.Path.root - The root of the path, if any....
2024-11-27 14:38:09,660 - INFO - Indexing document: resources.uploads.uploads.Path.samefile - Return whether other_path is the same or not as this file
(as returned by os.path.samefile())....
2024-11-27 14:38:09,661 - INFO - Indexing document: resources.uploads.uploads.Path.stat - Return the result of the stat() system call on this path, like
os.stat() does....
2024-11-27 14:38:09,663 - INFO - Indexing document: resources.uploads.uploads.Path.stem - The final path component, minus its last suffix....
2024-11-27 14:38:09,664 - INFO - Indexing document: resources.uploads.uploads.Path.suffix - The final component's last suffix, if any.

This includes the leading period. For example: '.txt'...
2024-11-27 14:38:09,665 - INFO - Indexing document: resources.uploads.uploads.Path.suffixes - A list of the final component's suffixes, if any.

These include the leading periods. For example: ['.tar', '.gz']...
2024-11-27 14:38:09,666 - INFO - Indexing document: resources.uploads.uploads.Path.symlink_to - Make this path a symlink pointing to the target path.
Note the order of arguments (link, target) is the reverse of os.symlink....
2024-11-27 14:38:09,668 - INFO - Indexing document: resources.uploads.uploads.Path.touch - Create this file with the given access mode, if it doesn't exist....
2024-11-27 14:38:09,668 - INFO - Indexing document: resources.uploads.uploads.Path.unlink - Remove this file or link.
If the path is a directory, use rmdir() instead....
2024-11-27 14:38:09,669 - INFO - Indexing document: resources.uploads.uploads.Path.walk - Walk the directory tree from this directory, similar to os.walk()....
2024-11-27 14:38:09,670 - INFO - Indexing document: resources.uploads.uploads.Path.with_name - Return a new path with the file name changed....
2024-11-27 14:38:09,672 - INFO - Indexing document: resources.uploads.uploads.Path.with_segments - Construct a new path object from any number of path-like objects.
Subclasses may override this method to customize how new path objects
are created from methods like `iterdir()`....
2024-11-27 14:38:09,673 - INFO - Indexing document: resources.uploads.uploads.Path.with_stem - Return a new path with the stem changed....
2024-11-27 14:38:09,674 - INFO - Indexing document: resources.uploads.uploads.Path.with_suffix - Return a new path with the file suffix changed.  If the path
has no suffix, add given suffix.  If the given suffix is an empty
string, remove the suffix from the path....
2024-11-27 14:38:09,675 - INFO - Indexing document: resources.uploads.uploads.Path.write_bytes - Open the file in bytes mode, write to it, and close the file....
2024-11-27 14:38:09,676 - INFO - Indexing document: resources.uploads.uploads.Path.write_text - Open the file in text mode, write to it, and close the file....
2024-11-27 14:38:09,677 - INFO - Indexing document: resources.uploads.uploads.Upload - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,679 - INFO - Indexing document: resources.uploads.uploads.Upload.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,681 - INFO - Indexing document: resources.uploads.uploads.Upload.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,683 - INFO - Indexing document: resources.uploads.uploads.Upload.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,684 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,686 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,689 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,691 - INFO - Indexing document: resources.uploads.uploads.upload_complete_params.UploadCompleteParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,694 - INFO - Indexing document: resources.uploads.uploads.upload_create_params.UploadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,696 - INFO - Indexing document: types.BatchError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,699 - INFO - Indexing document: types.BatchError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,700 - INFO - Indexing document: types.BatchError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,702 - INFO - Indexing document: types.BatchError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,703 - INFO - Indexing document: types.BatchError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,705 - INFO - Indexing document: types.BatchError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,708 - INFO - Indexing document: types.BatchError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,709 - INFO - Indexing document: types.BatchRequestCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,711 - INFO - Indexing document: types.BatchRequestCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,713 - INFO - Indexing document: types.BatchRequestCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,715 - INFO - Indexing document: types.BatchRequestCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,716 - INFO - Indexing document: types.BatchRequestCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,718 - INFO - Indexing document: types.BatchRequestCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,720 - INFO - Indexing document: types.BatchRequestCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,721 - INFO - Indexing document: types.CompletionChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,723 - INFO - Indexing document: types.CompletionChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,725 - INFO - Indexing document: types.CompletionChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,727 - INFO - Indexing document: types.CompletionChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,728 - INFO - Indexing document: types.CompletionChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,730 - INFO - Indexing document: types.CompletionChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,733 - INFO - Indexing document: types.CompletionChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,735 - INFO - Indexing document: types.CompletionUsage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,737 - INFO - Indexing document: types.CompletionUsage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,739 - INFO - Indexing document: types.CompletionUsage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,740 - INFO - Indexing document: types.CompletionUsage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,742 - INFO - Indexing document: types.CompletionUsage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,743 - INFO - Indexing document: types.CompletionUsage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,745 - INFO - Indexing document: types.CompletionUsage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,747 - INFO - Indexing document: types.Embedding - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,749 - INFO - Indexing document: types.Embedding.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,750 - INFO - Indexing document: types.Embedding.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,752 - INFO - Indexing document: types.Embedding.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,753 - INFO - Indexing document: types.Embedding.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,755 - INFO - Indexing document: types.Embedding.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,757 - INFO - Indexing document: types.Embedding.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,759 - INFO - Indexing document: types.ErrorObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,761 - INFO - Indexing document: types.ErrorObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,763 - INFO - Indexing document: types.ErrorObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,764 - INFO - Indexing document: types.ErrorObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,765 - INFO - Indexing document: types.ErrorObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,767 - INFO - Indexing document: types.ErrorObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,769 - INFO - Indexing document: types.ErrorObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,771 - INFO - Indexing document: types.FileContent - str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer...
2024-11-27 14:38:09,772 - INFO - Indexing document: types.FunctionDefinition - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,774 - INFO - Indexing document: types.FunctionDefinition.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,776 - INFO - Indexing document: types.FunctionDefinition.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,778 - INFO - Indexing document: types.FunctionDefinition.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,779 - INFO - Indexing document: types.FunctionDefinition.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,781 - INFO - Indexing document: types.FunctionDefinition.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,782 - INFO - Indexing document: types.FunctionDefinition.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,784 - INFO - Indexing document: types.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,786 - INFO - Indexing document: types.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,787 - INFO - Indexing document: types.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,789 - INFO - Indexing document: types.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,790 - INFO - Indexing document: types.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,792 - INFO - Indexing document: types.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,796 - INFO - Indexing document: types.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,798 - INFO - Indexing document: types.Moderation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,801 - INFO - Indexing document: types.Moderation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,802 - INFO - Indexing document: types.Moderation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,804 - INFO - Indexing document: types.Moderation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,805 - INFO - Indexing document: types.Moderation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,807 - INFO - Indexing document: types.Moderation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,809 - INFO - Indexing document: types.Moderation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,811 - INFO - Indexing document: types.ModerationImageURLInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,813 - INFO - Indexing document: types.ModerationTextInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,814 - INFO - Indexing document: types.ResponseFormatJSONObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,816 - INFO - Indexing document: types.ResponseFormatJSONObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,818 - INFO - Indexing document: types.ResponseFormatJSONObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,820 - INFO - Indexing document: types.ResponseFormatJSONObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,821 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,824 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,827 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,829 - INFO - Indexing document: types.ResponseFormatJSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,832 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,834 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,835 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,837 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,839 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,840 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,842 - INFO - Indexing document: types.ResponseFormatText - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,844 - INFO - Indexing document: types.ResponseFormatText.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,845 - INFO - Indexing document: types.ResponseFormatText.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,847 - INFO - Indexing document: types.ResponseFormatText.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,848 - INFO - Indexing document: types.ResponseFormatText.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,850 - INFO - Indexing document: types.ResponseFormatText.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,852 - INFO - Indexing document: types.ResponseFormatText.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,854 - INFO - Indexing document: types.audio.TranscriptionSegment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,857 - INFO - Indexing document: types.audio.TranscriptionSegment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,858 - INFO - Indexing document: types.audio.TranscriptionSegment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,861 - INFO - Indexing document: types.audio.TranscriptionSegment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,862 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,864 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,866 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,867 - INFO - Indexing document: types.audio.TranscriptionWord - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,869 - INFO - Indexing document: types.audio.TranscriptionWord.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,871 - INFO - Indexing document: types.audio.TranscriptionWord.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,873 - INFO - Indexing document: types.audio.TranscriptionWord.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,874 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,875 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,877 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,879 - INFO - Indexing document: types.batch.Errors - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,881 - INFO - Indexing document: types.batch.Errors.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,882 - INFO - Indexing document: types.batch.Errors.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,884 - INFO - Indexing document: types.batch.Errors.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,885 - INFO - Indexing document: types.batch.Errors.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,888 - INFO - Indexing document: types.batch.Errors.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,890 - INFO - Indexing document: types.batch.Errors.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,892 - INFO - Indexing document: types.beta.AssistantToolChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,894 - INFO - Indexing document: types.beta.AssistantToolChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,895 - INFO - Indexing document: types.beta.AssistantToolChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,897 - INFO - Indexing document: types.beta.AssistantToolChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,898 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,900 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,902 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,904 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,906 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,908 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,910 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,911 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,913 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,915 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,918 - INFO - Indexing document: types.beta.AssistantToolChoiceFunctionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,920 - INFO - Indexing document: types.beta.AssistantToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,921 - INFO - Indexing document: types.beta.AutoFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:09,924 - INFO - Indexing document: types.beta.CodeInterpreterTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,926 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,928 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,929 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,931 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,933 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,935 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,936 - INFO - Indexing document: types.beta.FileSearchTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,938 - INFO - Indexing document: types.beta.FileSearchTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,940 - INFO - Indexing document: types.beta.FileSearchTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,941 - INFO - Indexing document: types.beta.FileSearchTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,943 - INFO - Indexing document: types.beta.FileSearchTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,944 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,947 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,950 - INFO - Indexing document: types.beta.FunctionTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,953 - INFO - Indexing document: types.beta.FunctionTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,955 - INFO - Indexing document: types.beta.FunctionTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,957 - INFO - Indexing document: types.beta.FunctionTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,958 - INFO - Indexing document: types.beta.FunctionTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,960 - INFO - Indexing document: types.beta.FunctionTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,961 - INFO - Indexing document: types.beta.FunctionTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,963 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,965 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,967 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,968 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,970 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,971 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,973 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,975 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,977 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,980 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,982 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,983 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,986 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:09,988 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:09,990 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:09,992 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:09,994 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:09,996 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:09,997 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:09,999 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,000 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,002 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:10,004 - INFO - Indexing document: types.beta.assistant.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,006 - INFO - Indexing document: types.beta.assistant.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,007 - INFO - Indexing document: types.beta.assistant.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,009 - INFO - Indexing document: types.beta.assistant.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,011 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,014 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,015 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,017 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,019 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,021 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,023 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,024 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,026 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,028 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,030 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,032 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,034 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,035 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,037 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,038 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,041 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,043 - INFO - Indexing document: types.beta.assistant_stream_event.Annotated - Add context-specific metadata to a type.

Example: Annotated[int, runtime_check.Unsigned] indicates to the
hypothetical runtime_check module that this type is an unsigned int.
Every other consumer of ...
2024-11-27 14:38:10,045 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,047 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,049 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,051 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,052 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,054 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,056 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,058 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,060 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,062 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,064 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,065 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,067 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,069 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,072 - INFO - Indexing document: types.beta.assistant_stream_event.PropertyInfo - Metadata class to be used in Annotated types to provide information about a given type.

For example:

class MyParams(TypedDict):
    account_holder_name: Annotated[str, PropertyInfo(alias='accountHol...
2024-11-27 14:38:10,074 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,077 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,079 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,081 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,082 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,084 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,086 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,088 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,090 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,092 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,093 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,095 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,096 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,098 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,100 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,101 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,104 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,106 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,108 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,110 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,111 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,113 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,115 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,117 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,119 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,120 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,122 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,124 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,125 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,127 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,129 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,130 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,132 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,135 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,138 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,140 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,143 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,145 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,148 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,150 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,152 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,154 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,156 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,158 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,160 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,162 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,163 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,165 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,168 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,170 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,173 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,175 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,177 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,178 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,180 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,182 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,184 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,186 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,187 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,189 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,190 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,192 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,194 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,196 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,199 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,202 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,202 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,205 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,207 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,209 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,211 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,214 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,216 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,219 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,220 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,222 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,224 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,226 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,229 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,231 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,234 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,236 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,238 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,240 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,242 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,245 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,247 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,249 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,250 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,252 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,254 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,256 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,258 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,261 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,263 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,264 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,267 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,269 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,271 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,273 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,275 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,277 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,278 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,281 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,283 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,284 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,286 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,288 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,291 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,292 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,294 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,296 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,298 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,300 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,302 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,304 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,306 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,308 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,310 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,312 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,314 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,316 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,318 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,319 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,322 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,324 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,327 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,330 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,332 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,334 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,335 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,337 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,339 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,341 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,343 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,345 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,347 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,348 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,350 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,353 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,355 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,358 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,361 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,363 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,364 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,366 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,368 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,370 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,372 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,374 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,376 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,378 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,380 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,382 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,385 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,388 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,389 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,392 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,394 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,396 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,398 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,400 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,402 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,404 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,405 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,407 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,409 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,411 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,412 - INFO - Indexing document: types.beta.file_search_tool.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,415 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,417 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,418 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,420 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,423 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,425 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,427 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,429 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,431 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,433 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,434 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,436 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,438 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,440 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:10,441 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearchRankingOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:10,443 - INFO - Indexing document: types.beta.function_tool_param.FunctionDefinition - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:10,444 - INFO - Indexing document: types.beta.thread.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,447 - INFO - Indexing document: types.beta.thread.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,449 - INFO - Indexing document: types.beta.thread.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,450 - INFO - Indexing document: types.beta.thread.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,452 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,454 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,456 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,458 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,460 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,462 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,464 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,465 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,467 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,469 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,471 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,473 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,475 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,477 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,479 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,481 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,483 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,486 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,489 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,491 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,493 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,495 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,497 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,499 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,500 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,503 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,504 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,506 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,508 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,511 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,513 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,516 - INFO - Indexing document: types.beta.threads.FilePathAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,519 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,521 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,522 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,524 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,526 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,528 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,530 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,533 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,534 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,536 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,538 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,540 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,543 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,544 - INFO - Indexing document: types.beta.threads.ImageFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,546 - INFO - Indexing document: types.beta.threads.ImageFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,548 - INFO - Indexing document: types.beta.threads.ImageFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,550 - INFO - Indexing document: types.beta.threads.ImageFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,552 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,553 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,555 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,557 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,559 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,561 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,563 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,564 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,566 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,568 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,569 - INFO - Indexing document: types.beta.threads.ImageFileContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:10,573 - INFO - Indexing document: types.beta.threads.ImageFileDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,575 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,577 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,579 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,580 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,582 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,584 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,585 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,588 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,589 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,591 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,592 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,594 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,596 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,598 - INFO - Indexing document: types.beta.threads.ImageFileParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:10,599 - INFO - Indexing document: types.beta.threads.ImageURL - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,601 - INFO - Indexing document: types.beta.threads.ImageURL.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,604 - INFO - Indexing document: types.beta.threads.ImageURL.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,605 - INFO - Indexing document: types.beta.threads.ImageURL.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,607 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,609 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,611 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,613 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,615 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,617 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,619 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,620 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,622 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,624 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,626 - INFO - Indexing document: types.beta.threads.ImageURLContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:10,627 - INFO - Indexing document: types.beta.threads.ImageURLDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,629 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,631 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,632 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,635 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,636 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,639 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,641 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,644 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,646 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,647 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,649 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,651 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,654 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,655 - INFO - Indexing document: types.beta.threads.ImageURLParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:10,657 - INFO - Indexing document: types.beta.threads.MessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,659 - INFO - Indexing document: types.beta.threads.MessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,661 - INFO - Indexing document: types.beta.threads.MessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,663 - INFO - Indexing document: types.beta.threads.MessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,664 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,667 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,670 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,674 - INFO - Indexing document: types.beta.threads.RefusalContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,677 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,679 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,680 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,682 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,684 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,685 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,687 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,689 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,691 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,693 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,694 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,697 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,699 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,701 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,704 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,706 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,708 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,709 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,711 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,713 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,715 - INFO - Indexing document: types.beta.threads.Text - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,716 - INFO - Indexing document: types.beta.threads.Text.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,718 - INFO - Indexing document: types.beta.threads.Text.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,719 - INFO - Indexing document: types.beta.threads.Text.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,721 - INFO - Indexing document: types.beta.threads.Text.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,723 - INFO - Indexing document: types.beta.threads.Text.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,724 - INFO - Indexing document: types.beta.threads.Text.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,726 - INFO - Indexing document: types.beta.threads.TextContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,729 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,731 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,733 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,734 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,737 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,739 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,740 - INFO - Indexing document: types.beta.threads.TextContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:10,743 - INFO - Indexing document: types.beta.threads.TextDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,745 - INFO - Indexing document: types.beta.threads.TextDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,746 - INFO - Indexing document: types.beta.threads.TextDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,748 - INFO - Indexing document: types.beta.threads.TextDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,750 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,751 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,753 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,755 - INFO - Indexing document: types.beta.threads.TextDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,757 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,760 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,763 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,765 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,769 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,771 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,773 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,776 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,778 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,780 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,781 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,783 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,785 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,787 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,789 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,791 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,793 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,795 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,797 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,799 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,801 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,803 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,805 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,807 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,810 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,814 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,816 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,818 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,821 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,823 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,825 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,826 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,828 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,830 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,832 - INFO - Indexing document: types.beta.threads.message.Attachment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,834 - INFO - Indexing document: types.beta.threads.message.Attachment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,836 - INFO - Indexing document: types.beta.threads.message.Attachment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,838 - INFO - Indexing document: types.beta.threads.message.Attachment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,839 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,841 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,843 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,844 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,846 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,848 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,850 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,851 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,854 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,856 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,857 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,860 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,861 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,863 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,865 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,866 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,868 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,870 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,872 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,874 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,875 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,877 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,879 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,880 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,882 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,884 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,887 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,889 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,891 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,892 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,894 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,896 - INFO - Indexing document: types.beta.threads.run.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,898 - INFO - Indexing document: types.beta.threads.run.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,900 - INFO - Indexing document: types.beta.threads.run.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,902 - INFO - Indexing document: types.beta.threads.run.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,904 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,905 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,907 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,909 - INFO - Indexing document: types.beta.threads.run.RequiredAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,911 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,912 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,915 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,916 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,919 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,921 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,922 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,924 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,926 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,928 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,929 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,931 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,933 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,935 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,936 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,938 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,940 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,941 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,943 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,945 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,948 - INFO - Indexing document: types.beta.threads.run.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,950 - INFO - Indexing document: types.beta.threads.run.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,952 - INFO - Indexing document: types.beta.threads.run.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,954 - INFO - Indexing document: types.beta.threads.run.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,956 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,957 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,959 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,961 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,964 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,965 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,967 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,968 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,970 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,972 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,973 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,975 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,977 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,980 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,981 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,983 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,985 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:10,987 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:10,990 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:10,991 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:10,993 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:10,995 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:10,997 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:10,999 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,000 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,002 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,004 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,006 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,007 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,009 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,011 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,013 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,015 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,017 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,019 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,020 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,022 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,024 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,025 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,028 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,029 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,031 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,032 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,033 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,035 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,036 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,038 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,041 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,044 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,045 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,047 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,050 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,051 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,053 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,055 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,058 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,059 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,061 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,063 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,064 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,066 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,068 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,070 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,072 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,074 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,076 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,077 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,080 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,082 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,084 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,085 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,087 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,089 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,090 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,092 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,094 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,096 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,097 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,099 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,101 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,103 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,105 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,107 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,109 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,110 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,112 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,114 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,116 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,118 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,120 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,121 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,122 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,124 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,126 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,127 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,130 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,131 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,134 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,136 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,138 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,141 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,143 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,146 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,148 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,150 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,152 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,154 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,156 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,158 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,161 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,163 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,165 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,167 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,169 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,172 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,175 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,178 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,181 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,183 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,184 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,186 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,189 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,191 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,193 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,196 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,199 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,201 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,203 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,207 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,209 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,211 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,214 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,216 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,218 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,220 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,223 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,225 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,227 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,229 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,232 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,233 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,236 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,241 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,242 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,245 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,246 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,248 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,250 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,252 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,253 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,255 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,257 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,260 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,262 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,264 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,266 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,268 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,269 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,271 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,273 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,276 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,277 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,279 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,281 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,283 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,286 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,288 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,291 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,293 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,295 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,297 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,299 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,302 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,304 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,306 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,308 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,311 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,313 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,315 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,317 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,320 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,322 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,324 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,327 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,329 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,331 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,334 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,336 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,339 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,341 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,342 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,345 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,346 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,349 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,350 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,353 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,356 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,358 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,361 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,363 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,365 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,368 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,369 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,371 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,373 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,376 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,378 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,382 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,384 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,386 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,388 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,390 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,393 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,395 - INFO - Indexing document: types.beta.vector_store.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,397 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,400 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,402 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,404 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,406 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,408 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,410 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,412 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,415 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,417 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,419 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,421 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,424 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,426 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,428 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,430 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,432 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,434 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,436 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,438 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,439 - INFO - Indexing document: types.chat.ChatCompletionAssistantMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,441 - INFO - Indexing document: types.chat.ChatCompletionAudio - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,443 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,445 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,448 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,449 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,452 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,453 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,456 - INFO - Indexing document: types.chat.ChatCompletionContentPartImageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,457 - INFO - Indexing document: types.chat.ChatCompletionContentPartInputAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,459 - INFO - Indexing document: types.chat.ChatCompletionContentPartRefusalParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,461 - INFO - Indexing document: types.chat.ChatCompletionContentPartTextParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,463 - INFO - Indexing document: types.chat.ChatCompletionFunctionMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,465 - INFO - Indexing document: types.chat.ChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,467 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,469 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,472 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,473 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,475 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,477 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,479 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,483 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,485 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,488 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,489 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,491 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,493 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,495 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCallParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,496 - INFO - Indexing document: types.chat.ChatCompletionNamedToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,498 - INFO - Indexing document: types.chat.ChatCompletionSystemMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,499 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,502 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,503 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,506 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,507 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,509 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,511 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,513 - INFO - Indexing document: types.chat.ChatCompletionToolMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,515 - INFO - Indexing document: types.chat.ChatCompletionUserMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,516 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,519 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,521 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,523 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,524 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,526 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,528 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,530 - INFO - Indexing document: types.chat.ParsedChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,532 - INFO - Indexing document: types.chat.ParsedChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,533 - INFO - Indexing document: types.chat.ParsedChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,535 - INFO - Indexing document: types.chat.ParsedChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,537 - INFO - Indexing document: types.chat.ParsedChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,539 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,542 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,543 - INFO - Indexing document: types.chat.ParsedFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,546 - INFO - Indexing document: types.chat.ParsedFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,547 - INFO - Indexing document: types.chat.ParsedFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,549 - INFO - Indexing document: types.chat.ParsedFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,551 - INFO - Indexing document: types.chat.ParsedFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,553 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,555 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,557 - INFO - Indexing document: types.chat.ParsedFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,559 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,561 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,562 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,564 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,565 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,567 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,568 - INFO - Indexing document: types.chat.chat_completion.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,570 - INFO - Indexing document: types.chat.chat_completion.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,573 - INFO - Indexing document: types.chat.chat_completion.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,574 - INFO - Indexing document: types.chat.chat_completion.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,576 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,578 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,580 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,582 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,584 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,586 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,588 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,589 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,591 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,593 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,594 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.Audio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,596 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.FunctionCall - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,598 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,600 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,602 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,603 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,605 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,608 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,609 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,611 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,614 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,616 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,617 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,619 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,621 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,622 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,624 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,626 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,628 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,629 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,631 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,633 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,635 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,637 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,643 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,645 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,647 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,648 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,650 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,652 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,654 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,656 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,657 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,659 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,661 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,663 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,665 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,667 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,670 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,672 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,674 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,676 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,678 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,681 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,683 - INFO - Indexing document: types.chat.chat_completion_content_part_image_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,685 - INFO - Indexing document: types.chat.chat_completion_content_part_input_audio_param.InputAudio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,686 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,689 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,690 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,692 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,693 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,696 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,699 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,701 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,704 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,706 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,708 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,709 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,711 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,713 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,715 - INFO - Indexing document: types.chat.chat_completion_message_tool_call_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,716 - INFO - Indexing document: types.chat.chat_completion_named_tool_choice_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,718 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,720 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,721 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,723 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,724 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,727 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,730 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,732 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,734 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,737 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,739 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,741 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,742 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,744 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,746 - INFO - Indexing document: types.completion_choice.Logprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,748 - INFO - Indexing document: types.completion_choice.Logprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,750 - INFO - Indexing document: types.completion_choice.Logprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,751 - INFO - Indexing document: types.completion_choice.Logprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,753 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,754 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,757 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,760 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,762 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,764 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,766 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,768 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,769 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,772 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,773 - INFO - Indexing document: types.completion_usage.PromptTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,775 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,777 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,779 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,780 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,782 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,784 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,785 - INFO - Indexing document: types.create_embedding_response.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,788 - INFO - Indexing document: types.create_embedding_response.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,790 - INFO - Indexing document: types.create_embedding_response.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,793 - INFO - Indexing document: types.create_embedding_response.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,795 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,797 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,799 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,801 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,803 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,805 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,806 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,807 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,810 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,812 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,813 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,815 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,817 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,819 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,821 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,822 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,825 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,827 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,829 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,832 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,834 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,835 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,837 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,839 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,840 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,843 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,844 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,846 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,847 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,849 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,851 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,853 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,856 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,858 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,859 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,861 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,863 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,865 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,867 - INFO - Indexing document: types.moderation.Categories - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,868 - INFO - Indexing document: types.moderation.Categories.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,870 - INFO - Indexing document: types.moderation.Categories.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,872 - INFO - Indexing document: types.moderation.Categories.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,873 - INFO - Indexing document: types.moderation.Categories.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,874 - INFO - Indexing document: types.moderation.Categories.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,876 - INFO - Indexing document: types.moderation.Categories.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,878 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,880 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,882 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,884 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,886 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,888 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,889 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,891 - INFO - Indexing document: types.moderation.CategoryScores - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,893 - INFO - Indexing document: types.moderation.CategoryScores.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,896 - INFO - Indexing document: types.moderation.CategoryScores.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,897 - INFO - Indexing document: types.moderation.CategoryScores.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,899 - INFO - Indexing document: types.moderation.CategoryScores.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,900 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,902 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,903 - INFO - Indexing document: types.moderation.FieldInfo - Usage docs: https://docs.pydantic.dev/2.10/concepts/fields

Create a field for objects that can be configured.

Used to provide extra information about a field, either for the model schema or complex ...
2024-11-27 14:38:11,905 - INFO - Indexing document: types.moderation_image_url_input_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:11,907 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:38:11,909 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:38:11,911 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:38:11,913 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:38:11,915 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:38:11,917 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:38:11,919 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:38:11,921 - INFO - Indexing document: types.shared_params.response_format_json_schema.JSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:38:41,151 - INFO - Indexed data saved successfully.
2024-11-27 14:38:41,265 - INFO - Configuration loaded successfully.
2024-11-27 14:38:46,037 - INFO - Starting search for query: This automatically handles gzip, deflate and brotli encoded responses
2024-11-27 14:38:55,682 - INFO - Whoosh search results: <Top 2 Results for And([Term('text', 'automatically'), Term('text', 'handles'), Term('text', 'gzip'), Term('text', 'deflate'), Term('text', 'brotli'), Term('text', 'encoded'), Term('text', 'responses')]) runtime=0.00715170000330545>
2024-11-27 14:39:11,383 - INFO - Final combined search results: [{'source': 'Whoosh', 'path': 'APIResponse.iter_bytes', 'text': 'A byte-iterator over the decoded response content.\n\nThis automatically handles gzip, deflate and brotli encoded responses.', 'score': 69.17817905621101}, {'source': 'Whoosh', 'path': 'AsyncAPIResponse.iter_bytes', 'text': 'A byte-iterator over the decoded response content.\n\nThis automatically handles gzip, deflate and brotli encoded responses.', 'score': 69.17817905621101}]
2024-11-27 14:39:11,386 - INFO - Source: Whoosh, Score: 69.17817905621101, Text: A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 14:39:11,388 - INFO - Source: Whoosh, Score: 69.17817905621101, Text: A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 14:39:11,389 - INFO - Element Info: {}
2024-11-27 14:39:11,390 - INFO - Element Info: {}
2024-11-27 14:39:13,290 - INFO - 
Search results for query 'This automatically handles gzip, deflate and brotli encoded responses':
2024-11-27 14:39:13,292 - INFO - - Path: N/A, Text: A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses.
2024-11-27 14:39:13,293 - INFO - - Path: N/A, Text: A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses.
2024-11-27 14:40:09,567 - INFO - Configuration loaded successfully.
2024-11-27 14:40:09,573 - INFO - Using device: cpu
2024-11-27 14:40:09,576 - INFO - Load pretrained SentenceTransformer: paraphrase-MiniLM-L6-v2
2024-11-27 14:40:09,584 - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2024-11-27 14:40:09,661 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 14:40:09,701 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config_sentence_transformers.json HTTP/11" 200 0
2024-11-27 14:40:09,737 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/README.md HTTP/11" 200 0
2024-11-27 14:40:09,776 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/modules.json HTTP/11" 200 0
2024-11-27 14:40:09,816 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/sentence_bert_config.json HTTP/11" 200 0
2024-11-27 14:40:09,856 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/adapter_config.json HTTP/11" 404 0
2024-11-27 14:40:09,896 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/config.json HTTP/11" 200 0
2024-11-27 14:40:10,198 - DEBUG - https://huggingface.co:443 "HEAD /sentence-transformers/paraphrase-MiniLM-L6-v2/resolve/main/tokenizer_config.json HTTP/11" 200 0
2024-11-27 14:40:10,282 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2/revision/main HTTP/11" 200 3135
2024-11-27 14:40:10,340 - DEBUG - https://huggingface.co:443 "GET /api/models/sentence-transformers/paraphrase-MiniLM-L6-v2 HTTP/11" 200 3135
2024-11-27 14:40:16,840 - INFO - Indexed data loaded successfully.
2024-11-27 14:40:18,731 - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
2024-11-27 14:40:18,733 - DEBUG - load_verify_locations cafile='C:\\Users\\admlocal\\anaconda3\\Library\\ssl\\cacert.pem'
2024-11-27 14:40:19,474 - INFO - Analysis saved to metrics\openai_analysis_v1.55.1_19.json
2024-11-27 14:40:19,491 - INFO - Indexing document: APIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:19,496 - INFO - Indexing document: APIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:40:19,497 - INFO - Indexing document: APIResponse.elapsed - The time taken for the complete request/response cycle to complete....
2024-11-27 14:40:19,498 - INFO - Indexing document: APIResponse.http_request - Returns the httpx Request instance associated with the current response....
2024-11-27 14:40:19,499 - INFO - Indexing document: APIResponse.is_closed - Whether or not the response body has been closed.

If this is False then there is response data that has not been read yet.
You must either fully consume the response body or call `.close()`
before di...
2024-11-27 14:40:19,500 - INFO - Indexing document: APIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 14:40:19,501 - INFO - Indexing document: APIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 14:40:19,502 - INFO - Indexing document: APIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 14:40:19,503 - INFO - Indexing document: APIResponse.json - Read and decode the JSON response content....
2024-11-27 14:40:19,503 - INFO - Indexing document: APIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 14:40:19,505 - INFO - Indexing document: APIResponse.read - Read and return the binary response content....
2024-11-27 14:40:19,505 - INFO - Indexing document: APIResponse.text - Read and decode the response content into a string....
2024-11-27 14:40:19,506 - INFO - Indexing document: APIResponse.url - Returns the URL for which the request was made....
2024-11-27 14:40:19,506 - INFO - Indexing document: AssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 14:40:19,508 - INFO - Indexing document: AssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 14:40:19,510 - INFO - Indexing document: AssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 14:40:19,511 - INFO - Indexing document: AssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 14:40:19,512 - INFO - Indexing document: AssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 14:40:19,513 - INFO - Indexing document: AssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 14:40:19,514 - INFO - Indexing document: AssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 14:40:19,515 - INFO - Indexing document: AssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 14:40:19,516 - INFO - Indexing document: AssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 14:40:19,516 - INFO - Indexing document: AssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 14:40:19,518 - INFO - Indexing document: AssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 14:40:19,519 - INFO - Indexing document: AssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 14:40:19,520 - INFO - Indexing document: AssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 14:40:19,521 - INFO - Indexing document: AssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 14:40:19,522 - INFO - Indexing document: AssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 14:40:19,523 - INFO - Indexing document: AssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 14:40:19,525 - INFO - Indexing document: AssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 14:40:19,526 - INFO - Indexing document: AssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 14:40:19,526 - INFO - Indexing document: AssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 14:40:19,527 - INFO - Indexing document: AssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:40:19,528 - INFO - Indexing document: AssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:40:19,529 - INFO - Indexing document: AssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 14:40:19,530 - INFO - Indexing document: AsyncAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:19,531 - INFO - Indexing document: AsyncAPIResponse.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:40:19,532 - INFO - Indexing document: AsyncAPIResponse.iter_bytes - A byte-iterator over the decoded response content.

This automatically handles gzip, deflate and brotli encoded responses....
2024-11-27 14:40:19,533 - INFO - Indexing document: AsyncAPIResponse.iter_lines - Like `iter_text()` but will only yield chunks for each line...
2024-11-27 14:40:19,534 - INFO - Indexing document: AsyncAPIResponse.iter_text - A str-iterator over the decoded response content
that handles both gzip, deflate, etc but also detects the content's
string encoding....
2024-11-27 14:40:19,535 - INFO - Indexing document: AsyncAPIResponse.json - Read and decode the JSON response content....
2024-11-27 14:40:19,535 - INFO - Indexing document: AsyncAPIResponse.parse - Returns the rich python representation of this response's data.

For lower-level control, see `.read()`, `.json()`, `.iter_bytes()`.

You can customise the type that the response is parsed into throug...
2024-11-27 14:40:19,536 - INFO - Indexing document: AsyncAPIResponse.read - Read and return the binary response content....
2024-11-27 14:40:19,537 - INFO - Indexing document: AsyncAPIResponse.text - Read and decode the response content into a string....
2024-11-27 14:40:19,537 - INFO - Indexing document: AsyncAssistantEventHandler.close - Close the response and release the connection.

Automatically called when the context manager exits....
2024-11-27 14:40:19,539 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_messages - Wait for the stream to finish and returns the messages emitted in this run...
2024-11-27 14:40:19,540 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run - Wait for the stream to finish and returns the completed Run object...
2024-11-27 14:40:19,541 - INFO - Indexing document: AsyncAssistantEventHandler.get_final_run_steps - Wait for the stream to finish and returns the steps taken in this run...
2024-11-27 14:40:19,542 - INFO - Indexing document: AsyncAssistantEventHandler.on_end - Fires when the stream has finished.

This happens if the stream is read to completion
or if an exception occurs during iteration....
2024-11-27 14:40:19,543 - INFO - Indexing document: AsyncAssistantEventHandler.on_event - Callback that is fired for every Server-Sent-Event...
2024-11-27 14:40:19,544 - INFO - Indexing document: AsyncAssistantEventHandler.on_exception - Fired whenever an exception happens during streaming...
2024-11-27 14:40:19,544 - INFO - Indexing document: AsyncAssistantEventHandler.on_image_file_done - Callback that is fired when an image file block is finished...
2024-11-27 14:40:19,545 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_created - Callback that is fired when a message is created...
2024-11-27 14:40:19,546 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_delta - Callback that is fired whenever a message delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the message. Fo...
2024-11-27 14:40:19,547 - INFO - Indexing document: AsyncAssistantEventHandler.on_message_done - Callback that is fired when a message is completed...
2024-11-27 14:40:19,548 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_created - Callback that is fired when a run step is created...
2024-11-27 14:40:19,549 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_delta - Callback that is fired whenever a run step delta is returned from the API

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the run step. ...
2024-11-27 14:40:19,550 - INFO - Indexing document: AsyncAssistantEventHandler.on_run_step_done - Callback that is fired when a run step is completed...
2024-11-27 14:40:19,551 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_created - Callback that is fired when a text content block is created...
2024-11-27 14:40:19,552 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_delta - Callback that is fired whenever a text content delta is returned
by the API.

The first argument is just the delta as sent by the API and the second argument
is the accumulated snapshot of the text. F...
2024-11-27 14:40:19,553 - INFO - Indexing document: AsyncAssistantEventHandler.on_text_done - Callback that is fired when a text content block is finished...
2024-11-27 14:40:19,554 - INFO - Indexing document: AsyncAssistantEventHandler.on_timeout - Fires if the request times out...
2024-11-27 14:40:19,555 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_created - Callback that is fired when a tool call is created...
2024-11-27 14:40:19,555 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_delta - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:40:19,556 - INFO - Indexing document: AsyncAssistantEventHandler.on_tool_call_done - Callback that is fired when a tool call delta is encountered...
2024-11-27 14:40:19,557 - INFO - Indexing document: AsyncAssistantEventHandler.until_done - Waits until the stream has been consumed...
2024-11-27 14:40:19,557 - INFO - Indexing document: AsyncAzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:19,559 - INFO - Indexing document: AsyncAzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 14:40:19,560 - INFO - Indexing document: AsyncClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:19,562 - INFO - Indexing document: AsyncStream - Provides the core interface to iterate over an asynchronous stream response....
2024-11-27 14:40:19,562 - INFO - Indexing document: AsyncStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:40:19,563 - INFO - Indexing document: AzureOpenAI - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:19,565 - INFO - Indexing document: AzureOpenAI.close - Close the underlying HTTPX client.

The client will *not* be usable after this....
2024-11-27 14:40:19,566 - INFO - Indexing document: BaseModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,568 - INFO - Indexing document: BaseModel.model_copy - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#model_copy

Returns a copy of the model.

Args:
    update: Values to change/add in the new model. Note: the data is not validated
  ...
2024-11-27 14:40:19,570 - INFO - Indexing document: BaseModel.model_dump - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump

Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

Args:
...
2024-11-27 14:40:19,572 - INFO - Indexing document: BaseModel.model_dump_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump_json

Generates a JSON representation of the model using Pydantic's `to_json` method.

Args:
    indent: Indentation ...
2024-11-27 14:40:19,575 - INFO - Indexing document: BaseModel.model_extra - Get extra fields set during validation.

Returns:
    A dictionary of extra fields, or `None` if `config.extra` is not set to `"allow"`....
2024-11-27 14:40:19,577 - INFO - Indexing document: BaseModel.model_fields_set - Returns the set of fields that have been explicitly set on this model instance.

Returns:
    A set of strings representing the fields that have been set,
        i.e. that were not filled from defaul...
2024-11-27 14:40:19,578 - INFO - Indexing document: BaseModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,580 - INFO - Indexing document: BaseModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,582 - INFO - Indexing document: BaseModel.model_post_init - Override this method to perform additional initialization after `__init__` and `model_construct`.
This is useful if you want to do some validation that requires the entire model to be initialized....
2024-11-27 14:40:19,583 - INFO - Indexing document: BaseModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,584 - INFO - Indexing document: BaseModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,586 - INFO - Indexing document: BaseModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,588 - INFO - Indexing document: BaseModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,591 - INFO - Indexing document: BaseModel.to_dict - Recursively generate a dictionary representation of the model, optionally specifying which fields to include or exclude.

By default, fields that were not set by the API will not be included,
and keys...
2024-11-27 14:40:19,592 - INFO - Indexing document: BaseModel.to_json - Generates a JSON string representing this model as it would be received from or sent to the API (but with indentation).

By default, fields that were not set by the API will not be included,
and keys ...
2024-11-27 14:40:19,594 - INFO - Indexing document: Client - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:19,595 - INFO - Indexing document: DefaultAsyncHttpxClient - An asynchronous HTTP client, with connection pooling, HTTP/2, redirects,
cookie persistence, etc.

It can be shared between tasks.

Usage:

```python
>>> async with httpx.AsyncClient() as client:
>>> ...
2024-11-27 14:40:19,598 - INFO - Indexing document: DefaultAsyncHttpxClient.aclose - Close transport and proxies....
2024-11-27 14:40:19,599 - INFO - Indexing document: DefaultAsyncHttpxClient.auth - Authentication class used when none is passed at the request-level.

See also [Authentication][0].

[0]: /quickstart/#authentication...
2024-11-27 14:40:19,600 - INFO - Indexing document: DefaultAsyncHttpxClient.base_url - Base URL to use when sending requests with relative URLs....
2024-11-27 14:40:19,601 - INFO - Indexing document: DefaultAsyncHttpxClient.build_request - Build and return a request instance.

* The `params`, `headers` and `cookies` arguments
are merged with any values set on the client.
* The `url` argument is merged with any `base_url` set on the clie...
2024-11-27 14:40:19,604 - INFO - Indexing document: DefaultAsyncHttpxClient.cookies - Cookie values to include when sending requests....
2024-11-27 14:40:19,604 - INFO - Indexing document: DefaultAsyncHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,606 - INFO - Indexing document: DefaultAsyncHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,607 - INFO - Indexing document: DefaultAsyncHttpxClient.headers - HTTP headers to include when sending requests....
2024-11-27 14:40:19,608 - INFO - Indexing document: DefaultAsyncHttpxClient.is_closed - Check if the client being closed...
2024-11-27 14:40:19,609 - INFO - Indexing document: DefaultAsyncHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,610 - INFO - Indexing document: DefaultAsyncHttpxClient.params - Query parameters to include in the URL when sending requests....
2024-11-27 14:40:19,611 - INFO - Indexing document: DefaultAsyncHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,612 - INFO - Indexing document: DefaultAsyncHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,613 - INFO - Indexing document: DefaultAsyncHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,614 - INFO - Indexing document: DefaultAsyncHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = await client.send(request, ...)
```

See `AsyncClient.build_request()`, `AsyncClient.send()`
and [Me...
2024-11-27 14:40:19,617 - INFO - Indexing document: DefaultAsyncHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `AsyncClient.build_request()`
so that any client-level configuration is merged into the request,
but pa...
2024-11-27 14:40:19,619 - INFO - Indexing document: DefaultAsyncHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 14:40:19,621 - INFO - Indexing document: DefaultHttpxClient - An HTTP client, with connection pooling, HTTP/2, redirects, cookie persistence, etc.

It can be shared between threads.

Usage:

```python
>>> client = httpx.Client()
>>> response = client.get('https:...
2024-11-27 14:40:19,624 - INFO - Indexing document: DefaultHttpxClient.close - Close transport and proxies....
2024-11-27 14:40:19,625 - INFO - Indexing document: DefaultHttpxClient.delete - Send a `DELETE` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,625 - INFO - Indexing document: DefaultHttpxClient.head - Send a `HEAD` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,626 - INFO - Indexing document: DefaultHttpxClient.options - Send an `OPTIONS` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,627 - INFO - Indexing document: DefaultHttpxClient.patch - Send a `PATCH` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,628 - INFO - Indexing document: DefaultHttpxClient.post - Send a `POST` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,629 - INFO - Indexing document: DefaultHttpxClient.put - Send a `PUT` request.

**Parameters**: See `httpx.request`....
2024-11-27 14:40:19,630 - INFO - Indexing document: DefaultHttpxClient.request - Build and send a request.

Equivalent to:

```python
request = client.build_request(...)
response = client.send(request, ...)
```

See `Client.build_request()`, `Client.send()` and
[Merging of configu...
2024-11-27 14:40:19,633 - INFO - Indexing document: DefaultHttpxClient.send - Send a request.

The request is sent as-is, unmodified.

Typically you'll want to build one with `Client.build_request()`
so that any client-level configuration is merged into the request,
but passing...
2024-11-27 14:40:19,635 - INFO - Indexing document: DefaultHttpxClient.stream - Alternative to `httpx.request()` that streams the response body
instead of loading it into memory at once.

**Parameters**: See `httpx.request`.

See also: [Streaming Responses][0]

[0]: /quickstart#s...
2024-11-27 14:40:19,638 - INFO - Indexing document: NotGiven - A sentinel singleton class used to distinguish omitted keyword arguments
from those passed in with the value None (which may have different behavior).

For example:

```py
def get(timeout: Union[int, ...
2024-11-27 14:40:19,640 - INFO - Indexing document: RequestOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:19,641 - INFO - Indexing document: Stream - Provides the core interface to iterate over a synchronous stream response....
2024-11-27 14:40:19,643 - INFO - Indexing document: Stream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:40:19,644 - INFO - Indexing document: Timeout - Timeout configuration.

**Usage**:

Timeout(None)               # No timeouts.
Timeout(5.0)                # 5s timeout on all operations.
Timeout(None, connect=5.0)  # 5s timeout on connect, no other...
2024-11-27 14:40:19,646 - INFO - Indexing document: Transport.handle_request - Send a single HTTP request and return a response.

Developers shouldn't typically ever need to call into this API directly,
since the Client class provides all the higher level user-facing API
nicetie...
2024-11-27 14:40:19,648 - INFO - Indexing document: lib.azure.Any - Special type indicating an unconstrained type.

- Any is compatible with every type.
- Any assumed to have all methods.
- All values assumed to be instances of Any.

Note that all the above statements...
2024-11-27 14:40:19,650 - INFO - Indexing document: lib.azure.BaseAzureClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:19,652 - INFO - Indexing document: lib.azure.BaseClient - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:19,654 - INFO - Indexing document: lib.azure.FinalRequestOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,656 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,658 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,660 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,662 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,664 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,667 - INFO - Indexing document: lib.azure.FinalRequestOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,670 - INFO - Indexing document: lib.azure.Omit - In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 14:40:19,672 - INFO - Indexing document: lib.azure.TypeVar - Type variable.

The preferred way to construct a type variable is via the dedicated
syntax for generic functions, classes, and type aliases::

    class Sequence[T]:  # T is a TypeVar
        ...

Thi...
2024-11-27 14:40:19,675 - INFO - Indexing document: lib.azure.cast - Cast a value to a type.

This returns the value unchanged.  To the type checker this
signals that the return value has the designated type, but at
runtime we intentionally don't check anything (we wan...
2024-11-27 14:40:19,677 - INFO - Indexing document: lib.azure.overload - Decorator for overloaded functions/methods.

In a stub file, place two or more stub definitions for the same
function in a row, each decorated with @overload.

For example::

    @overload
    def utf...
2024-11-27 14:40:19,680 - INFO - Indexing document: lib.azure.override - Indicate that a method is intended to override a method in a base class.

Usage::

    class Base:
        def method(self) -> None: ...
            pass

    class Child(Base):
        @override
    ...
2024-11-27 14:40:19,683 - INFO - Indexing document: lib.streaming.AssistantStreamManager - Wrapper over AssistantStreamEventHandler that is returned by `.stream()`
so that a context manager can be used.

```py
with client.threads.create_and_run_stream(...) as stream:
    for event in stream...
2024-11-27 14:40:19,685 - INFO - Indexing document: lib.streaming.AsyncAssistantStreamManager - Wrapper over AsyncAssistantStreamEventHandler that is returned by `.stream()`
so that an async context manager can be used without `await`ing the
original client call.

```py
async with client.threads...
2024-11-27 14:40:19,687 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 14:40:19,689 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:40:19,691 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 14:40:19,693 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 14:40:19,694 - INFO - Indexing document: lib.streaming.chat.AsyncChatCompletionStreamManager - Context manager over a `AsyncChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```p...
2024-11-27 14:40:19,696 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream - Wrapper over the Chat Completions streaming API that adds helpful
events such as `content.done`, supports automatically parsing
responses & tool calls and accumulates a `ChatCompletion` object
from ea...
2024-11-27 14:40:19,698 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.close - Close the response and release the connection.

Automatically called if the response body is read to completion....
2024-11-27 14:40:19,699 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.get_final_completion - Waits until the stream has been read to completion and returns
the accumulated `ParsedChatCompletion` object.

If you passed a class type to `.stream()`, the `completion.choices[0].message.parsed`
pro...
2024-11-27 14:40:19,701 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStream.until_done - Blocks until the stream has been consumed....
2024-11-27 14:40:19,701 - INFO - Indexing document: lib.streaming.chat.ChatCompletionStreamManager - Context manager over a `ChatCompletionStream` that is returned by `.stream()`.

This context manager ensures the response cannot be leaked if you don't read
the stream to completion.

Usage:
```py
wit...
2024-11-27 14:40:19,704 - INFO - Indexing document: lib.streaming.chat.ChunkEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,706 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,708 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,709 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,711 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,713 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,715 - INFO - Indexing document: lib.streaming.chat.ChunkEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,716 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent - This event is yielded for every chunk with `choice.delta.content` data....
2024-11-27 14:40:19,717 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,719 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,720 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,722 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,724 - INFO - Indexing document: lib.streaming.chat.ContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,725 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,730 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,731 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,734 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,736 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,739 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,742 - INFO - Indexing document: lib.streaming.chat.ContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,744 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,746 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,748 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,750 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,751 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,753 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,755 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,758 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,761 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,764 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,766 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,767 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,769 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,771 - INFO - Indexing document: lib.streaming.chat.FunctionToolCallArgumentsDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,773 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,775 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,777 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,779 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,781 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,783 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,785 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,787 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,788 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,790 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,792 - INFO - Indexing document: lib.streaming.chat.LogprobsContentDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,794 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,796 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,798 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,800 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,801 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,803 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,805 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,807 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,809 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,810 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,812 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,813 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,815 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,816 - INFO - Indexing document: lib.streaming.chat.LogprobsRefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,818 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,820 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,822 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,824 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,826 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,828 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,830 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionMessageSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,832 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,834 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,836 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,837 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,839 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,840 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,842 - INFO - Indexing document: lib.streaming.chat.ParsedChatCompletionSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,844 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,846 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,848 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,849 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,852 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,854 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,856 - INFO - Indexing document: lib.streaming.chat.ParsedChoiceSnapshot.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,857 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,859 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,862 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,864 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,865 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,867 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,869 - INFO - Indexing document: lib.streaming.chat.RefusalDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,870 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:19,872 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,874 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,876 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,878 - INFO - Indexing document: lib.streaming.chat.RefusalDoneEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,879 - INFO - Indexing document: pagination.AsyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:40:19,881 - INFO - Indexing document: pagination.AsyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,882 - INFO - Indexing document: pagination.AsyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,884 - INFO - Indexing document: pagination.AsyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:40:19,885 - INFO - Indexing document: pagination.AsyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,887 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,889 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,890 - INFO - Indexing document: pagination.AsyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,892 - INFO - Indexing document: pagination.AsyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 14:40:19,893 - INFO - Indexing document: pagination.AsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,895 - INFO - Indexing document: pagination.AsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,897 - INFO - Indexing document: pagination.AsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:40:19,898 - INFO - Indexing document: pagination.AsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,899 - INFO - Indexing document: pagination.AsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,901 - INFO - Indexing document: pagination.AsyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,902 - INFO - Indexing document: pagination.AsyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,904 - INFO - Indexing document: pagination.AsyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 14:40:19,905 - INFO - Indexing document: pagination.BaseAsyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:40:19,906 - INFO - Indexing document: pagination.BaseAsyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,908 - INFO - Indexing document: pagination.BaseAsyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,910 - INFO - Indexing document: pagination.BaseAsyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:40:19,911 - INFO - Indexing document: pagination.BaseAsyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,912 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,913 - INFO - Indexing document: pagination.BaseAsyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,916 - INFO - Indexing document: pagination.BasePage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:40:19,918 - INFO - Indexing document: pagination.BasePage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,920 - INFO - Indexing document: pagination.BasePage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,921 - INFO - Indexing document: pagination.BasePage.model_post_init - This function is meant to behave like a BaseModel method to initialise private attributes.

It takes context as an argument since that's what pydantic-core passes when calling it.

Args:
    self: The...
2024-11-27 14:40:19,923 - INFO - Indexing document: pagination.BasePage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,925 - INFO - Indexing document: pagination.BasePage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,927 - INFO - Indexing document: pagination.BasePage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,928 - INFO - Indexing document: pagination.BasePage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,930 - INFO - Indexing document: pagination.BaseSyncPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:40:19,932 - INFO - Indexing document: pagination.BaseSyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,933 - INFO - Indexing document: pagination.BaseSyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,935 - INFO - Indexing document: pagination.BaseSyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:40:19,936 - INFO - Indexing document: pagination.BaseSyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,937 - INFO - Indexing document: pagination.BaseSyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,939 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,941 - INFO - Indexing document: pagination.BaseSyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,942 - INFO - Indexing document: pagination.CursorPageItem - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 14:40:19,944 - INFO - Indexing document: pagination.Generic - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:19,946 - INFO - Indexing document: pagination.PageInfo - Stores the necessary information to build the request to retrieve the next page.

Either `url` or `params` must be set....
2024-11-27 14:40:19,948 - INFO - Indexing document: pagination.Protocol - Base class for protocol classes.

Protocol classes are defined as::

    class Proto(Protocol):
        def meth(self) -> int:
            ...

Such classes are primarily used with static type checker...
2024-11-27 14:40:19,950 - INFO - Indexing document: pagination.SyncCursorPage - Defines the core interface for pagination.

Type Args:
    ModelT: The pydantic model that represents an item in the response.

Methods:
    has_next_page(): Check if there is another page available
 ...
2024-11-27 14:40:19,952 - INFO - Indexing document: pagination.SyncCursorPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,954 - INFO - Indexing document: pagination.SyncCursorPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,956 - INFO - Indexing document: pagination.SyncCursorPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:40:19,957 - INFO - Indexing document: pagination.SyncCursorPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,959 - INFO - Indexing document: pagination.SyncCursorPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,960 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,962 - INFO - Indexing document: pagination.SyncCursorPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,964 - INFO - Indexing document: pagination.SyncPage - Note: no pagination actually occurs yet, this is for forwards-compatibility....
2024-11-27 14:40:19,964 - INFO - Indexing document: pagination.SyncPage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:19,966 - INFO - Indexing document: pagination.SyncPage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:19,967 - INFO - Indexing document: pagination.SyncPage.model_post_init - We need to both initialize private attributes and call the user-defined model_post_init
method....
2024-11-27 14:40:19,968 - INFO - Indexing document: pagination.SyncPage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:19,970 - INFO - Indexing document: pagination.SyncPage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:19,971 - INFO - Indexing document: pagination.SyncPage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:19,973 - INFO - Indexing document: pagination.SyncPage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:19,975 - INFO - Indexing document: pagination.SyncPage.next_page_info - This page represents a response that isn't actually paginated at the API level
so there will never be a next page....
2024-11-27 14:40:19,975 - INFO - Indexing document: pagination.runtime_checkable - Mark a protocol class as a runtime protocol.

Such protocol can be used with isinstance() and issubclass().
Raise TypeError if applied to a non-protocol class.
This allows a simple-minded structural c...
2024-11-27 14:40:19,977 - INFO - Indexing document: resources.AsyncBatches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 14:40:19,979 - INFO - Indexing document: resources.AsyncBatches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 14:40:19,981 - INFO - Indexing document: resources.AsyncBatches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 14:40:19,983 - INFO - Indexing document: resources.AsyncBatches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:40:19,986 - INFO - Indexing document: resources.AsyncEmbeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 14:40:19,987 - INFO - Indexing document: resources.AsyncFiles.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:40:19,989 - INFO - Indexing document: resources.AsyncFiles.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 14:40:19,991 - INFO - Indexing document: resources.AsyncFiles.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 14:40:19,994 - INFO - Indexing document: resources.AsyncFiles.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 14:40:19,995 - INFO - Indexing document: resources.AsyncFiles.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 14:40:19,997 - INFO - Indexing document: resources.AsyncFiles.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:40:19,999 - INFO - Indexing document: resources.AsyncFiles.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 14:40:19,999 - INFO - Indexing document: resources.AsyncImages.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 14:40:20,001 - INFO - Indexing document: resources.AsyncImages.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 14:40:20,003 - INFO - Indexing document: resources.AsyncImages.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 14:40:20,005 - INFO - Indexing document: resources.AsyncModels.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 14:40:20,007 - INFO - Indexing document: resources.AsyncModels.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 14:40:20,008 - INFO - Indexing document: resources.AsyncModels.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 14:40:20,010 - INFO - Indexing document: resources.AsyncModerations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 14:40:20,012 - INFO - Indexing document: resources.AsyncUploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 14:40:20,014 - INFO - Indexing document: resources.AsyncUploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 14:40:20,016 - INFO - Indexing document: resources.AsyncUploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 14:40:20,018 - INFO - Indexing document: resources.AsyncUploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 14:40:20,020 - INFO - Indexing document: resources.Batches.cancel - Cancels an in-progress batch.

The batch will be in status `cancelling` for up to
10 minutes, before changing to `cancelled`, where it will have partial results
(if any) available in the output file.
...
2024-11-27 14:40:20,022 - INFO - Indexing document: resources.Batches.create - Creates and executes a batch from an uploaded file of requests

Args:
  completion_window: The time frame within which the batch should be processed. Currently only `24h`
      is supported.

  endpoi...
2024-11-27 14:40:20,024 - INFO - Indexing document: resources.Batches.list - List your organization's batches.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and recei...
2024-11-27 14:40:20,026 - INFO - Indexing document: resources.Batches.retrieve - Retrieves a batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:40:20,028 - INFO - Indexing document: resources.Embeddings.create - Creates an embedding vector representing the input text.

Args:
  input: Input text to embed, encoded as a string or array of tokens. To embed multiple
      inputs in a single request, pass an array ...
2024-11-27 14:40:20,029 - INFO - Indexing document: resources.Files.content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:40:20,031 - INFO - Indexing document: resources.Files.create - Upload a file that can be used across various endpoints.

Individual files can be
up to 512 MB, and the size of all files uploaded by one organization can be up
to 100 GB.

The Assistants API supports...
2024-11-27 14:40:20,033 - INFO - Indexing document: resources.Files.delete - Delete a file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Overri...
2024-11-27 14:40:20,035 - INFO - Indexing document: resources.Files.list - Returns a list of files.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 100 ob...
2024-11-27 14:40:20,037 - INFO - Indexing document: resources.Files.retrieve - Returns information about a specific file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to th...
2024-11-27 14:40:20,038 - INFO - Indexing document: resources.Files.retrieve_content - Returns the contents of the specified file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to t...
2024-11-27 14:40:20,041 - INFO - Indexing document: resources.Files.wait_for_processing - Waits for the given file to be processed, default timeout is 30 mins....
2024-11-27 14:40:20,042 - INFO - Indexing document: resources.Images.create_variation - Creates a variation of a given image.

Args:
  image: The image to use as the basis for the variation(s). Must be a valid PNG file,
      less than 4MB, and square.

  model: The model to use for imag...
2024-11-27 14:40:20,043 - INFO - Indexing document: resources.Images.edit - Creates an edited or extended image given an original image and a prompt.

Args:
  image: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask
      is not provided, image m...
2024-11-27 14:40:20,045 - INFO - Indexing document: resources.Images.generate - Creates an image given a prompt.

Args:
  prompt: A text description of the desired image(s). The maximum length is 1000
      characters for `dall-e-2` and 4000 characters for `dall-e-3`.

  model: T...
2024-11-27 14:40:20,048 - INFO - Indexing document: resources.Models.delete - Delete a fine-tuned model.

You must have the Owner role in your organization to
delete a model.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the reque...
2024-11-27 14:40:20,050 - INFO - Indexing document: resources.Models.list - Lists the currently available models, and provides basic information about each
one such as the owner and availability....
2024-11-27 14:40:20,051 - INFO - Indexing document: resources.Models.retrieve - Retrieves a model instance, providing basic information about the model such as
the owner and permissioning.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters ...
2024-11-27 14:40:20,053 - INFO - Indexing document: resources.Moderations.create - Classifies if text and/or image inputs are potentially harmful.

Learn more in
the [moderation guide](https://platform.openai.com/docs/guides/moderation).

Args:
  input: Input (or inputs) to classify...
2024-11-27 14:40:20,054 - INFO - Indexing document: resources.Uploads.cancel - Cancels the Upload.

No Parts may be added after an Upload is cancelled.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add ad...
2024-11-27 14:40:20,057 - INFO - Indexing document: resources.Uploads.complete - Completes the
[Upload](https://platform.openai.com/docs/api-reference/uploads/object).

Within the returned Upload object, there is a nested
[File](https://platform.openai.com/docs/api-reference/files...
2024-11-27 14:40:20,058 - INFO - Indexing document: resources.Uploads.create - Creates an intermediate
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object
that you can add
[Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.
...
2024-11-27 14:40:20,061 - INFO - Indexing document: resources.Uploads.upload_file_chunked - Splits the given file into multiple parts and uploads them sequentially.

```py
from pathlib import Path

client.uploads.upload_file(
    file=Path("my-paper.pdf"),
    mime_type="pdf",
    purpose="a...
2024-11-27 14:40:20,064 - INFO - Indexing document: resources.audio.AsyncSpeech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 14:40:20,066 - INFO - Indexing document: resources.audio.AsyncTranscriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 14:40:20,068 - INFO - Indexing document: resources.audio.AsyncTranslations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 14:40:20,070 - INFO - Indexing document: resources.audio.Speech.create - Generates audio from the input text.

Args:
  input: The text to generate audio for. The maximum length is 4096 characters.

  model:
      One of the available [TTS models](https://platform.openai.co...
2024-11-27 14:40:20,072 - INFO - Indexing document: resources.audio.Transcriptions.create - Transcribes audio into the input language.

Args:
  file:
      The audio file object (not file name) to transcribe, in one of these formats:
      flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.
...
2024-11-27 14:40:20,075 - INFO - Indexing document: resources.audio.Translations.create - Translates audio into English.

Args:
  file: The audio file object (not file name) translate, in one of these formats: flac,
      mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

  model: ID of the mo...
2024-11-27 14:40:20,077 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:20,079 - INFO - Indexing document: resources.audio.speech.AsyncStreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 14:40:20,080 - INFO - Indexing document: resources.audio.speech.Body - The base class of the class hierarchy.

When called, it accepts no arguments and returns a new featureless
instance that has no instance attributes and cannot be given any....
2024-11-27 14:40:20,081 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:20,083 - INFO - Indexing document: resources.audio.speech.StreamedBinaryAPIResponse.stream_to_file - Streams the output to the given file.

Accepts a filename or any path-like object, e.g. pathlib.Path...
2024-11-27 14:40:20,084 - INFO - Indexing document: resources.audio.speech.async_maybe_transform - Wrapper over `async_transform()` that allows `None` to be passed.

See `async_transform()` for more details....
2024-11-27 14:40:20,085 - INFO - Indexing document: resources.audio.speech.async_to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 14:40:20,086 - INFO - Indexing document: resources.audio.speech.make_request_options - Create a dict of type RequestOptions without keys of NotGiven values....
2024-11-27 14:40:20,087 - INFO - Indexing document: resources.audio.speech.maybe_transform - Wrapper over `transform()` that allows `None` to be passed.

See `transform()` for more details....
2024-11-27 14:40:20,088 - INFO - Indexing document: resources.audio.speech.speech_create_params.SpeechCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,089 - INFO - Indexing document: resources.audio.speech.speech_create_params.TypedDict - A simple typed namespace. At runtime it is equivalent to a plain dict.

TypedDict creates a dictionary type such that a type checker will expect all
instances to have a certain set of keys, where each...
2024-11-27 14:40:20,091 - INFO - Indexing document: resources.audio.speech.to_custom_streamed_response_wrapper - Higher order function that takes one of our bound API methods and an `APIResponse` class
and wraps the method to support streaming and returning the given response class directly.

Note: the given `re...
2024-11-27 14:40:20,092 - INFO - Indexing document: resources.audio.transcriptions.Transcription - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,094 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,096 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,098 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,099 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,101 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,104 - INFO - Indexing document: resources.audio.transcriptions.Transcription.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,106 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,108 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,110 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,113 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,114 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,117 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,119 - INFO - Indexing document: resources.audio.transcriptions.TranscriptionVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,121 - INFO - Indexing document: resources.audio.transcriptions.assert_never - Statically assert that a line of code is unreachable.

Example::

    def int_or_str(arg: int | str) -> None:
        match arg:
            case int():
                print("It's an int")
          ...
2024-11-27 14:40:20,123 - INFO - Indexing document: resources.audio.transcriptions.async_to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 14:40:20,124 - INFO - Indexing document: resources.audio.transcriptions.deepcopy_minimal - Minimal reimplementation of copy.deepcopy() that will only copy certain object types:

- mappings, e.g. `dict`
- list

This is done for performance reasons....
2024-11-27 14:40:20,125 - INFO - Indexing document: resources.audio.transcriptions.extract_files - Recursively extract files from the given dictionary based on specified paths.

A path may look like this ['foo', 'files', '<array>', 'data'].

Note: this mutates the given dictionary....
2024-11-27 14:40:20,127 - INFO - Indexing document: resources.audio.transcriptions.to_streamed_response_wrapper - Higher order function that takes one of our bound API methods and wraps it
to support streaming and returning the raw `APIResponse` object directly....
2024-11-27 14:40:20,127 - INFO - Indexing document: resources.audio.transcriptions.transcription_create_params.TranscriptionCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,129 - INFO - Indexing document: resources.audio.translations.Translation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,131 - INFO - Indexing document: resources.audio.translations.Translation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,133 - INFO - Indexing document: resources.audio.translations.Translation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,136 - INFO - Indexing document: resources.audio.translations.Translation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,137 - INFO - Indexing document: resources.audio.translations.Translation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,139 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,141 - INFO - Indexing document: resources.audio.translations.Translation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,142 - INFO - Indexing document: resources.audio.translations.TranslationVerbose - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,146 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,147 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,149 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,151 - INFO - Indexing document: resources.audio.translations.TranslationVerbose.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,153 - INFO - Indexing document: resources.audio.translations.translation_create_params.TranslationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,154 - INFO - Indexing document: resources.batches.AsyncPaginator - Abstract base class for generic types.

On Python 3.12 and newer, generic classes implicitly inherit from
Generic when they declare a parameter list after the class's name::

    class Mapping[KT, VT]...
2024-11-27 14:40:20,156 - INFO - Indexing document: resources.batches.Batch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,158 - INFO - Indexing document: resources.batches.Batch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,160 - INFO - Indexing document: resources.batches.Batch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,162 - INFO - Indexing document: resources.batches.Batch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,163 - INFO - Indexing document: resources.batches.Batch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,166 - INFO - Indexing document: resources.batches.Batch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,167 - INFO - Indexing document: resources.batches.Batch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,169 - INFO - Indexing document: resources.batches.batch_create_params.BatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,170 - INFO - Indexing document: resources.batches.batch_list_params.BatchListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,172 - INFO - Indexing document: resources.beta.Assistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 14:40:20,174 - INFO - Indexing document: resources.beta.Assistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 14:40:20,177 - INFO - Indexing document: resources.beta.Assistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 14:40:20,179 - INFO - Indexing document: resources.beta.Assistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 14:40:20,181 - INFO - Indexing document: resources.beta.AsyncAssistants.create - Create an assistant with a model and instructions.

Args:
  model: ID of the model to use. You can use the
      [List models](https://platform.openai.com/docs/api-reference/models/list) API to
      ...
2024-11-27 14:40:20,183 - INFO - Indexing document: resources.beta.AsyncAssistants.delete - Delete an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: ...
2024-11-27 14:40:20,185 - INFO - Indexing document: resources.beta.AsyncAssistants.list - Returns a list of assistants.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receive 1...
2024-11-27 14:40:20,187 - INFO - Indexing document: resources.beta.AsyncAssistants.retrieve - Retrieves an assistant.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeou...
2024-11-27 14:40:20,189 - INFO - Indexing document: resources.beta.AsyncThreads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 14:40:20,191 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:40:20,193 - INFO - Indexing document: resources.beta.AsyncThreads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 14:40:20,193 - INFO - Indexing document: resources.beta.AsyncThreads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:40:20,198 - INFO - Indexing document: resources.beta.AsyncThreads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:40:20,201 - INFO - Indexing document: resources.beta.AsyncVectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 14:40:20,203 - INFO - Indexing document: resources.beta.AsyncVectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 14:40:20,205 - INFO - Indexing document: resources.beta.AsyncVectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 14:40:20,208 - INFO - Indexing document: resources.beta.AsyncVectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 14:40:20,210 - INFO - Indexing document: resources.beta.Threads.create - Create a thread.

Args:
  messages: A list of [messages](https://platform.openai.com/docs/api-reference/messages) to
      start the thread with.

  metadata: Set of 16 key-value pairs that can be att...
2024-11-27 14:40:20,212 - INFO - Indexing document: resources.beta.Threads.create_and_run_poll - A helper to create a thread, start a run and then poll for a terminal state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:40:20,213 - INFO - Indexing document: resources.beta.Threads.create_and_run_stream - Create a thread and stream the run back...
2024-11-27 14:40:20,213 - INFO - Indexing document: resources.beta.Threads.delete - Delete a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:40:20,215 - INFO - Indexing document: resources.beta.Threads.retrieve - Retrieves a thread.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:40:20,217 - INFO - Indexing document: resources.beta.VectorStores.create - Create a vector store.

Args:
  chunking_strategy: The chunking strategy used to chunk the file(s). If not set, will use the `auto`
      strategy. Only applicable if `file_ids` is non-empty.

  expir...
2024-11-27 14:40:20,219 - INFO - Indexing document: resources.beta.VectorStores.delete - Delete a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout...
2024-11-27 14:40:20,221 - INFO - Indexing document: resources.beta.VectorStores.list - Returns a list of vector stores.

Args:
  after: A cursor for use in pagination.

`after` is an object ID that defines your place
      in the list. For instance, if you make a list request and receiv...
2024-11-27 14:40:20,223 - INFO - Indexing document: resources.beta.VectorStores.retrieve - Retrieves a vector store.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  time...
2024-11-27 14:40:20,225 - INFO - Indexing document: resources.beta.assistants.Assistant - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,228 - INFO - Indexing document: resources.beta.assistants.Assistant.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,230 - INFO - Indexing document: resources.beta.assistants.Assistant.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,232 - INFO - Indexing document: resources.beta.assistants.Assistant.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,234 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,236 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,238 - INFO - Indexing document: resources.beta.assistants.Assistant.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,240 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,242 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,244 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,246 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,247 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,249 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,250 - INFO - Indexing document: resources.beta.assistants.AssistantDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,252 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.AssistantCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,254 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,255 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,257 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,259 - INFO - Indexing document: resources.beta.assistants.assistant_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,261 - INFO - Indexing document: resources.beta.assistants.assistant_list_params.AssistantListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,263 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.AssistantUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,264 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,266 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,268 - INFO - Indexing document: resources.beta.assistants.assistant_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,270 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 14:40:20,271 - INFO - Indexing document: resources.beta.chat.AsyncCompletions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 14:40:20,273 - INFO - Indexing document: resources.beta.chat.Completions.parse - Wrapper over the `client.chat.completions.create()` method that provides richer integrations with Python specific types
& returns a `ParsedChatCompletion` object, which is a subclass of the standard `...
2024-11-27 14:40:20,274 - INFO - Indexing document: resources.beta.chat.Completions.stream - Wrapper over the `client.chat.completions.create(stream=True)` method that provides a more granular event API
and automatic accumulation of each delta.

This also supports all of the parsing utilities...
2024-11-27 14:40:20,275 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,278 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,279 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,281 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,282 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,284 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,286 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,287 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,289 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,291 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,294 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,295 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,297 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,299 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,302 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionChunk.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,303 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionPredictionContentParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,305 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionStreamOptionsParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,307 - INFO - Indexing document: resources.beta.chat.completions.ChatCompletionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,308 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,310 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,312 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,313 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,314 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,316 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,318 - INFO - Indexing document: resources.beta.chat.completions.ParsedChatCompletion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,320 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ChatCompletionFunctionCallOptionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,322 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,324 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,326 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,328 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,329 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONObject - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,331 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatJSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,333 - INFO - Indexing document: resources.beta.chat.completions.completion_create_params.ResponseFormatText - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,335 - INFO - Indexing document: resources.beta.chat.completions.partial - partial(func, *args, **keywords) - new function with partial application
of the given arguments and keywords....
2024-11-27 14:40:20,336 - INFO - Indexing document: resources.beta.threads.AsyncMessages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 14:40:20,338 - INFO - Indexing document: resources.beta.threads.AsyncMessages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:40:20,340 - INFO - Indexing document: resources.beta.threads.AsyncMessages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 14:40:20,341 - INFO - Indexing document: resources.beta.threads.AsyncMessages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:40:20,343 - INFO - Indexing document: resources.beta.threads.AsyncRuns.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:40:20,345 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:40:20,346 - INFO - Indexing document: resources.beta.threads.AsyncRuns.create_and_stream - Create a Run stream...
2024-11-27 14:40:20,346 - INFO - Indexing document: resources.beta.threads.AsyncRuns.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 14:40:20,348 - INFO - Indexing document: resources.beta.threads.AsyncRuns.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:40:20,349 - INFO - Indexing document: resources.beta.threads.AsyncRuns.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:40:20,354 - INFO - Indexing document: resources.beta.threads.AsyncRuns.stream - Create a Run stream...
2024-11-27 14:40:20,354 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:40:20,356 - INFO - Indexing document: resources.beta.threads.AsyncRuns.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 14:40:20,357 - INFO - Indexing document: resources.beta.threads.Messages.create - Create a message.

Args:
  content: The text contents of the message.

  role:
      The role of the entity that is creating the message. Allowed values include:

      - `user`: Indicates the message...
2024-11-27 14:40:20,359 - INFO - Indexing document: resources.beta.threads.Messages.delete - Deletes a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Ov...
2024-11-27 14:40:20,362 - INFO - Indexing document: resources.beta.threads.Messages.list - Returns a list of messages for a given thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reque...
2024-11-27 14:40:20,364 - INFO - Indexing document: resources.beta.threads.Messages.retrieve - Retrieve a message.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: O...
2024-11-27 14:40:20,365 - INFO - Indexing document: resources.beta.threads.Runs.cancel - Cancels a run that is `in_progress`.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:40:20,367 - INFO - Indexing document: resources.beta.threads.Runs.create_and_poll - A helper to create a run an poll for a terminal state. More information on Run
lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:40:20,368 - INFO - Indexing document: resources.beta.threads.Runs.create_and_stream - Create a Run stream...
2024-11-27 14:40:20,368 - INFO - Indexing document: resources.beta.threads.Runs.list - Returns a list of runs belonging to a thread.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list reques...
2024-11-27 14:40:20,370 - INFO - Indexing document: resources.beta.threads.Runs.poll - A helper to poll a run status until it reaches a terminal state. More
information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps...
2024-11-27 14:40:20,371 - INFO - Indexing document: resources.beta.threads.Runs.retrieve - Retrieves a run.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

  timeout: Over...
2024-11-27 14:40:20,373 - INFO - Indexing document: resources.beta.threads.Runs.stream - Create a Run stream...
2024-11-27 14:40:20,373 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_and_poll - A helper to submit a tool output to a run and poll for a terminal run state.
More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-and-run...
2024-11-27 14:40:20,374 - INFO - Indexing document: resources.beta.threads.Runs.submit_tool_outputs_stream - Submit the tool outputs from a previous run and stream the run to a terminal
state. More information on Run lifecycles can be found here:
https://platform.openai.com/docs/assistants/how-it-works/runs-...
2024-11-27 14:40:20,376 - INFO - Indexing document: resources.beta.threads.messages.Message - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,378 - INFO - Indexing document: resources.beta.threads.messages.Message.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,380 - INFO - Indexing document: resources.beta.threads.messages.Message.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,381 - INFO - Indexing document: resources.beta.threads.messages.Message.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,383 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,385 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,387 - INFO - Indexing document: resources.beta.threads.messages.Message.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,389 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,390 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,392 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,395 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,396 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,398 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,400 - INFO - Indexing document: resources.beta.threads.messages.MessageDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,401 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.Attachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,403 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.AttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,405 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.CodeInterpreterToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,406 - INFO - Indexing document: resources.beta.threads.messages.message_create_params.MessageCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,408 - INFO - Indexing document: resources.beta.threads.messages.message_list_params.MessageListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,409 - INFO - Indexing document: resources.beta.threads.messages.message_update_params.MessageUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,411 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 14:40:20,412 - INFO - Indexing document: resources.beta.threads.runs.AsyncSteps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 14:40:20,415 - INFO - Indexing document: resources.beta.threads.runs.Steps.list - Returns a list of run steps belonging to a run.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list requ...
2024-11-27 14:40:20,416 - INFO - Indexing document: resources.beta.threads.runs.Steps.retrieve - Retrieves a run step.

Args:
  include: A list of additional fields to include in the response. Currently the only
      supported value is `step_details.tool_calls[*].file_search.results[*].content`
...
2024-11-27 14:40:20,419 - INFO - Indexing document: resources.beta.threads.runs.runs.Run - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,421 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,423 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,425 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,426 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,428 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,430 - INFO - Indexing document: resources.beta.threads.runs.runs.Run.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,431 - INFO - Indexing document: resources.beta.threads.runs.runs.required_args - Decorator to enforce a given set of arguments or variants of arguments are passed to the decorated function.

Useful for enforcing runtime validation of overloaded functions.

Example usage:
```py
@ov...
2024-11-27 14:40:20,433 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,435 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,436 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.AdditionalMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,438 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,439 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,441 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.RunCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,443 - INFO - Indexing document: resources.beta.threads.runs.runs.run_create_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,444 - INFO - Indexing document: resources.beta.threads.runs.runs.run_list_params.RunListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,448 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,449 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,451 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.RunSubmitToolOutputsParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,453 - INFO - Indexing document: resources.beta.threads.runs.runs.run_submit_tool_outputs_params.ToolOutput - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,455 - INFO - Indexing document: resources.beta.threads.runs.runs.run_update_params.RunUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,457 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,459 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,461 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,463 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,464 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,466 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,468 - INFO - Indexing document: resources.beta.threads.runs.steps.RunStep.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,470 - INFO - Indexing document: resources.beta.threads.runs.steps.step_list_params.StepListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,471 - INFO - Indexing document: resources.beta.threads.runs.steps.step_retrieve_params.StepRetrieveParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,473 - INFO - Indexing document: resources.beta.threads.threads.Thread - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,475 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,477 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,480 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,481 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,483 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,485 - INFO - Indexing document: resources.beta.threads.threads.Thread.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,487 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,489 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,491 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,493 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,495 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,497 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,499 - INFO - Indexing document: resources.beta.threads.threads.ThreadDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,500 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FileSearchToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,502 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.FunctionToolParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,504 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.Thread - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,505 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,507 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,510 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadCreateAndRunParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,512 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessage - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,513 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,515 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadMessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,517 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,519 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,520 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,522 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ThreadToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,524 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,526 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,527 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,529 - INFO - Indexing document: resources.beta.threads.threads.thread_create_and_run_params.TruncationStrategy - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,531 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.Message - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,532 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachment - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,533 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.MessageAttachmentToolFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,535 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ThreadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,537 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,540 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,542 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,544 - INFO - Indexing document: resources.beta.threads.threads.thread_create_params.ToolResourcesFileSearchVectorStore - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,546 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ThreadUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,547 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResources - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,549 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesCodeInterpreter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,551 - INFO - Indexing document: resources.beta.threads.threads.thread_update_params.ToolResourcesFileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,553 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 14:40:20,555 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 14:40:20,557 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 14:40:20,557 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 14:40:20,559 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 14:40:20,560 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:40:20,562 - INFO - Indexing document: resources.beta.vector_stores.AsyncFileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 14:40:20,563 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 14:40:20,565 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 14:40:20,566 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 14:40:20,567 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 14:40:20,569 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 14:40:20,570 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 14:40:20,573 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 14:40:20,575 - INFO - Indexing document: resources.beta.vector_stores.AsyncFiles.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 14:40:20,576 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.cancel - Cancel a vector store file batch.

This attempts to cancel the processing of
files in this batch as soon as possible.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query pa...
2024-11-27 14:40:20,578 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create - Create a vector store file batch.

Args:
  file_ids: A list of [File](https://platform.openai.com/docs/api-reference/files) IDs that
      the vector store should use. Useful for tools like `file_sear...
2024-11-27 14:40:20,580 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.create_and_poll - Create a vector store batch and poll until all files have been processed....
2024-11-27 14:40:20,581 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.list_files - Returns a list of vector store files in a batch.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list req...
2024-11-27 14:40:20,582 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.poll - Wait for the given file batch to be processed.

Note: this will return even if one of the files failed to process, you need to
check batch.file_counts.failed_count to handle this case....
2024-11-27 14:40:20,584 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.retrieve - Retrieves a vector store file batch.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the requ...
2024-11-27 14:40:20,586 - INFO - Indexing document: resources.beta.vector_stores.FileBatches.upload_and_poll - Uploads the given files concurrently and then creates a vector store file batch.

If you've already uploaded certain files that you want to include in this batch
then you can pass their IDs through th...
2024-11-27 14:40:20,587 - INFO - Indexing document: resources.beta.vector_stores.Files.create - Create a vector store file by attaching a
[File](https://platform.openai.com/docs/api-reference/files) to a
[vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).

Args:
...
2024-11-27 14:40:20,589 - INFO - Indexing document: resources.beta.vector_stores.Files.create_and_poll - Attach a file to the given vector store and wait for it to be processed....
2024-11-27 14:40:20,589 - INFO - Indexing document: resources.beta.vector_stores.Files.delete - Delete a vector store file.

This will remove the file from the vector store but
the file itself will not be deleted. To delete the file, use the
[delete file](https://platform.openai.com/docs/api-ref...
2024-11-27 14:40:20,591 - INFO - Indexing document: resources.beta.vector_stores.Files.list - Returns a list of vector store files.

Args:
  after: A cursor for use in pagination. `after` is an object ID that defines your place
      in the list. For instance, if you make a list request and re...
2024-11-27 14:40:20,592 - INFO - Indexing document: resources.beta.vector_stores.Files.poll - Wait for the vector store file to finish processing.

Note: this will return even if the file failed to process, you need to check
file.last_error and file.status to handle these cases...
2024-11-27 14:40:20,593 - INFO - Indexing document: resources.beta.vector_stores.Files.retrieve - Retrieves a vector store file.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the request

 ...
2024-11-27 14:40:20,595 - INFO - Indexing document: resources.beta.vector_stores.Files.upload - Upload a file to the `files` API and then attach it to the given vector store.

Note the file will be asynchronously processed (you can use the alternative
polling helper method to wait for processing...
2024-11-27 14:40:20,596 - INFO - Indexing document: resources.beta.vector_stores.Files.upload_and_poll - Add a file to a vector store and poll until processing is complete....
2024-11-27 14:40:20,597 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,599 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,601 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,602 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,604 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,606 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,607 - INFO - Indexing document: resources.beta.vector_stores.file_batches.FileObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,609 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future - Represents the result of an asynchronous computation....
2024-11-27 14:40:20,610 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.add_done_callback - Attaches a callable that will be called when the future finishes.

Args:
    fn: A callable that will be called with this future as its only
        argument when the future completes or is cancelled....
2024-11-27 14:40:20,612 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancel - Cancel the future if possible.

Returns True if the future was cancelled, False otherwise. A future
cannot be cancelled if it is running or has already completed....
2024-11-27 14:40:20,613 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.cancelled - Return True if the future was cancelled....
2024-11-27 14:40:20,614 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.done - Return True if the future was cancelled or finished executing....
2024-11-27 14:40:20,614 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.exception - Return the exception raised by the call that the future represents.

Args:
    timeout: The number of seconds to wait for the exception if the
        future isn't done. If None, then there is no limi...
2024-11-27 14:40:20,616 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.result - Return the result of the call that the future represents.

Args:
    timeout: The number of seconds to wait for the result if the future
        isn't done. If None, then there is no limit on the wait...
2024-11-27 14:40:20,617 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.running - Return True if the future is currently executing....
2024-11-27 14:40:20,618 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_exception - Sets the result of the future as being the given exception.

Should only be used by Executor implementations and unit tests....
2024-11-27 14:40:20,619 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_result - Sets the return value of work associated with the future.

Should only be used by Executor implementations and unit tests....
2024-11-27 14:40:20,620 - INFO - Indexing document: resources.beta.vector_stores.file_batches.Future.set_running_or_notify_cancel - Mark the future as running or process any cancel notifications.

Should only be used by Executor implementations and unit tests.

If the future has been cancelled (cancel() was called and returned
Tru...
2024-11-27 14:40:20,622 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor - This is an abstract base class for concrete asynchronous executors....
2024-11-27 14:40:20,622 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.map - Returns an iterator equivalent to map(fn, iter).

Args:
    fn: A callable that will take as many arguments as there are
        passed iterables.
    timeout: The maximum number of seconds to wait. I...
2024-11-27 14:40:20,624 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.shutdown - Clean-up the resources associated with the Executor.

It is safe to call this method several times. Otherwise, no other
methods can be called after this one.

Args:
    wait: If True then shutdown wil...
2024-11-27 14:40:20,626 - INFO - Indexing document: resources.beta.vector_stores.file_batches.ThreadPoolExecutor.submit - Submits a callable to be executed with the given arguments.

Schedules the callable to be executed as fn(*args, **kwargs) and returns
a Future instance representing the execution of the callable.

Ret...
2024-11-27 14:40:20,627 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,630 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,631 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,633 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,635 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,637 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,639 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,640 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,643 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,645 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,647 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,648 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,650 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,652 - INFO - Indexing document: resources.beta.vector_stores.file_batches.VectorStoreFileBatch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,654 - INFO - Indexing document: resources.beta.vector_stores.file_batches.as_completed - An iterator over the given futures that yields each as it completes.

Args:
    fs: The sequence of Futures (possibly created by different Executors) to
        iterate over.
    timeout: The maximum ...
2024-11-27 14:40:20,655 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_create_params.FileBatchCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,657 - INFO - Indexing document: resources.beta.vector_stores.file_batches.file_batch_list_files_params.FileBatchListFilesParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,659 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,661 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,663 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,665 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,667 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,669 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,671 - INFO - Indexing document: resources.beta.vector_stores.files.VectorStoreFileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,673 - INFO - Indexing document: resources.beta.vector_stores.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,675 - INFO - Indexing document: resources.beta.vector_stores.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,676 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,678 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,680 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,682 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,683 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,685 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,687 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStore.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,689 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,691 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,693 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,695 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,696 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,699 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,701 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.VectorStoreDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,702 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,704 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_create_params.VectorStoreCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,706 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_list_params.VectorStoreListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,707 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.ExpiresAfter - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,709 - INFO - Indexing document: resources.beta.vector_stores.vector_stores.vector_store_update_params.VectorStoreUpdateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,711 - INFO - Indexing document: resources.completions.Completion - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,713 - INFO - Indexing document: resources.completions.Completion.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,715 - INFO - Indexing document: resources.completions.Completion.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,716 - INFO - Indexing document: resources.completions.Completion.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,718 - INFO - Indexing document: resources.completions.Completion.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,719 - INFO - Indexing document: resources.completions.Completion.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,721 - INFO - Indexing document: resources.completions.Completion.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,722 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsBase - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,724 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsNonStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,726 - INFO - Indexing document: resources.completions.completion_create_params.CompletionCreateParamsStreaming - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,728 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,731 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,733 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,735 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,736 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,738 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,740 - INFO - Indexing document: resources.embeddings.CreateEmbeddingResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,742 - INFO - Indexing document: resources.embeddings.embedding_create_params.EmbeddingCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,743 - INFO - Indexing document: resources.files.FileDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,745 - INFO - Indexing document: resources.files.FileDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,747 - INFO - Indexing document: resources.files.FileDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,748 - INFO - Indexing document: resources.files.FileDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,750 - INFO - Indexing document: resources.files.FileDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,752 - INFO - Indexing document: resources.files.FileDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,753 - INFO - Indexing document: resources.files.FileDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,755 - INFO - Indexing document: resources.files.file_create_params.FileCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,757 - INFO - Indexing document: resources.files.file_list_params.FileListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,758 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 14:40:20,761 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 14:40:20,763 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 14:40:20,765 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 14:40:20,767 - INFO - Indexing document: resources.fine_tuning.AsyncJobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 14:40:20,768 - INFO - Indexing document: resources.fine_tuning.Jobs.cancel - Immediately cancel a fine-tune job.

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query parameters to the request

  extra_body: Add additional JSON properties to the reque...
2024-11-27 14:40:20,772 - INFO - Indexing document: resources.fine_tuning.Jobs.create - Creates a fine-tuning job which begins the process of creating a new model from
a given dataset.

Response includes details of the enqueued job including job status and the name
of the fine-tuned mode...
2024-11-27 14:40:20,774 - INFO - Indexing document: resources.fine_tuning.Jobs.list - List your organization's fine-tuning jobs

Args:
  after: Identifier for the last job from the previous pagination request.

  limit: Number of fine-tuning jobs to retrieve.

  extra_headers: Send ext...
2024-11-27 14:40:20,776 - INFO - Indexing document: resources.fine_tuning.Jobs.list_events - Get status updates for a fine-tuning job.

Args:
  after: Identifier for the last event from the previous pagination request.

  limit: Number of events to retrieve.

  extra_headers: Send extra heade...
2024-11-27 14:40:20,778 - INFO - Indexing document: resources.fine_tuning.Jobs.retrieve - Get info about a fine-tuning job.

[Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)

Args:
  extra_headers: Send extra headers

  extra_query: Add additional query p...
2024-11-27 14:40:20,780 - INFO - Indexing document: resources.fine_tuning.jobs.AsyncCheckpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 14:40:20,782 - INFO - Indexing document: resources.fine_tuning.jobs.Checkpoints.list - List checkpoints for a fine-tuning job.

Args:
  after: Identifier for the last checkpoint ID from the previous pagination request.

  limit: Number of checkpoints to retrieve.

  extra_headers: Send ...
2024-11-27 14:40:20,784 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,786 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,787 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,789 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,791 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,794 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,796 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.FineTuningJobCheckpoint.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,798 - INFO - Indexing document: resources.fine_tuning.jobs.checkpoints.checkpoint_list_params.CheckpointListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,800 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,803 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,805 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,806 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,808 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,809 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,811 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,813 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,815 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,817 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,818 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,820 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,822 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,824 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.FineTuningJobEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,826 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Hyperparameters - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,827 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.Integration - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,829 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.IntegrationWandb - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,831 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_create_params.JobCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,833 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_events_params.JobListEventsParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,835 - INFO - Indexing document: resources.fine_tuning.jobs.jobs.job_list_params.JobListParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,836 - INFO - Indexing document: resources.images.ImagesResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,838 - INFO - Indexing document: resources.images.ImagesResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,840 - INFO - Indexing document: resources.images.ImagesResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,841 - INFO - Indexing document: resources.images.ImagesResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,843 - INFO - Indexing document: resources.images.ImagesResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,844 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,846 - INFO - Indexing document: resources.images.ImagesResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,848 - INFO - Indexing document: resources.images.image_create_variation_params.ImageCreateVariationParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,849 - INFO - Indexing document: resources.images.image_edit_params.ImageEditParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,851 - INFO - Indexing document: resources.images.image_generate_params.ImageGenerateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,853 - INFO - Indexing document: resources.models.Model - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,855 - INFO - Indexing document: resources.models.Model.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,857 - INFO - Indexing document: resources.models.Model.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,859 - INFO - Indexing document: resources.models.Model.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,860 - INFO - Indexing document: resources.models.Model.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,862 - INFO - Indexing document: resources.models.Model.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,864 - INFO - Indexing document: resources.models.Model.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,865 - INFO - Indexing document: resources.models.ModelDeleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,867 - INFO - Indexing document: resources.models.ModelDeleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,869 - INFO - Indexing document: resources.models.ModelDeleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,871 - INFO - Indexing document: resources.models.ModelDeleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,872 - INFO - Indexing document: resources.models.ModelDeleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,874 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,876 - INFO - Indexing document: resources.models.ModelDeleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,877 - INFO - Indexing document: resources.moderations.ModerationCreateResponse - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,879 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,881 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,883 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,884 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,887 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,889 - INFO - Indexing document: resources.moderations.ModerationCreateResponse.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,891 - INFO - Indexing document: resources.moderations.moderation_create_params.ModerationCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,894 - INFO - Indexing document: resources.uploads.AsyncParts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 14:40:20,895 - INFO - Indexing document: resources.uploads.Parts.create - Adds a
[Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an
[Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.
A Part represents a chunk of byt...
2024-11-27 14:40:20,897 - INFO - Indexing document: resources.uploads.parts.UploadPart - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,899 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,901 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,902 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,904 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,905 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,907 - INFO - Indexing document: resources.uploads.parts.UploadPart.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,909 - INFO - Indexing document: resources.uploads.parts.part_create_params.PartCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,910 - INFO - Indexing document: resources.uploads.uploads.Path - PurePath subclass that can make system calls.

Path represents a filesystem path but unlike PurePath, also offers
methods to do system calls on path objects. Depending on your system,
instantiating a ...
2024-11-27 14:40:20,912 - INFO - Indexing document: resources.uploads.uploads.Path.absolute - Return an absolute version of this path by prepending the current
working directory. No normalization or symlink resolution is performed.

Use resolve() to get the canonical path to a file....
2024-11-27 14:40:20,913 - INFO - Indexing document: resources.uploads.uploads.Path.anchor - The concatenation of the drive and root, or ''....
2024-11-27 14:40:20,913 - INFO - Indexing document: resources.uploads.uploads.Path.as_posix - Return the string representation of the path with forward (/)
slashes....
2024-11-27 14:40:20,915 - INFO - Indexing document: resources.uploads.uploads.Path.as_uri - Return the path as a 'file' URI....
2024-11-27 14:40:20,916 - INFO - Indexing document: resources.uploads.uploads.Path.chmod - Change the permissions of the path, like os.chmod()....
2024-11-27 14:40:20,917 - INFO - Indexing document: resources.uploads.uploads.Path.cwd - Return a new path pointing to the current working directory....
2024-11-27 14:40:20,918 - INFO - Indexing document: resources.uploads.uploads.Path.drive - The drive prefix (letter or UNC path), if any....
2024-11-27 14:40:20,918 - INFO - Indexing document: resources.uploads.uploads.Path.exists - Whether this path exists.

This method normally follows symlinks; to check whether a symlink exists,
add the argument follow_symlinks=False....
2024-11-27 14:40:20,919 - INFO - Indexing document: resources.uploads.uploads.Path.expanduser - Return a new path with expanded ~ and ~user constructs
(as returned by os.path.expanduser)...
2024-11-27 14:40:20,920 - INFO - Indexing document: resources.uploads.uploads.Path.glob - Iterate over this subtree and yield all existing files (of any
kind, including directories) matching the given relative pattern....
2024-11-27 14:40:20,921 - INFO - Indexing document: resources.uploads.uploads.Path.group - Return the group name of the file gid....
2024-11-27 14:40:20,922 - INFO - Indexing document: resources.uploads.uploads.Path.hardlink_to - Make this path a hard link pointing to the same file as *target*.

Note the order of arguments (self, target) is the reverse of os.link's....
2024-11-27 14:40:20,922 - INFO - Indexing document: resources.uploads.uploads.Path.home - Return a new path pointing to the user's home directory (as
returned by os.path.expanduser('~'))....
2024-11-27 14:40:20,923 - INFO - Indexing document: resources.uploads.uploads.Path.is_absolute - True if the path is absolute (has both a root and, if applicable,
a drive)....
2024-11-27 14:40:20,924 - INFO - Indexing document: resources.uploads.uploads.Path.is_block_device - Whether this path is a block device....
2024-11-27 14:40:20,925 - INFO - Indexing document: resources.uploads.uploads.Path.is_char_device - Whether this path is a character device....
2024-11-27 14:40:20,925 - INFO - Indexing document: resources.uploads.uploads.Path.is_dir - Whether this path is a directory....
2024-11-27 14:40:20,926 - INFO - Indexing document: resources.uploads.uploads.Path.is_fifo - Whether this path is a FIFO....
2024-11-27 14:40:20,927 - INFO - Indexing document: resources.uploads.uploads.Path.is_file - Whether this path is a regular file (also True for symlinks pointing
to regular files)....
2024-11-27 14:40:20,927 - INFO - Indexing document: resources.uploads.uploads.Path.is_junction - Whether this path is a junction....
2024-11-27 14:40:20,928 - INFO - Indexing document: resources.uploads.uploads.Path.is_mount - Check if this path is a mount point...
2024-11-27 14:40:20,929 - INFO - Indexing document: resources.uploads.uploads.Path.is_relative_to - Return True if the path is relative to another path or False.
        ...
2024-11-27 14:40:20,929 - INFO - Indexing document: resources.uploads.uploads.Path.is_reserved - Return True if the path contains one of the special names reserved
by the system, if any....
2024-11-27 14:40:20,930 - INFO - Indexing document: resources.uploads.uploads.Path.is_socket - Whether this path is a socket....
2024-11-27 14:40:20,931 - INFO - Indexing document: resources.uploads.uploads.Path.is_symlink - Whether this path is a symbolic link....
2024-11-27 14:40:20,931 - INFO - Indexing document: resources.uploads.uploads.Path.iterdir - Yield path objects of the directory contents.

The children are yielded in arbitrary order, and the
special entries '.' and '..' are not included....
2024-11-27 14:40:20,932 - INFO - Indexing document: resources.uploads.uploads.Path.joinpath - Combine this path with one or several arguments, and return a
new path representing either a subpath (if all arguments are relative
paths) or a totally different path (if one of the arguments is
ancho...
2024-11-27 14:40:20,933 - INFO - Indexing document: resources.uploads.uploads.Path.lchmod - Like chmod(), except if the path points to a symlink, the symlink's
permissions are changed, rather than its target's....
2024-11-27 14:40:20,934 - INFO - Indexing document: resources.uploads.uploads.Path.lstat - Like stat(), except if the path points to a symlink, the symlink's
status information is returned, rather than its target's....
2024-11-27 14:40:20,935 - INFO - Indexing document: resources.uploads.uploads.Path.match - Return True if this path matches the given pattern....
2024-11-27 14:40:20,936 - INFO - Indexing document: resources.uploads.uploads.Path.mkdir - Create a new directory at this given path....
2024-11-27 14:40:20,936 - INFO - Indexing document: resources.uploads.uploads.Path.name - The final path component, if any....
2024-11-27 14:40:20,936 - INFO - Indexing document: resources.uploads.uploads.Path.open - Open the file pointed by this path and return a file object, as
the built-in open() function does....
2024-11-27 14:40:20,937 - INFO - Indexing document: resources.uploads.uploads.Path.owner - Return the login name of the file owner....
2024-11-27 14:40:20,938 - INFO - Indexing document: resources.uploads.uploads.Path.parent - The logical parent of the path....
2024-11-27 14:40:20,938 - INFO - Indexing document: resources.uploads.uploads.Path.parents - A sequence of this path's logical parents....
2024-11-27 14:40:20,939 - INFO - Indexing document: resources.uploads.uploads.Path.parts - An object providing sequence-like access to the
components in the filesystem path....
2024-11-27 14:40:20,939 - INFO - Indexing document: resources.uploads.uploads.Path.read_bytes - Open the file in bytes mode, read it, and close the file....
2024-11-27 14:40:20,940 - INFO - Indexing document: resources.uploads.uploads.Path.read_text - Open the file in text mode, read it, and close the file....
2024-11-27 14:40:20,941 - INFO - Indexing document: resources.uploads.uploads.Path.readlink - Return the path to which the symbolic link points....
2024-11-27 14:40:20,942 - INFO - Indexing document: resources.uploads.uploads.Path.relative_to - Return the relative path to another path identified by the passed
arguments.  If the operation is not possible (because this is not
related to the other path), raise ValueError.

The *walk_up* paramet...
2024-11-27 14:40:20,943 - INFO - Indexing document: resources.uploads.uploads.Path.rename - Rename this path to the target path.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
directory of the Path object.

Re...
2024-11-27 14:40:20,945 - INFO - Indexing document: resources.uploads.uploads.Path.replace - Rename this path to the target path, overwriting if that path exists.

The target path may be absolute or relative. Relative paths are
interpreted relative to the current working directory, *not* the
...
2024-11-27 14:40:20,946 - INFO - Indexing document: resources.uploads.uploads.Path.resolve - Make the path absolute, resolving all symlinks on the way and also
normalizing it....
2024-11-27 14:40:20,948 - INFO - Indexing document: resources.uploads.uploads.Path.rglob - Recursively yield all existing files (of any kind, including
directories) matching the given relative pattern, anywhere in
this subtree....
2024-11-27 14:40:20,949 - INFO - Indexing document: resources.uploads.uploads.Path.rmdir - Remove this directory.  The directory must be empty....
2024-11-27 14:40:20,950 - INFO - Indexing document: resources.uploads.uploads.Path.root - The root of the path, if any....
2024-11-27 14:40:20,951 - INFO - Indexing document: resources.uploads.uploads.Path.samefile - Return whether other_path is the same or not as this file
(as returned by os.path.samefile())....
2024-11-27 14:40:20,951 - INFO - Indexing document: resources.uploads.uploads.Path.stat - Return the result of the stat() system call on this path, like
os.stat() does....
2024-11-27 14:40:20,952 - INFO - Indexing document: resources.uploads.uploads.Path.stem - The final path component, minus its last suffix....
2024-11-27 14:40:20,953 - INFO - Indexing document: resources.uploads.uploads.Path.suffix - The final component's last suffix, if any.

This includes the leading period. For example: '.txt'...
2024-11-27 14:40:20,954 - INFO - Indexing document: resources.uploads.uploads.Path.suffixes - A list of the final component's suffixes, if any.

These include the leading periods. For example: ['.tar', '.gz']...
2024-11-27 14:40:20,955 - INFO - Indexing document: resources.uploads.uploads.Path.symlink_to - Make this path a symlink pointing to the target path.
Note the order of arguments (link, target) is the reverse of os.symlink....
2024-11-27 14:40:20,956 - INFO - Indexing document: resources.uploads.uploads.Path.touch - Create this file with the given access mode, if it doesn't exist....
2024-11-27 14:40:20,956 - INFO - Indexing document: resources.uploads.uploads.Path.unlink - Remove this file or link.
If the path is a directory, use rmdir() instead....
2024-11-27 14:40:20,957 - INFO - Indexing document: resources.uploads.uploads.Path.walk - Walk the directory tree from this directory, similar to os.walk()....
2024-11-27 14:40:20,958 - INFO - Indexing document: resources.uploads.uploads.Path.with_name - Return a new path with the file name changed....
2024-11-27 14:40:20,958 - INFO - Indexing document: resources.uploads.uploads.Path.with_segments - Construct a new path object from any number of path-like objects.
Subclasses may override this method to customize how new path objects
are created from methods like `iterdir()`....
2024-11-27 14:40:20,959 - INFO - Indexing document: resources.uploads.uploads.Path.with_stem - Return a new path with the stem changed....
2024-11-27 14:40:20,960 - INFO - Indexing document: resources.uploads.uploads.Path.with_suffix - Return a new path with the file suffix changed.  If the path
has no suffix, add given suffix.  If the given suffix is an empty
string, remove the suffix from the path....
2024-11-27 14:40:20,961 - INFO - Indexing document: resources.uploads.uploads.Path.write_bytes - Open the file in bytes mode, write to it, and close the file....
2024-11-27 14:40:20,962 - INFO - Indexing document: resources.uploads.uploads.Path.write_text - Open the file in text mode, write to it, and close the file....
2024-11-27 14:40:20,962 - INFO - Indexing document: resources.uploads.uploads.Upload - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,965 - INFO - Indexing document: resources.uploads.uploads.Upload.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,967 - INFO - Indexing document: resources.uploads.uploads.Upload.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,968 - INFO - Indexing document: resources.uploads.uploads.Upload.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,970 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,972 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,973 - INFO - Indexing document: resources.uploads.uploads.Upload.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,975 - INFO - Indexing document: resources.uploads.uploads.upload_complete_params.UploadCompleteParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,977 - INFO - Indexing document: resources.uploads.uploads.upload_create_params.UploadCreateParams - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:20,979 - INFO - Indexing document: types.BatchError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,981 - INFO - Indexing document: types.BatchError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,982 - INFO - Indexing document: types.BatchError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,984 - INFO - Indexing document: types.BatchError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,986 - INFO - Indexing document: types.BatchError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:20,988 - INFO - Indexing document: types.BatchError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:20,990 - INFO - Indexing document: types.BatchError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:20,992 - INFO - Indexing document: types.BatchRequestCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:20,994 - INFO - Indexing document: types.BatchRequestCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:20,995 - INFO - Indexing document: types.BatchRequestCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:20,997 - INFO - Indexing document: types.BatchRequestCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:20,998 - INFO - Indexing document: types.BatchRequestCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,000 - INFO - Indexing document: types.BatchRequestCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,002 - INFO - Indexing document: types.BatchRequestCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,003 - INFO - Indexing document: types.CompletionChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,005 - INFO - Indexing document: types.CompletionChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,007 - INFO - Indexing document: types.CompletionChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,009 - INFO - Indexing document: types.CompletionChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,011 - INFO - Indexing document: types.CompletionChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,012 - INFO - Indexing document: types.CompletionChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,014 - INFO - Indexing document: types.CompletionChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,016 - INFO - Indexing document: types.CompletionUsage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,019 - INFO - Indexing document: types.CompletionUsage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,020 - INFO - Indexing document: types.CompletionUsage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,022 - INFO - Indexing document: types.CompletionUsage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,023 - INFO - Indexing document: types.CompletionUsage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,025 - INFO - Indexing document: types.CompletionUsage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,027 - INFO - Indexing document: types.CompletionUsage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,028 - INFO - Indexing document: types.Embedding - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,030 - INFO - Indexing document: types.Embedding.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,032 - INFO - Indexing document: types.Embedding.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,033 - INFO - Indexing document: types.Embedding.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,035 - INFO - Indexing document: types.Embedding.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,036 - INFO - Indexing document: types.Embedding.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,038 - INFO - Indexing document: types.Embedding.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,040 - INFO - Indexing document: types.ErrorObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,042 - INFO - Indexing document: types.ErrorObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,044 - INFO - Indexing document: types.ErrorObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,046 - INFO - Indexing document: types.ErrorObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,047 - INFO - Indexing document: types.ErrorObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,049 - INFO - Indexing document: types.ErrorObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,051 - INFO - Indexing document: types.ErrorObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,052 - INFO - Indexing document: types.FileContent - str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer...
2024-11-27 14:40:21,054 - INFO - Indexing document: types.FunctionDefinition - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,056 - INFO - Indexing document: types.FunctionDefinition.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,058 - INFO - Indexing document: types.FunctionDefinition.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,060 - INFO - Indexing document: types.FunctionDefinition.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,061 - INFO - Indexing document: types.FunctionDefinition.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,063 - INFO - Indexing document: types.FunctionDefinition.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,065 - INFO - Indexing document: types.FunctionDefinition.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,067 - INFO - Indexing document: types.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,069 - INFO - Indexing document: types.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,071 - INFO - Indexing document: types.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,074 - INFO - Indexing document: types.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,075 - INFO - Indexing document: types.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,077 - INFO - Indexing document: types.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,079 - INFO - Indexing document: types.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,080 - INFO - Indexing document: types.Moderation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,083 - INFO - Indexing document: types.Moderation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,085 - INFO - Indexing document: types.Moderation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,086 - INFO - Indexing document: types.Moderation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,087 - INFO - Indexing document: types.Moderation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,089 - INFO - Indexing document: types.Moderation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,091 - INFO - Indexing document: types.Moderation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,093 - INFO - Indexing document: types.ModerationImageURLInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,094 - INFO - Indexing document: types.ModerationTextInputParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,095 - INFO - Indexing document: types.ResponseFormatJSONObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,097 - INFO - Indexing document: types.ResponseFormatJSONObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,099 - INFO - Indexing document: types.ResponseFormatJSONObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,101 - INFO - Indexing document: types.ResponseFormatJSONObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,103 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,105 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,106 - INFO - Indexing document: types.ResponseFormatJSONObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,108 - INFO - Indexing document: types.ResponseFormatJSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,110 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,112 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,114 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,116 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,117 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,119 - INFO - Indexing document: types.ResponseFormatJSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,120 - INFO - Indexing document: types.ResponseFormatText - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,122 - INFO - Indexing document: types.ResponseFormatText.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,124 - INFO - Indexing document: types.ResponseFormatText.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,125 - INFO - Indexing document: types.ResponseFormatText.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,127 - INFO - Indexing document: types.ResponseFormatText.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,128 - INFO - Indexing document: types.ResponseFormatText.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,130 - INFO - Indexing document: types.ResponseFormatText.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,132 - INFO - Indexing document: types.audio.TranscriptionSegment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,134 - INFO - Indexing document: types.audio.TranscriptionSegment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,136 - INFO - Indexing document: types.audio.TranscriptionSegment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,138 - INFO - Indexing document: types.audio.TranscriptionSegment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,140 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,141 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,144 - INFO - Indexing document: types.audio.TranscriptionSegment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,146 - INFO - Indexing document: types.audio.TranscriptionWord - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,148 - INFO - Indexing document: types.audio.TranscriptionWord.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,150 - INFO - Indexing document: types.audio.TranscriptionWord.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,151 - INFO - Indexing document: types.audio.TranscriptionWord.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,153 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,155 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,156 - INFO - Indexing document: types.audio.TranscriptionWord.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,158 - INFO - Indexing document: types.batch.Errors - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,160 - INFO - Indexing document: types.batch.Errors.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,161 - INFO - Indexing document: types.batch.Errors.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,163 - INFO - Indexing document: types.batch.Errors.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,164 - INFO - Indexing document: types.batch.Errors.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,167 - INFO - Indexing document: types.batch.Errors.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,169 - INFO - Indexing document: types.batch.Errors.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,170 - INFO - Indexing document: types.beta.AssistantToolChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,172 - INFO - Indexing document: types.beta.AssistantToolChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,175 - INFO - Indexing document: types.beta.AssistantToolChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,177 - INFO - Indexing document: types.beta.AssistantToolChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,178 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,180 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,182 - INFO - Indexing document: types.beta.AssistantToolChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,183 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,185 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,187 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,188 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,190 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,191 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,193 - INFO - Indexing document: types.beta.AssistantToolChoiceFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,195 - INFO - Indexing document: types.beta.AssistantToolChoiceFunctionParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,197 - INFO - Indexing document: types.beta.AssistantToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,199 - INFO - Indexing document: types.beta.AutoFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,200 - INFO - Indexing document: types.beta.CodeInterpreterTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,203 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,205 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,208 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,209 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,211 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,213 - INFO - Indexing document: types.beta.CodeInterpreterTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,215 - INFO - Indexing document: types.beta.FileSearchTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,217 - INFO - Indexing document: types.beta.FileSearchTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,219 - INFO - Indexing document: types.beta.FileSearchTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,221 - INFO - Indexing document: types.beta.FileSearchTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,222 - INFO - Indexing document: types.beta.FileSearchTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,224 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,226 - INFO - Indexing document: types.beta.FileSearchTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,228 - INFO - Indexing document: types.beta.FunctionTool - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,231 - INFO - Indexing document: types.beta.FunctionTool.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,232 - INFO - Indexing document: types.beta.FunctionTool.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,234 - INFO - Indexing document: types.beta.FunctionTool.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,236 - INFO - Indexing document: types.beta.FunctionTool.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,237 - INFO - Indexing document: types.beta.FunctionTool.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,239 - INFO - Indexing document: types.beta.FunctionTool.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,241 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,243 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,244 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,246 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,247 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,249 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,251 - INFO - Indexing document: types.beta.OtherFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,253 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,255 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,257 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,260 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,262 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,263 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,265 - INFO - Indexing document: types.beta.StaticFileChunkingStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,267 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,270 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,271 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,273 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,274 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,276 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,278 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,280 - INFO - Indexing document: types.beta.StaticFileChunkingStrategyParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,281 - INFO - Indexing document: types.beta.assistant.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,283 - INFO - Indexing document: types.beta.assistant.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,285 - INFO - Indexing document: types.beta.assistant.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,286 - INFO - Indexing document: types.beta.assistant.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,288 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,290 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,292 - INFO - Indexing document: types.beta.assistant.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,294 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,296 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,298 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,300 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,302 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,304 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,306 - INFO - Indexing document: types.beta.assistant.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,307 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,309 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,311 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,312 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,314 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,316 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,318 - INFO - Indexing document: types.beta.assistant.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,320 - INFO - Indexing document: types.beta.assistant_stream_event.Annotated - Add context-specific metadata to a type.

Example: Annotated[int, runtime_check.Unsigned] indicates to the
hypothetical runtime_check module that this type is an unsigned int.
Every other consumer of ...
2024-11-27 14:40:21,322 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,325 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,327 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,329 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,331 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,333 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,335 - INFO - Indexing document: types.beta.assistant_stream_event.ErrorEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,336 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,338 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,340 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,342 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,343 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,345 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,347 - INFO - Indexing document: types.beta.assistant_stream_event.MessageDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,349 - INFO - Indexing document: types.beta.assistant_stream_event.PropertyInfo - Metadata class to be used in Annotated types to provide information about a given type.

For example:

class MyParams(TypedDict):
    account_holder_name: Annotated[str, PropertyInfo(alias='accountHol...
2024-11-27 14:40:21,351 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,354 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,355 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,357 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,359 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,361 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,363 - INFO - Indexing document: types.beta.assistant_stream_event.RunStepDeltaEvent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,365 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,367 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,368 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,370 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,371 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,373 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,375 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,376 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,380 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,382 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,385 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,387 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,389 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,391 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,393 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,396 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,398 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,399 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,401 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,403 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,405 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,407 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,409 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,411 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,413 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,415 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,417 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,420 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,422 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,425 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,427 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,429 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,431 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,433 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,435 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,436 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,438 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,440 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,442 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,443 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,446 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,449 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadMessageIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,451 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,454 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,456 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,459 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,461 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,463 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,465 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,467 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,469 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,471 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,473 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,474 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,476 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,480 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCancelling.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,483 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,485 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,487 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,489 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,490 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,492 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,494 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,495 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,497 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,499 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,501 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,502 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,504 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,505 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,507 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,510 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,512 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,514 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,515 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,517 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,519 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,521 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,523 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,525 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,526 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,528 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,530 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,531 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,533 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,535 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,537 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,539 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,541 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,543 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,545 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,547 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,550 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,552 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,554 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,555 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,557 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,559 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunIncomplete.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,561 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,563 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,564 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,566 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,567 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,569 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,572 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunQueued.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,575 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,577 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,579 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,581 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,582 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,584 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,586 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunRequiresAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,588 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,590 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,592 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,592 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,594 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,596 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCancelled.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,597 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,600 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,603 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,605 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,611 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,617 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,621 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCompleted.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,624 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,628 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,634 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,640 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,643 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,646 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,651 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepCreated.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,655 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,660 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,664 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,667 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,671 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,675 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,679 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,683 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,686 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,688 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,690 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,692 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,694 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,696 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepExpired.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,698 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,703 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,707 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,710 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,713 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,716 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,719 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepFailed.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,722 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,724 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,727 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,729 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,730 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,733 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,735 - INFO - Indexing document: types.beta.assistant_stream_event.ThreadRunStepInProgress.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,738 - INFO - Indexing document: types.beta.file_search_tool.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,741 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,743 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,745 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,747 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,749 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,751 - INFO - Indexing document: types.beta.file_search_tool.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,753 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,755 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,757 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,759 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,761 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,764 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,766 - INFO - Indexing document: types.beta.file_search_tool.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,768 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearch - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,770 - INFO - Indexing document: types.beta.file_search_tool_param.FileSearchRankingOptions - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,772 - INFO - Indexing document: types.beta.function_tool_param.FunctionDefinition - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,774 - INFO - Indexing document: types.beta.thread.ToolResources - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,777 - INFO - Indexing document: types.beta.thread.ToolResources.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,779 - INFO - Indexing document: types.beta.thread.ToolResources.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,781 - INFO - Indexing document: types.beta.thread.ToolResources.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,783 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,785 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,787 - INFO - Indexing document: types.beta.thread.ToolResources.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,788 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,791 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,794 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,796 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,800 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,802 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,804 - INFO - Indexing document: types.beta.thread.ToolResourcesCodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,806 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,808 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,811 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,813 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,815 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,819 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,822 - INFO - Indexing document: types.beta.thread.ToolResourcesFileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,824 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,827 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,829 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,831 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,833 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,836 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,838 - INFO - Indexing document: types.beta.threads.FileCitationAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,840 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,842 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,844 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,846 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,848 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,850 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,852 - INFO - Indexing document: types.beta.threads.FileCitationDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,854 - INFO - Indexing document: types.beta.threads.FilePathAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,856 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,858 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,860 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,862 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,864 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,866 - INFO - Indexing document: types.beta.threads.FilePathAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,868 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,870 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,872 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,873 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,875 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,878 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,880 - INFO - Indexing document: types.beta.threads.FilePathDeltaAnnotation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,882 - INFO - Indexing document: types.beta.threads.ImageFile - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,885 - INFO - Indexing document: types.beta.threads.ImageFile.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,886 - INFO - Indexing document: types.beta.threads.ImageFile.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,888 - INFO - Indexing document: types.beta.threads.ImageFile.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,889 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,891 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,894 - INFO - Indexing document: types.beta.threads.ImageFile.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,895 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,898 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,899 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,901 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,903 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,905 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,907 - INFO - Indexing document: types.beta.threads.ImageFileContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,909 - INFO - Indexing document: types.beta.threads.ImageFileContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,910 - INFO - Indexing document: types.beta.threads.ImageFileDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,912 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,914 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,916 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,918 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,920 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,922 - INFO - Indexing document: types.beta.threads.ImageFileDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,924 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,926 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,928 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,929 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,931 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,933 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,934 - INFO - Indexing document: types.beta.threads.ImageFileDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,936 - INFO - Indexing document: types.beta.threads.ImageFileParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,937 - INFO - Indexing document: types.beta.threads.ImageURL - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,939 - INFO - Indexing document: types.beta.threads.ImageURL.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,941 - INFO - Indexing document: types.beta.threads.ImageURL.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,942 - INFO - Indexing document: types.beta.threads.ImageURL.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,943 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,945 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,948 - INFO - Indexing document: types.beta.threads.ImageURL.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,949 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,952 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,953 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,956 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,958 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,959 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,961 - INFO - Indexing document: types.beta.threads.ImageURLContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,963 - INFO - Indexing document: types.beta.threads.ImageURLContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,964 - INFO - Indexing document: types.beta.threads.ImageURLDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,967 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,968 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,970 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,971 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,973 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,975 - INFO - Indexing document: types.beta.threads.ImageURLDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,977 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,979 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,981 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,983 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,984 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,985 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:21,987 - INFO - Indexing document: types.beta.threads.ImageURLDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:21,989 - INFO - Indexing document: types.beta.threads.ImageURLParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:21,990 - INFO - Indexing document: types.beta.threads.MessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:21,992 - INFO - Indexing document: types.beta.threads.MessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:21,994 - INFO - Indexing document: types.beta.threads.MessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:21,996 - INFO - Indexing document: types.beta.threads.MessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:21,997 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:21,999 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,001 - INFO - Indexing document: types.beta.threads.MessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,002 - INFO - Indexing document: types.beta.threads.RefusalContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,004 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,006 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,008 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,010 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,012 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,014 - INFO - Indexing document: types.beta.threads.RefusalContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,016 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,018 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,020 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,022 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,023 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,025 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,027 - INFO - Indexing document: types.beta.threads.RefusalDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,029 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,031 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,033 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,034 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,035 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,037 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,039 - INFO - Indexing document: types.beta.threads.RequiredActionFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,042 - INFO - Indexing document: types.beta.threads.Text - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,044 - INFO - Indexing document: types.beta.threads.Text.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,045 - INFO - Indexing document: types.beta.threads.Text.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,047 - INFO - Indexing document: types.beta.threads.Text.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,049 - INFO - Indexing document: types.beta.threads.Text.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,051 - INFO - Indexing document: types.beta.threads.Text.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,053 - INFO - Indexing document: types.beta.threads.Text.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,054 - INFO - Indexing document: types.beta.threads.TextContentBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,056 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,058 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,062 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,064 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,066 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,068 - INFO - Indexing document: types.beta.threads.TextContentBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,070 - INFO - Indexing document: types.beta.threads.TextContentBlockParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,071 - INFO - Indexing document: types.beta.threads.TextDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,073 - INFO - Indexing document: types.beta.threads.TextDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,075 - INFO - Indexing document: types.beta.threads.TextDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,077 - INFO - Indexing document: types.beta.threads.TextDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,078 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,080 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,083 - INFO - Indexing document: types.beta.threads.TextDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,085 - INFO - Indexing document: types.beta.threads.TextDeltaBlock - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,086 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,088 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,090 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,091 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,093 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,095 - INFO - Indexing document: types.beta.threads.TextDeltaBlock.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,096 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,098 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,100 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,102 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,104 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,106 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,109 - INFO - Indexing document: types.beta.threads.file_citation_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,114 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,118 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,121 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,125 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,127 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,130 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,133 - INFO - Indexing document: types.beta.threads.file_citation_delta_annotation.FileCitation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,136 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,139 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,141 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,143 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,145 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,146 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,148 - INFO - Indexing document: types.beta.threads.file_path_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,150 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,152 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,154 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,156 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,157 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,159 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,161 - INFO - Indexing document: types.beta.threads.file_path_delta_annotation.FilePath.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,162 - INFO - Indexing document: types.beta.threads.message.Attachment - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,164 - INFO - Indexing document: types.beta.threads.message.Attachment.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,167 - INFO - Indexing document: types.beta.threads.message.Attachment.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,169 - INFO - Indexing document: types.beta.threads.message.Attachment.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,171 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,173 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,174 - INFO - Indexing document: types.beta.threads.message.Attachment.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,176 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,179 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,180 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,182 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,183 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,185 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,187 - INFO - Indexing document: types.beta.threads.message.AttachmentToolAssistantToolsFileSearchTypeOnly.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,189 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,191 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,192 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,194 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,195 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,198 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,199 - INFO - Indexing document: types.beta.threads.message.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,201 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,203 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,205 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,207 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,208 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,211 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,213 - INFO - Indexing document: types.beta.threads.required_action_function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,215 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,217 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,219 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,220 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,222 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,223 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,225 - INFO - Indexing document: types.beta.threads.run.IncompleteDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,227 - INFO - Indexing document: types.beta.threads.run.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,230 - INFO - Indexing document: types.beta.threads.run.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,232 - INFO - Indexing document: types.beta.threads.run.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,234 - INFO - Indexing document: types.beta.threads.run.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,235 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,239 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,240 - INFO - Indexing document: types.beta.threads.run.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,242 - INFO - Indexing document: types.beta.threads.run.RequiredAction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,245 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,247 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,249 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,250 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,252 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,254 - INFO - Indexing document: types.beta.threads.run.RequiredAction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,255 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,257 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,260 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,262 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,264 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,266 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,268 - INFO - Indexing document: types.beta.threads.run.RequiredActionSubmitToolOutputs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,269 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,271 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,273 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,275 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,277 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,278 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,280 - INFO - Indexing document: types.beta.threads.run.TruncationStrategy.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,282 - INFO - Indexing document: types.beta.threads.run.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,284 - INFO - Indexing document: types.beta.threads.run.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,285 - INFO - Indexing document: types.beta.threads.run.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,286 - INFO - Indexing document: types.beta.threads.run.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,288 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,290 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,293 - INFO - Indexing document: types.beta.threads.run.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,295 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,298 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,299 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,301 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,303 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,305 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,308 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,310 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,311 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,313 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,314 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,316 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,318 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,320 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,322 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,326 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,328 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,330 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,332 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,333 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,335 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,337 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,339 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,341 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,343 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,344 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,345 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,347 - INFO - Indexing document: types.beta.threads.runs.CodeInterpreterToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,349 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,351 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,354 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,356 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,358 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,360 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,362 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,364 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,366 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,368 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,370 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,371 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,373 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,375 - INFO - Indexing document: types.beta.threads.runs.FileSearchToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,376 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,378 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,380 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,382 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,384 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,387 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,389 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,391 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,394 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,396 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,397 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,399 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,401 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,404 - INFO - Indexing document: types.beta.threads.runs.FunctionToolCallDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,406 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,408 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,410 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,412 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,414 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,417 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,419 - INFO - Indexing document: types.beta.threads.runs.MessageCreationStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,421 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,424 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,426 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,427 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,429 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,430 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,432 - INFO - Indexing document: types.beta.threads.runs.RunStepDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,434 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,436 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,438 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,439 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,440 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,442 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,444 - INFO - Indexing document: types.beta.threads.runs.RunStepDeltaMessageDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,447 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,450 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,452 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,454 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,456 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,458 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,460 - INFO - Indexing document: types.beta.threads.runs.ToolCallDeltaObject.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,462 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,464 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,466 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,467 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,469 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,471 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,473 - INFO - Indexing document: types.beta.threads.runs.ToolCallsStepDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,474 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,476 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,479 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,481 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,483 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,485 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,488 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_output_image.Image.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,490 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,492 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,494 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,496 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,498 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,499 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,501 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,503 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,505 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,508 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,510 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,512 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,515 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,517 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,519 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,521 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,523 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,524 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,526 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,528 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,529 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputImageImage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,531 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,533 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,535 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,536 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,538 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,540 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,543 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call.CodeInterpreterOutputLogs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,545 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,548 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,550 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,552 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,554 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,555 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,557 - INFO - Indexing document: types.beta.threads.runs.code_interpreter_tool_call_delta.CodeInterpreter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,559 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,561 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,562 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,564 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,565 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,567 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,569 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearch.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,571 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,575 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,576 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,578 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,580 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,582 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,583 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchRankingOptions.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,585 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,588 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,590 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,591 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,593 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,594 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,596 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResult.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,598 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,600 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,603 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,607 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,608 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,610 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,612 - INFO - Indexing document: types.beta.threads.runs.file_search_tool_call.FileSearchResultContent.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,614 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,616 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,619 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,621 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,622 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,624 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,626 - INFO - Indexing document: types.beta.threads.runs.function_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,627 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,629 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,631 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,633 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,635 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,637 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,639 - INFO - Indexing document: types.beta.threads.runs.function_tool_call_delta.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,640 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,643 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,645 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,648 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,651 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,653 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,655 - INFO - Indexing document: types.beta.threads.runs.message_creation_step_details.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,657 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,658 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,660 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,662 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,663 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,666 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,668 - INFO - Indexing document: types.beta.threads.runs.run_step.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,670 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,672 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,674 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,676 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,677 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,679 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,681 - INFO - Indexing document: types.beta.threads.runs.run_step.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,682 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,684 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,686 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,688 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,689 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,691 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,693 - INFO - Indexing document: types.beta.threads.runs.run_step_delta_message_delta.MessageCreation.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,694 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,697 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,699 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,700 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,702 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,704 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,706 - INFO - Indexing document: types.beta.vector_store.ExpiresAfter.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,708 - INFO - Indexing document: types.beta.vector_store.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,710 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,712 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,713 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,714 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,716 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,718 - INFO - Indexing document: types.beta.vector_store.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,719 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,721 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,723 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,725 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,728 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,729 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,731 - INFO - Indexing document: types.beta.vector_stores.vector_store_file.LastError.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,733 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,735 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,737 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,739 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,740 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,742 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,744 - INFO - Indexing document: types.beta.vector_stores.vector_store_file_batch.FileCounts.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,745 - INFO - Indexing document: types.chat.ChatCompletionAssistantMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,747 - INFO - Indexing document: types.chat.ChatCompletionAudio - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,748 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,750 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,752 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,753 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,755 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,756 - INFO - Indexing document: types.chat.ChatCompletionAudio.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,759 - INFO - Indexing document: types.chat.ChatCompletionContentPartImageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,760 - INFO - Indexing document: types.chat.ChatCompletionContentPartInputAudioParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,763 - INFO - Indexing document: types.chat.ChatCompletionContentPartRefusalParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,764 - INFO - Indexing document: types.chat.ChatCompletionContentPartTextParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,766 - INFO - Indexing document: types.chat.ChatCompletionFunctionMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,767 - INFO - Indexing document: types.chat.ChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,769 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,771 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,773 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,774 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,776 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,778 - INFO - Indexing document: types.chat.ChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,779 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,781 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,783 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,784 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,786 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,788 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,790 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,792 - INFO - Indexing document: types.chat.ChatCompletionMessageToolCallParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,794 - INFO - Indexing document: types.chat.ChatCompletionNamedToolChoiceParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,796 - INFO - Indexing document: types.chat.ChatCompletionSystemMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,797 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,800 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,801 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,803 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,804 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,806 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,808 - INFO - Indexing document: types.chat.ChatCompletionTokenLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,809 - INFO - Indexing document: types.chat.ChatCompletionToolMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,810 - INFO - Indexing document: types.chat.ChatCompletionUserMessageParam - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,812 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,814 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,816 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,817 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,819 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,821 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,824 - INFO - Indexing document: types.chat.ParsedChatCompletionMessage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,825 - INFO - Indexing document: types.chat.ParsedChoice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,827 - INFO - Indexing document: types.chat.ParsedChoice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,829 - INFO - Indexing document: types.chat.ParsedChoice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,832 - INFO - Indexing document: types.chat.ParsedChoice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,833 - INFO - Indexing document: types.chat.ParsedChoice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,834 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,836 - INFO - Indexing document: types.chat.ParsedChoice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,838 - INFO - Indexing document: types.chat.ParsedFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,840 - INFO - Indexing document: types.chat.ParsedFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,841 - INFO - Indexing document: types.chat.ParsedFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,843 - INFO - Indexing document: types.chat.ParsedFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,844 - INFO - Indexing document: types.chat.ParsedFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,846 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,848 - INFO - Indexing document: types.chat.ParsedFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,850 - INFO - Indexing document: types.chat.ParsedFunctionToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,853 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,855 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,858 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,860 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,864 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,866 - INFO - Indexing document: types.chat.ParsedFunctionToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,868 - INFO - Indexing document: types.chat.chat_completion.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,870 - INFO - Indexing document: types.chat.chat_completion.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,871 - INFO - Indexing document: types.chat.chat_completion.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,873 - INFO - Indexing document: types.chat.chat_completion.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,874 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,876 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,878 - INFO - Indexing document: types.chat.chat_completion.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,880 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,882 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,885 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,888 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,890 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,892 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,894 - INFO - Indexing document: types.chat.chat_completion.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,896 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.Audio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,897 - INFO - Indexing document: types.chat.chat_completion_assistant_message_param.FunctionCall - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,899 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,901 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,903 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,905 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,906 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,908 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,909 - INFO - Indexing document: types.chat.chat_completion_chunk.Choice.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,911 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,913 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,915 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,917 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,919 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,920 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,923 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDelta.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,925 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,927 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,929 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,931 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,932 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,934 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,936 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaFunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,937 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,939 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,941 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,943 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,944 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,946 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,948 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,950 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,952 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,954 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,956 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,957 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,959 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,961 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceDeltaToolCallFunction.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,962 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,964 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,966 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,968 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,969 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,971 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,973 - INFO - Indexing document: types.chat.chat_completion_chunk.ChoiceLogprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,974 - INFO - Indexing document: types.chat.chat_completion_content_part_image_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,976 - INFO - Indexing document: types.chat.chat_completion_content_part_input_audio_param.InputAudio - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:22,979 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,981 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,983 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,985 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,987 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:22,989 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:22,990 - INFO - Indexing document: types.chat.chat_completion_message.FunctionCall.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:22,992 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:22,994 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:22,996 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:22,998 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:22,999 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,001 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,003 - INFO - Indexing document: types.chat.chat_completion_message_tool_call.Function.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,005 - INFO - Indexing document: types.chat.chat_completion_message_tool_call_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:23,006 - INFO - Indexing document: types.chat.chat_completion_named_tool_choice_param.Function - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:23,009 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,011 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,013 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,015 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,016 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,018 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,020 - INFO - Indexing document: types.chat.chat_completion_token_logprob.TopLogprob.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,021 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,023 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,025 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,027 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,028 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,030 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,032 - INFO - Indexing document: types.chat.parsed_chat_completion.GenericModel.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,033 - INFO - Indexing document: types.completion_choice.Logprobs - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,035 - INFO - Indexing document: types.completion_choice.Logprobs.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,037 - INFO - Indexing document: types.completion_choice.Logprobs.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,038 - INFO - Indexing document: types.completion_choice.Logprobs.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,041 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,043 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,044 - INFO - Indexing document: types.completion_choice.Logprobs.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,046 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,048 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,050 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,052 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,053 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,055 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,057 - INFO - Indexing document: types.completion_usage.CompletionTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,058 - INFO - Indexing document: types.completion_usage.PromptTokensDetails - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,062 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,064 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,066 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,067 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,069 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,072 - INFO - Indexing document: types.completion_usage.PromptTokensDetails.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,074 - INFO - Indexing document: types.create_embedding_response.Usage - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,077 - INFO - Indexing document: types.create_embedding_response.Usage.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,078 - INFO - Indexing document: types.create_embedding_response.Usage.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,080 - INFO - Indexing document: types.create_embedding_response.Usage.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,081 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,083 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,085 - INFO - Indexing document: types.create_embedding_response.Usage.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,086 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,088 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,090 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,092 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,093 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,095 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,097 - INFO - Indexing document: types.fine_tuning.FineTuningJobIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,099 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,100 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,104 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,106 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,108 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,109 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,111 - INFO - Indexing document: types.fine_tuning.FineTuningJobWandbIntegration.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,113 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,115 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,117 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,119 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,120 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,122 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,123 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Error.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,125 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,127 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,129 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,131 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,132 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,134 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,136 - INFO - Indexing document: types.fine_tuning.fine_tuning_job.Hyperparameters.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,138 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,140 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,142 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,144 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,146 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,149 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,150 - INFO - Indexing document: types.fine_tuning.jobs.fine_tuning_job_checkpoint.Metrics.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,152 - INFO - Indexing document: types.moderation.Categories - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,154 - INFO - Indexing document: types.moderation.Categories.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,155 - INFO - Indexing document: types.moderation.Categories.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,157 - INFO - Indexing document: types.moderation.Categories.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,158 - INFO - Indexing document: types.moderation.Categories.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,160 - INFO - Indexing document: types.moderation.Categories.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,162 - INFO - Indexing document: types.moderation.Categories.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,164 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,167 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,169 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,170 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,172 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,174 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,176 - INFO - Indexing document: types.moderation.CategoryAppliedInputTypes.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,179 - INFO - Indexing document: types.moderation.CategoryScores - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,181 - INFO - Indexing document: types.moderation.CategoryScores.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,183 - INFO - Indexing document: types.moderation.CategoryScores.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,184 - INFO - Indexing document: types.moderation.CategoryScores.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,186 - INFO - Indexing document: types.moderation.CategoryScores.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,187 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,189 - INFO - Indexing document: types.moderation.CategoryScores.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,191 - INFO - Indexing document: types.moderation.FieldInfo - Usage docs: https://docs.pydantic.dev/2.10/concepts/fields

Create a field for objects that can be configured.

Used to provide extra information about a field, either for the model schema or complex ...
2024-11-27 14:40:23,193 - INFO - Indexing document: types.moderation_image_url_input_param.ImageURL - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:23,195 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema - Usage docs: https://docs.pydantic.dev/2.10/concepts/models/

A base class for creating Pydantic models.

Attributes:
    __class_vars__: The names of the class variables defined on the model.
    __pr...
2024-11-27 14:40:23,198 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_json_schema - Generates a JSON schema for a model class.

Args:
    by_alias: Whether to use attribute aliases or not.
    ref_template: The reference template.
    schema_generator: To override the logic used to g...
2024-11-27 14:40:23,200 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_parametrized_name - Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:40:23,202 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_rebuild - Try to rebuild the pydantic-core schema for the model.

This may be necessary when one of the annotations is a ForwardRef which could not be resolved during
the initial attempt to build the schema, an...
2024-11-27 14:40:23,203 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate - Validate a pydantic model instance.

Args:
    obj: The object to validate.
    strict: Whether to enforce types strictly.
    from_attributes: Whether to extract data from object attributes.
    cont...
2024-11-27 14:40:23,205 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_json - Usage docs: https://docs.pydantic.dev/2.10/concepts/json/#json-parsing

Validate the given JSON data against the Pydantic model.

Args:
    json_data: The JSON data to validate.
    strict: Whether to...
2024-11-27 14:40:23,207 - INFO - Indexing document: types.shared.response_format_json_schema.JSONSchema.model_validate_strings - Validate the given object with string data against the Pydantic model.

Args:
    obj: The object containing string data to validate.
    strict: Whether to enforce types strictly.
    context: Extra ...
2024-11-27 14:40:23,209 - INFO - Indexing document: types.shared_params.response_format_json_schema.JSONSchema - dict() -> new empty dictionary
dict(mapping) -> new dictionary initialized from a mapping object's
    (key, value) pairs
dict(iterable) -> new dictionary initialized as if via:
    d = {}
    for k, ...
2024-11-27 14:40:52,572 - INFO - Indexed data saved successfully.
2024-11-27 14:40:52,694 - INFO - Configuration loaded successfully.
2024-11-27 14:40:52,695 - INFO - Starting search for query: Custom
2024-11-27 14:40:52,714 - INFO - Whoosh search results: <Top 5 Results for Term('text', 'custom') runtime=0.001943999988725409>
2024-11-27 14:40:52,748 - INFO - BERT search results: [{'source': 'BERT', 'path': '', 'text': 'In certain situations you need to be able to represent a case where a default value has\nto be explicitly removed and `None` is not an appropriate substitute, for example:\n\n```py\n# as the default `Content-Type` header is `application/json` that will be sent\nclient.post("/upload/files", files={"file": b"my raw file content"})\n\n# you can\'t explicitly override the header as it has to be dynamically generated\n# to look something like: \'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983\'\nclient.post(..., headers={"Content-Type": "multipart/form-data"})\n\n# instead you can remove the default `application/json` header by passing Omit\nclient.post(..., headers={"Content-Type": Omit()})\n```', 'score': np.float32(48.069714)}, {'source': 'BERT', 'path': '', 'text': 'In certain situations you need to be able to represent a case where a default value has\nto be explicitly removed and `None` is not an appropriate substitute, for example:\n\n```py\n# as the default `Content-Type` header is `application/json` that will be sent\nclient.post("/upload/files", files={"file": b"my raw file content"})\n\n# you can\'t explicitly override the header as it has to be dynamically generated\n# to look something like: \'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983\'\nclient.post(..., headers={"Content-Type": "multipart/form-data"})\n\n# instead you can remove the default `application/json` header by passing Omit\nclient.post(..., headers={"Content-Type": Omit()})\n```', 'score': np.float32(48.069714)}, {'source': 'BERT', 'path': '', 'text': 'In certain situations you need to be able to represent a case where a default value has\nto be explicitly removed and `None` is not an appropriate substitute, for example:\n\n```py\n# as the default `Content-Type` header is `application/json` that will be sent\nclient.post("/upload/files", files={"file": b"my raw file content"})\n\n# you can\'t explicitly override the header as it has to be dynamically generated\n# to look something like: \'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983\'\nclient.post(..., headers={"Content-Type": "multipart/form-data"})\n\n# instead you can remove the default `application/json` header by passing Omit\nclient.post(..., headers={"Content-Type": Omit()})\n```', 'score': np.float32(48.069714)}, {'source': 'BERT', 'path': '', 'text': 'In certain situations you need to be able to represent a case where a default value has\nto be explicitly removed and `None` is not an appropriate substitute, for example:\n\n```py\n# as the default `Content-Type` header is `application/json` that will be sent\nclient.post("/upload/files", files={"file": b"my raw file content"})\n\n# you can\'t explicitly override the header as it has to be dynamically generated\n# to look something like: \'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983\'\nclient.post(..., headers={"Content-Type": "multipart/form-data"})\n\n# instead you can remove the default `application/json` header by passing Omit\nclient.post(..., headers={"Content-Type": Omit()})\n```', 'score': np.float32(48.069714)}, {'source': 'BERT', 'path': '', 'text': 'In certain situations you need to be able to represent a case where a default value has\nto be explicitly removed and `None` is not an appropriate substitute, for example:\n\n```py\n# as the default `Content-Type` header is `application/json` that will be sent\nclient.post("/upload/files", files={"file": b"my raw file content"})\n\n# you can\'t explicitly override the header as it has to be dynamically generated\n# to look something like: \'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983\'\nclient.post(..., headers={"Content-Type": "multipart/form-data"})\n\n# instead you can remove the default `application/json` header by passing Omit\nclient.post(..., headers={"Content-Type": Omit()})\n```', 'score': np.float32(48.069714)}]
2024-11-27 14:50:14,572 - INFO - Final combined search results: [{'source': 'BERT', 'path': '', 'text': 'In certain situations you need to be able to represent a case where a default value has\nto be explicitly removed and `None` is not an appropriate substitute, for example:\n\n```py\n# as the default `Content-Type` header is `application/json` that will be sent\nclient.post("/upload/files", files={"file": b"my raw file content"})\n\n# you can\'t explicitly override the header as it has to be dynamically generated\n# to look something like: \'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983\'\nclient.post(..., headers={"Content-Type": "multipart/form-data"})\n\n# instead you can remove the default `application/json` header by passing Omit\nclient.post(..., headers={"Content-Type": Omit()})\n```', 'score': np.float32(48.069714)}, {'source': 'BERT', 'path': '', 'text': 'In certain situations you need to be able to represent a case where a default value has\nto be explicitly removed and `None` is not an appropriate substitute, for example:\n\n```py\n# as the default `Content-Type` header is `application/json` that will be sent\nclient.post("/upload/files", files={"file": b"my raw file content"})\n\n# you can\'t explicitly override the header as it has to be dynamically generated\n# to look something like: \'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983\'\nclient.post(..., headers={"Content-Type": "multipart/form-data"})\n\n# instead you can remove the default `application/json` header by passing Omit\nclient.post(..., headers={"Content-Type": Omit()})\n```', 'score': np.float32(48.069714)}, {'source': 'BERT', 'path': '', 'text': 'In certain situations you need to be able to represent a case where a default value has\nto be explicitly removed and `None` is not an appropriate substitute, for example:\n\n```py\n# as the default `Content-Type` header is `application/json` that will be sent\nclient.post("/upload/files", files={"file": b"my raw file content"})\n\n# you can\'t explicitly override the header as it has to be dynamically generated\n# to look something like: \'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983\'\nclient.post(..., headers={"Content-Type": "multipart/form-data"})\n\n# instead you can remove the default `application/json` header by passing Omit\nclient.post(..., headers={"Content-Type": Omit()})\n```', 'score': np.float32(48.069714)}, {'source': 'BERT', 'path': '', 'text': 'In certain situations you need to be able to represent a case where a default value has\nto be explicitly removed and `None` is not an appropriate substitute, for example:\n\n```py\n# as the default `Content-Type` header is `application/json` that will be sent\nclient.post("/upload/files", files={"file": b"my raw file content"})\n\n# you can\'t explicitly override the header as it has to be dynamically generated\n# to look something like: \'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983\'\nclient.post(..., headers={"Content-Type": "multipart/form-data"})\n\n# instead you can remove the default `application/json` header by passing Omit\nclient.post(..., headers={"Content-Type": Omit()})\n```', 'score': np.float32(48.069714)}, {'source': 'BERT', 'path': '', 'text': 'In certain situations you need to be able to represent a case where a default value has\nto be explicitly removed and `None` is not an appropriate substitute, for example:\n\n```py\n# as the default `Content-Type` header is `application/json` that will be sent\nclient.post("/upload/files", files={"file": b"my raw file content"})\n\n# you can\'t explicitly override the header as it has to be dynamically generated\n# to look something like: \'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983\'\nclient.post(..., headers={"Content-Type": "multipart/form-data"})\n\n# instead you can remove the default `application/json` header by passing Omit\nclient.post(..., headers={"Content-Type": Omit()})\n```', 'score': np.float32(48.069714)}, {'source': 'Whoosh', 'path': 'BaseModel.model_parametrized_name', 'text': 'Compute the class name for parametrizations of generic classes.\n\nThis method can be overridden to achieve a custom naming scheme for generic BaseModels.\n\nArgs:\n    params: Tuple of types of the class. Given a generic class\n        `Model` with 2 type variables and a concrete model `Model[str, int]`,\n        the value `(str, int)` would be passed to `params`.\n\nReturns:\n    String representing the new class where `params` are passed to `cls` as type variables.\n\nRaises:\n    TypeError: Raised when trying to generate concrete names for non-generic models.', 'score': 2.522601772508681}, {'source': 'Whoosh', 'path': 'lib.azure.FinalRequestOptions.model_parametrized_name', 'text': 'Compute the class name for parametrizations of generic classes.\n\nThis method can be overridden to achieve a custom naming scheme for generic BaseModels.\n\nArgs:\n    params: Tuple of types of the class. Given a generic class\n        `Model` with 2 type variables and a concrete model `Model[str, int]`,\n        the value `(str, int)` would be passed to `params`.\n\nReturns:\n    String representing the new class where `params` are passed to `cls` as type variables.\n\nRaises:\n    TypeError: Raised when trying to generate concrete names for non-generic models.', 'score': 2.522601772508681}, {'source': 'Whoosh', 'path': 'lib.streaming.chat.ChunkEvent.model_parametrized_name', 'text': 'Compute the class name for parametrizations of generic classes.\n\nThis method can be overridden to achieve a custom naming scheme for generic BaseModels.\n\nArgs:\n    params: Tuple of types of the class. Given a generic class\n        `Model` with 2 type variables and a concrete model `Model[str, int]`,\n        the value `(str, int)` would be passed to `params`.\n\nReturns:\n    String representing the new class where `params` are passed to `cls` as type variables.\n\nRaises:\n    TypeError: Raised when trying to generate concrete names for non-generic models.', 'score': 2.522601772508681}, {'source': 'Whoosh', 'path': 'lib.streaming.chat.ContentDoneEvent.model_parametrized_name', 'text': 'Compute the class name for parametrizations of generic classes.\n\nThis method can be overridden to achieve a custom naming scheme for generic BaseModels.\n\nArgs:\n    params: Tuple of types of the class. Given a generic class\n        `Model` with 2 type variables and a concrete model `Model[str, int]`,\n        the value `(str, int)` would be passed to `params`.\n\nReturns:\n    String representing the new class where `params` are passed to `cls` as type variables.\n\nRaises:\n    TypeError: Raised when trying to generate concrete names for non-generic models.', 'score': 2.522601772508681}, {'source': 'Whoosh', 'path': 'lib.streaming.chat.FunctionToolCallArgumentsDeltaEvent.model_parametrized_name', 'text': 'Compute the class name for parametrizations of generic classes.\n\nThis method can be overridden to achieve a custom naming scheme for generic BaseModels.\n\nArgs:\n    params: Tuple of types of the class. Given a generic class\n        `Model` with 2 type variables and a concrete model `Model[str, int]`,\n        the value `(str, int)` would be passed to `params`.\n\nReturns:\n    String representing the new class where `params` are passed to `cls` as type variables.\n\nRaises:\n    TypeError: Raised when trying to generate concrete names for non-generic models.', 'score': 2.522601772508681}]
2024-11-27 14:50:14,600 - INFO - Source: BERT, Score: 48.0697135925293, Text: In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 14:50:14,602 - INFO - Source: BERT, Score: 48.0697135925293, Text: In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 14:50:14,604 - INFO - Source: BERT, Score: 48.0697135925293, Text: In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 14:50:14,607 - INFO - Source: BERT, Score: 48.0697135925293, Text: In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 14:50:14,609 - INFO - Source: BERT, Score: 48.0697135925293, Text: In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Cont...
2024-11-27 14:50:14,611 - INFO - Source: Whoosh, Score: 2.522601772508681, Text: Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:50:14,613 - INFO - Source: Whoosh, Score: 2.522601772508681, Text: Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:50:14,614 - INFO - Source: Whoosh, Score: 2.522601772508681, Text: Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:50:14,615 - INFO - Source: Whoosh, Score: 2.522601772508681, Text: Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:50:14,617 - INFO - Source: Whoosh, Score: 2.522601772508681, Text: Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class....
2024-11-27 14:50:14,619 - INFO - Element Info: {}
2024-11-27 14:50:14,620 - INFO - Element Info: {}
2024-11-27 14:50:14,620 - INFO - Element Info: {}
2024-11-27 14:50:14,621 - INFO - Element Info: {}
2024-11-27 14:50:14,621 - INFO - Element Info: {}
2024-11-27 14:50:14,622 - INFO - Element Info: {}
2024-11-27 14:50:14,622 - INFO - Element Info: {}
2024-11-27 14:50:14,623 - INFO - Element Info: {}
2024-11-27 14:50:14,623 - INFO - Element Info: {}
2024-11-27 14:50:14,623 - INFO - Element Info: {}
2024-11-27 14:50:14,624 - INFO - 
Search results for query 'Custom':
2024-11-27 14:50:14,624 - INFO - - Path: N/A, Text: In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Content-Type` header is `application/json` that will be sent
client.post("/upload/files", files={"file": b"my raw file content"})

# you can't explicitly override the header as it has to be dynamically generated
# to look something like: 'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983'
client.post(..., headers={"Content-Type": "multipart/form-data"})

# instead you can remove the default `application/json` header by passing Omit
client.post(..., headers={"Content-Type": Omit()})
```
2024-11-27 14:50:14,627 - INFO - - Path: N/A, Text: In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Content-Type` header is `application/json` that will be sent
client.post("/upload/files", files={"file": b"my raw file content"})

# you can't explicitly override the header as it has to be dynamically generated
# to look something like: 'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983'
client.post(..., headers={"Content-Type": "multipart/form-data"})

# instead you can remove the default `application/json` header by passing Omit
client.post(..., headers={"Content-Type": Omit()})
```
2024-11-27 14:50:14,630 - INFO - - Path: N/A, Text: In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Content-Type` header is `application/json` that will be sent
client.post("/upload/files", files={"file": b"my raw file content"})

# you can't explicitly override the header as it has to be dynamically generated
# to look something like: 'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983'
client.post(..., headers={"Content-Type": "multipart/form-data"})

# instead you can remove the default `application/json` header by passing Omit
client.post(..., headers={"Content-Type": Omit()})
```
2024-11-27 14:50:14,632 - INFO - - Path: N/A, Text: In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Content-Type` header is `application/json` that will be sent
client.post("/upload/files", files={"file": b"my raw file content"})

# you can't explicitly override the header as it has to be dynamically generated
# to look something like: 'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983'
client.post(..., headers={"Content-Type": "multipart/form-data"})

# instead you can remove the default `application/json` header by passing Omit
client.post(..., headers={"Content-Type": Omit()})
```
2024-11-27 14:50:14,636 - INFO - - Path: N/A, Text: In certain situations you need to be able to represent a case where a default value has
to be explicitly removed and `None` is not an appropriate substitute, for example:

```py
# as the default `Content-Type` header is `application/json` that will be sent
client.post("/upload/files", files={"file": b"my raw file content"})

# you can't explicitly override the header as it has to be dynamically generated
# to look something like: 'multipart/form-data; boundary=0d8382fcf5f8c3be01ca2e11002d2983'
client.post(..., headers={"Content-Type": "multipart/form-data"})

# instead you can remove the default `application/json` header by passing Omit
client.post(..., headers={"Content-Type": Omit()})
```
2024-11-27 14:50:14,639 - INFO - - Path: N/A, Text: Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class. Given a generic class
        `Model` with 2 type variables and a concrete model `Model[str, int]`,
        the value `(str, int)` would be passed to `params`.

Returns:
    String representing the new class where `params` are passed to `cls` as type variables.

Raises:
    TypeError: Raised when trying to generate concrete names for non-generic models.
2024-11-27 14:50:14,641 - INFO - - Path: N/A, Text: Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class. Given a generic class
        `Model` with 2 type variables and a concrete model `Model[str, int]`,
        the value `(str, int)` would be passed to `params`.

Returns:
    String representing the new class where `params` are passed to `cls` as type variables.

Raises:
    TypeError: Raised when trying to generate concrete names for non-generic models.
2024-11-27 14:50:14,645 - INFO - - Path: N/A, Text: Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class. Given a generic class
        `Model` with 2 type variables and a concrete model `Model[str, int]`,
        the value `(str, int)` would be passed to `params`.

Returns:
    String representing the new class where `params` are passed to `cls` as type variables.

Raises:
    TypeError: Raised when trying to generate concrete names for non-generic models.
2024-11-27 14:50:14,648 - INFO - - Path: N/A, Text: Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class. Given a generic class
        `Model` with 2 type variables and a concrete model `Model[str, int]`,
        the value `(str, int)` would be passed to `params`.

Returns:
    String representing the new class where `params` are passed to `cls` as type variables.

Raises:
    TypeError: Raised when trying to generate concrete names for non-generic models.
2024-11-27 14:50:14,652 - INFO - - Path: N/A, Text: Compute the class name for parametrizations of generic classes.

This method can be overridden to achieve a custom naming scheme for generic BaseModels.

Args:
    params: Tuple of types of the class. Given a generic class
        `Model` with 2 type variables and a concrete model `Model[str, int]`,
        the value `(str, int)` would be passed to `params`.

Returns:
    String representing the new class where `params` are passed to `cls` as type variables.

Raises:
    TypeError: Raised when trying to generate concrete names for non-generic models.
